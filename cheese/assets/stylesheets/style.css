@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  margin: 0.67em 0;
  font-size: 2em; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  overflow: visible;
  /* 2 */
  height: 0;
  /* 1 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  display: block;
  text-decoration: none;
  color: #000;
  background-color: transparent;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr [title] {
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  /* 2 */
  font-size: 100%;
  /* 1 */
  font-family: inherit;
  /* 1 */
  line-height: 1.15;
  /* 1 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table;
  /* 1 */
  padding: 0;
  /* 3 */
  max-width: 100%;
  /* 1 */
  box-sizing: border-box;
  /* 1 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* 自定義設定
  ============================================================================ */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: 100%;
  font-weight: normal; }

address {
  font-style: normal; }

p {
  margin: 0; }

ul {
  margin: 0;
  list-style-type: none;
  padding: 0; }

/* box-sizing 設定 */
*,
*::before,
*::after {
  box-sizing: border-box; }

div:focus,
span:focus,
article:focus,
section:focus,
a:focus,
ul:focus,
li:focus {
  outline: none; }

/* 去除input的藍色框框 */
input,
button,
select,
textarea {
  outline: none; }

img {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
  border: 0;
  border-style: none; }

/* 去除異常空格 */
picture {
  overflow: hidden;
  font-size: 0; }

@font-face {
  font-family: 'futura-pt';
  src: url("../font/FuturaPTLight.otf"); }

@font-face {
  font-family: 'proxima-nova';
  src: url("../font/Proxima Nova Thin.otf"); }

html {
  font-size: 16px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Microsoft JhengHei', Roboto, 'Helvetica Neue', Arial, sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'futura-pt', sans-serif; }

p {
  font-size: 0.75rem;
  font-family: 'proxima-nova', sans-serif;
  font-weight: 300;
  color: #575757;
  line-height: 1.4rem; }

.u-flex {
  display: flex; }

.title-section {
  padding-bottom: 50px;
  width: 100%;
  margin-bottom: 48px;
  font-size: 1.1875rem;
  text-transform: uppercase;
  text-align: center;
  color: #222;
  border-bottom: 1px solid #bbb;
  letter-spacing: 1px; }

.card {
  max-width: 370px; }
  .card:hover .card_img img {
    opacity: 0.5; }
  .card_img {
    -o-object-fit: cover;
       object-fit: cover;
    max-height: 370px;
    margin-bottom: 18px; }
    .card_img img {
      transition: all 0.5s; }
  .card_title {
    font-size: 0.875rem;
    font-family: 'futura-pt', sans-serif;
    font-weight: 300;
    text-transform: uppercase;
    text-align: center;
    color: #404040;
    letter-spacing: 1px; }

.icon-circle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  font-size: 0.9375rem;
  color: #fff;
  background: #222;
  border-radius: 50%; }

.form-row {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  flex-direction: column;
  margin-bottom: 28px; }

label {
  margin-bottom: 6px;
  font-size: 0.75rem;
  font-family: 'proxima-nova', sans-serif;
  color: #575757; }

input,
select,
textarea {
  padding: 12px;
  width: 100%;
  background: #fafafa;
  border: 1px solid #ccc; }
  input:focus,
  select:focus,
  textarea:focus {
    outline: 1px solid #000; }

input {
  color: #000; }

textarea {
  min-width: 100%;
  max-width: 100%; }

.submit {
  padding: 12px 35px;
  width: initial;
  text-transform: uppercase;
  font-size: 0.875rem;
  color: #fff;
  background: #272727;
  cursor: pointer; }
  .submit:hover {
    background: #525252; }

form .form-row:last-child {
  margin-bottom: 0; }

.c-banner_title {
  font-size: 1rem; }

.c-banner_subtitle {
  font-size: 1rem; }

.c-banner_text {
  font-size: 1rem; }

.c-banner_icon {
  font-size: 1rem; }

.components {
  padding: 100px; }

.space {
  margin: 50px 0; }

.list {
  display: flex; }
  .list_item {
    margin-left: 10px; }

.slick_arrow {
  position: absolute;
  top: 50%;
  display: inline-block;
  width: 44px;
  height: 61px;
  background: rgba(0, 0, 0, 0.2);
  cursor: pointer;
  z-index: 1;
  transition: all 0.4s; }
  .slick_arrow:hover {
    background: rgba(0, 0, 0, 0.6); }
  .slick_arrow::after, .slick_arrow::before {
    position: absolute;
    left: 14px;
    content: '';
    width: 16px;
    height: 2px;
    background: #fff; }
  .slick_arrow::after {
    top: 24px;
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg); }
  .slick_arrow::before {
    bottom: 24px;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }

.slick .prev-arrow {
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  left: 0; }

.slick .next-arrow {
  -webkit-transform: translateY(-50%) rotate(180deg);
          transform: translateY(-50%) rotate(180deg);
  right: 0; }

.pagination {
  display: flex; }
  .pagination a {
    font-size: 0.75rem;
    color: #575757; }
    .pagination a:hover {
      color: #363636; }
  .pagination a:first-child {
    position: relative;
    margin-right: 10px; }
    .pagination a:first-child::after {
      position: absolute;
      top: 0;
      right: -8px;
      content: '/'; }

body {
  overflow-x: hidden;
  background: #fcfcfc; }

.container {
  margin: 0 auto;
  max-width: 1200px; }
  @media only screen and (max-width: 1199px) {
    .container {
      padding: 0 32px;
      max-width: 990px; } }
  @media only screen and (max-width: 575px) {
    .container {
      padding: 0 20px; } }

.section-space {
  margin-bottom: 90px; }
  @media only screen and (max-width: 575px) {
    .section-space {
      margin-bottom: 60px; } }

.header {
  padding-top: 100px;
  margin-bottom: 40px; }
  @media only screen and (max-width: 575px) {
    .header {
      padding-top: 30px; } }
  .header .top {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 24px; }
  .header .logo a {
    width: 100px;
    height: 160px;
    background-size: cover !important; }
  .header .nav {
    display: flex;
    align-items: center;
    justify-content: flex-end; }
    .header .nav_item {
      margin-left: 19px; }
    .header .nav_item.active .nav_link {
      color: #000; }
    .header .nav_link {
      font-size: 0.8125rem;
      font-family: 'futura-pt', sans-serif;
      text-transform: uppercase;
      color: #999;
      letter-spacing: 1px; }
      .header .nav_link:hover {
        color: #000; }
  .header .bottom {
    display: flex;
    justify-content: flex-end; }

.footer .container {
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  margin-top: 100px;
  padding-bottom: 80px;
  flex-direction: column; }
  @media only screen and (max-width: 575px) {
    .footer .container {
      margin-top: 50px;
      padding-bottom: 30px; } }

.footer_title {
  margin-bottom: 80px; }

.footer .icon-circle {
  background: #5b5b5b; }

.about .banner {
  margin-bottom: 40px; }

.aboutIntroduce_wrap {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .aboutIntroduce_wrap {
      flex-direction: column; } }

.aboutIntroduce .blok {
  padding: 0 16px;
  width: 50%; }
  @media only screen and (max-width: 575px) {
    .aboutIntroduce .blok {
      width: 100%; } }
  @media only screen and (max-width: 575px) {
    .aboutIntroduce .blok:first-child {
      margin-bottom: 90px; } }

.aboutIntroduce .text p {
  margin-bottom: 12px; }

.aboutIntroduce .text ul {
  padding-left: 40px;
  margin-bottom: 12px; }

.aboutIntroduce .text li {
  margin-bottom: 6px;
  position: relative; }

.aboutIntroduce .text li p {
  margin-bottom: 6px; }

.aboutIntroduce .text li::after {
  position: absolute;
  top: 10px;
  left: -12px;
  -webkit-transform: translate(0, -50%);
          transform: translate(0, -50%);
  content: '';
  width: 2px;
  height: 2px;
  background: #000;
  border-radius: 50%; }

.aboutAward_content {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .aboutAward_content {
      flex-direction: column; } }

.aboutAward .iconsList {
  padding: 0 16px;
  width: 16.6667%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .iconsList {
      display: flex;
      flex-direction: column;
      width: 100%; } }
  .aboutAward .iconsList img {
    margin-bottom: 34px; }

.aboutAward .description {
  display: flex;
  width: 83.33333%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .description {
      width: 100%;
      flex-direction: column; } }
  .aboutAward .description p {
    margin-bottom: 12px; }

.aboutAward .cn {
  padding: 0 16px;
  width: 50%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .cn {
      width: 100%; } }

.aboutAward .en {
  padding: 0 16px;
  width: 50%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .en {
      width: 100%; } }

.aboutInstagram_content {
  display: flex;
  flex-wrap: wrap;
  margin-right: -10px;
  margin-left: -10px; }

.aboutInstagram .link {
  padding: 0 10px;
  width: 25%; }
  @media only screen and (max-width: 575px) {
    .aboutInstagram .link {
      width: 50%;
      margin-bottom: 20px; } }

.contact {
  display: flex;
  align-items: center;
  justify-content: center; }
  .contact_wrap {
    display: flex;
    width: 100%; }
    @media only screen and (max-width: 575px) {
      .contact_wrap {
        flex-direction: column; } }

.contactInformation {
  margin-right: 32px;
  width: calc(50% - 16px); }
  @media only screen and (max-width: 575px) {
    .contactInformation {
      margin-right: 0;
      margin-bottom: 60px;
      width: 100%; } }
  .contactInformation_wrap {
    padding-top: 70px; }
  .contactInformation .text {
    margin-bottom: 50px; }
    .contactInformation .text p {
      margin-bottom: 12px; }
    .contactInformation .text strong {
      display: block;
      font-size: 0.75rem;
      margin-bottom: 20px; }
  .contactInformation .line {
    width: 100%;
    height: 1px;
    background: #bbb;
    margin-bottom: 50px; }
  .contactInformation .map iframe {
    width: 100%;
    height: 400px; }

.contactForm {
  width: calc(50% - 16px); }
  @media only screen and (max-width: 575px) {
    .contactForm {
      width: 100%; } }

.home_wrap {
  position: relative; }

.home .bannerSlick {
  position: relative; }
  .home .bannerSlick img {
    width: 100%;
    height: 100vh;
    -o-object-fit: cover;
       object-fit: cover; }
  .home .bannerSlick::after {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    content: '';
    background: rgba(0, 0, 0, 0.2); }

.home .slick-arrow {
  display: none !important; }

.home .bannerBody {
  position: absolute;
  top: 50%;
  left: 60px;
  color: #fff;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }
  @media only screen and (max-width: 575px) {
    .home .bannerBody {
      left: 20px; } }
  .home .bannerBody .title {
    font-size: 3.875rem; }
  .home .bannerBody .subtitle {
    margin-bottom: 30px;
    font-family: 'futura-pt', sans-serif;
    font-weight: 300;
    color: #dcdcdc;
    letter-spacing: 1.6px; }
  .home .bannerBody .btn {
    color: #fff;
    letter-spacing: 3px; }

.home .list {
  position: absolute;
  bottom: 60px;
  left: 60px; }
  @media only screen and (max-width: 575px) {
    .home .list {
      bottom: 20px;
      left: 20px; } }
  .home .list_item {
    margin: 0 2px 0 0; }

.home .icon-circle {
  font-size: 1rem;
  background: transparent; }

.pressPlatform_wrap {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .pressPlatform_wrap {
      flex-wrap: wrap; } }

.pressPlatform .link {
  padding: 0 16px;
  width: 25%; }
  @media only screen and (max-width: 575px) {
    .pressPlatform .link {
      width: 50%;
      margin-bottom: 30px; } }

.pressShow-slick .item {
  margin-bottom: 90px; }

.pressShow-slick .title {
  margin-bottom: 34px; }

.pressShow-link {
  display: flex;
  flex-wrap: wrap;
  justify-content: center; }
  .pressShow-link .item {
    padding: 0 16px;
    width: 33.3333%;
    margin-bottom: 90px; }
    @media only screen and (max-width: 575px) {
      .pressShow-link .item {
        padding: 0;
        width: 100%;
        margin-bottom: 50px; } }
    .pressShow-link .item_img {
      margin-bottom: 18px;
      position: relative; }
      .pressShow-link .item_img:hover .btn-link {
        display: block; }
    .pressShow-link .item .btn-link {
      position: absolute;
      top: 8px;
      left: 8px;
      display: none;
      padding: 5px;
      font-size: 0.75rem;
      font-weight: 500;
      color: #fff;
      background: #bd081c; }
      .pressShow-link .item .btn-link:hover {
        background: #920516; }
    .pressShow-link .item .fab.fa-pinterest {
      margin-right: 5px; }
    .pressShow-link .item_title {
      display: block;
      margin-bottom: 12px;
      font-size: 0.75rem;
      font-weight: 900;
      color: #575757; }
    .pressShow-link .item_text {
      font-size: 0.75rem;
      color: #575757; }

.service .block {
  display: flex;
  margin-right: -16px;
  margin-left: -16px;
  margin-bottom: 68px; }
  @media only screen and (max-width: 575px) {
    .service .block {
      flex-direction: column; } }
  .service .block p {
    margin-bottom: 12px; }
  .service .block > div:nth-child(1) {
    padding: 0 16px;
    width: 41.6667%; }
    @media only screen and (max-width: 575px) {
      .service .block > div:nth-child(1) {
        width: 100%;
        margin-bottom: 30px; } }
  .service .block > div:nth-child(2) {
    padding: 0 16px;
    width: 25%; }
    @media only screen and (max-width: 575px) {
      .service .block > div:nth-child(2) {
        width: 100%; } }
  .service .block > div:nth-child(3) {
    padding: 0 16px;
    width: 33.3333%; }
    @media only screen and (max-width: 575px) {
      .service .block > div:nth-child(3) {
        width: 100%; } }

.service .message {
  text-align: center; }
  .service .message a {
    position: relative;
    display: inline-block;
    margin-left: 5px;
    font-weight: 600;
    color: #111; }
    .service .message a:hover {
      color: #444; }
      .service .message a:hover::after {
        background: #444; }
    .service .message a::after {
      position: absolute;
      bottom: 2px;
      content: '';
      left: 0;
      width: 100%;
      height: 1px;
      background: #cdcdcd; }

.serviceProcess .step {
  font-size: 0.875rem;
  font-weight: 300;
  text-align: center;
  color: #575757; }
  .serviceProcess .step h3 {
    margin-bottom: 12px; }

.servicePrice_content {
  margin-bottom: 50px;
  border-bottom: 1px solid #bbb; }

.servicePrice .normal {
  margin-bottom: 40px;
  font-size: 0.9375rem;
  font-weight: 400;
  text-align: center;
  color: #575757; }

.servicePrice .item {
  padding: 0 16px;
  width: 41.6667%;
  font-size: 0.875rem;
  font-weight: 300;
  text-align: center;
  color: #575757; }
  .servicePrice .item h3 {
    margin-bottom: 12px; }

.workShow_wrap {
  display: flex;
  flex-wrap: wrap;
  margin-right: -20px;
  margin-left: -20px; }

.workShow .card {
  margin: 0 20px;
  width: calc(33.3333% - 40px);
  margin-bottom: 40px; }
  @media only screen and (max-width: 575px) {
    .workShow .card {
      width: calc(50% - 40px);
      margin-bottom: 20px; } }

.details_wrap {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .details_wrap {
      flex-direction: column; } }

.details .workShow_wrap {
  padding: 0 32px; }
  @media only screen and (max-width: 575px) {
    .details .workShow_wrap {
      margin-right: -8px;
      margin-left: -8px;
      padding: 0 16px; } }

@media only screen and (max-width: 575px) {
  .details .card {
    margin: 0 8px 40px;
    width: calc(50% - 16px); } }

.detailsGallery {
  padding: 0 16px;
  width: 75%; }
  @media only screen and (max-width: 575px) {
    .detailsGallery {
      width: 100%; } }
  .detailsGallery img {
    margin-bottom: 24px; }

.detailsContent {
  padding: 0 16px;
  width: 25%; }
  @media only screen and (max-width: 575px) {
    .detailsContent {
      width: 100%; } }
  .detailsContent .title {
    margin-bottom: 40px;
    font-size: 1.1875rem;
    font-family: 'futura-pt', sans-serif;
    color: #222;
    letter-spacing: 1.1px;
    line-height: 1.4; }
  .detailsContent .text p {
    margin-bottom: 30px; }
  .detailsContent .cn {
    margin-bottom: 80px; }
  .detailsContent .city,
  .detailsContent .year,
  .detailsContent .size,
  .detailsContent .photographer {
    display: flex;
    align-items: center;
    font-size: 0.75rem; }
    @media only screen and (max-width: 575px) {
      .detailsContent .city,
      .detailsContent .year,
      .detailsContent .size,
      .detailsContent .photographer {
        margin-bottom: 10px; } }
    .detailsContent .city p,
    .detailsContent .year p,
    .detailsContent .size p,
    .detailsContent .photographer p {
      font-weight: 700; }
  .detailsContent .label {
    margin-right: 8px;
    font-weight: 900;
    color: #575757;
    -webkit-transform: translateY(-2px);
            transform: translateY(-2px); }

.detailsPagination {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 50px;
  padding: 0 32px; }
  @media only screen and (max-width: 575px) {
    .detailsPagination {
      margin-top: 80px;
      padding: 0 20px; } }
  .detailsPagination .back {
    font-size: 0.75rem; }
    .detailsPagination .back:hover {
      color: dimgray; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
