@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  margin: 0.67em 0;
  font-size: 2em; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  overflow: visible;
  /* 2 */
  height: 0;
  /* 1 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  display: block;
  text-decoration: none;
  color: #000;
  background-color: transparent;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr [title] {
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  /* 2 */
  font-size: 100%;
  /* 1 */
  font-family: inherit;
  /* 1 */
  line-height: 1.15;
  /* 1 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table;
  /* 1 */
  padding: 0;
  /* 3 */
  max-width: 100%;
  /* 1 */
  box-sizing: border-box;
  /* 1 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* 自定義設定
  ============================================================================ */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: 100%;
  font-weight: normal; }

address {
  font-style: normal; }

p {
  margin: 0; }

ul {
  margin: 0;
  list-style-type: none;
  padding: 0; }

/* box-sizing 設定 */
*,
*::before,
*::after {
  box-sizing: border-box; }

div:focus,
span:focus,
article:focus,
section:focus,
a:focus,
ul:focus,
li:focus {
  outline: none; }

/* 去除input的藍色框框 */
input,
button,
select,
textarea {
  outline: none; }

img {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
  border: 0;
  border-style: none; }

/* 去除異常空格 */
picture {
  overflow: hidden;
  font-size: 0; }

@font-face {
  font-family: 'futura-pt';
  src: url("../font/FuturaPTLight.otf"); }

@font-face {
  font-family: 'proxima-nova';
  src: url("../font/Proxima Nova Thin.otf"); }

html {
  font-size: 16px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Microsoft JhengHei', Roboto, 'Helvetica Neue', Arial, sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'futura-pt', sans-serif; }

p {
  font-size: 1rem;
  font-family: 'proxima-nova', sans-serif;
  font-weight: 500;
  color: #575757;
  line-height: 1.5rem; }

.u-flex {
  display: flex; }

.title-section {
  padding-bottom: 50px;
  width: 100%;
  margin-bottom: 48px;
  font-size: 1.1875rem;
  text-transform: uppercase;
  text-align: center;
  color: #222;
  border-bottom: 1px solid #bbb;
  letter-spacing: 1px; }

.card {
  max-width: 370px; }
  .card:hover .card_img img {
    opacity: 0.5; }
  .card_img {
    overflow: hidden;
    height: 100%;
    max-height: 370px;
    margin-bottom: 18px; }
    .card_img img {
      -o-object-fit: cover;
         object-fit: cover;
      height: 100%;
      transition: all 0.5s; }
  .card_title {
    font-size: 0.875rem;
    font-family: 'futura-pt', sans-serif;
    font-weight: 300;
    text-transform: uppercase;
    text-align: center;
    color: #404040;
    letter-spacing: 1px; }

.icon-circle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  font-size: 0.9375rem;
  color: #fff;
  background: #222;
  border-radius: 50%; }

.form-row {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  flex-direction: column;
  margin-bottom: 28px; }

label {
  margin-bottom: 6px;
  font-size: 0.75rem;
  font-family: 'proxima-nova', sans-serif;
  color: #575757; }

input,
select,
textarea {
  padding: 12px;
  width: 100%;
  background: #fafafa;
  border: 1px solid #ccc; }
  input:focus,
  select:focus,
  textarea:focus {
    outline: 1px solid #000; }

input {
  color: #000; }

textarea {
  min-width: 100%;
  max-width: 100%; }

.submit {
  padding: 12px 35px;
  width: initial;
  text-transform: uppercase;
  font-size: 0.875rem;
  color: #fff;
  background: #272727;
  cursor: pointer; }
  .submit:hover {
    background: #525252; }

form .form-row:last-child {
  margin-bottom: 0; }

.c-banner_title {
  font-size: 1rem; }

.c-banner_subtitle {
  font-size: 1rem; }

.c-banner_text {
  font-size: 1rem; }

.c-banner_icon {
  font-size: 1rem; }

.components {
  padding: 100px; }

.space {
  margin: 50px 0; }

.list {
  display: flex; }
  .list_item {
    margin-left: 10px; }

.slick_arrow {
  position: absolute;
  top: 50%;
  display: inline-block;
  width: 44px;
  height: 61px;
  background: rgba(0, 0, 0, 0.2);
  cursor: pointer;
  z-index: 1;
  transition: all 0.4s; }
  .slick_arrow:hover {
    background: rgba(0, 0, 0, 0.6); }
  .slick_arrow::after, .slick_arrow::before {
    position: absolute;
    left: 14px;
    content: '';
    width: 16px;
    height: 2px;
    background: #fff; }
  .slick_arrow::after {
    top: 24px;
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg); }
  .slick_arrow::before {
    bottom: 24px;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }

.slick .prev-arrow {
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  left: 0; }

.slick .next-arrow {
  -webkit-transform: translateY(-50%) rotate(180deg);
          transform: translateY(-50%) rotate(180deg);
  right: 0; }

.pagination {
  display: flex; }
  .pagination a {
    font-size: 0.75rem;
    color: #575757; }
    .pagination a:hover {
      color: #363636; }
  .pagination a:first-child {
    position: relative;
    margin-right: 10px; }
    .pagination a:first-child::after {
      position: absolute;
      top: 0;
      right: -8px;
      content: '/'; }

.hamburger {
  display: flex;
  align-items: center;
  justify-content: center;
  display: none;
  flex-direction: column;
  width: 40px;
  height: 40px;
  border: 1px solid #575757;
  border-radius: 4px; }
  @media only screen and (max-width: 575px) {
    .hamburger {
      display: flex; } }
  .hamburger .line {
    width: 20px;
    height: 2px;
    background: #575757; }
    .hamburger .line:not(:last-child) {
      margin-bottom: 3px; }

body {
  overflow-x: hidden;
  background: #fcfcfc; }

.container {
  margin: 0 auto;
  max-width: 1200px; }
  @media only screen and (max-width: 1199px) {
    .container {
      padding: 0 32px;
      max-width: 990px; } }
  @media only screen and (max-width: 575px) {
    .container {
      padding: 0 20px; } }

.section-space {
  margin-bottom: 90px; }
  @media only screen and (max-width: 575px) {
    .section-space {
      margin-bottom: 60px; } }

.header {
  padding-top: 100px;
  margin-bottom: 40px; }
  @media only screen and (max-width: 575px) {
    .header {
      padding-top: 0; } }
  .header .container {
    position: relative; }
  .header .top {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 24px; }
    @media only screen and (max-width: 575px) {
      .header .top {
        flex-direction: column-reverse; } }
    .header .top .btn {
      display: none;
      padding-top: 20px;
      margin-bottom: 20px;
      cursor: pointer; }
      @media only screen and (max-width: 575px) {
        .header .top .btn {
          display: block; } }
  @media only screen and (max-width: 575px) {
    .header .logo {
      margin-bottom: 40px; } }
  .header .logo a {
    width: 100px;
    height: 100px;
    background-size: cover !important; }
  @media only screen and (max-width: 575px) {
    .header .navbar {
      display: none; } }
  .header .close.close {
    position: absolute;
    top: 10px;
    right: 10px;
    display: none;
    width: 40px;
    height: 40px;
    border: 1px solid #000; }
    @media only screen and (max-width: 575px) {
      .header .close.close {
        display: block; } }
    .header .close.close::after {
      position: absolute;
      bottom: 18px;
      right: 8px;
      width: 24px;
      height: 1px;
      background: #000;
      -webkit-transform: rotate(-45deg);
              transform: rotate(-45deg);
      content: ''; }
    .header .close.close::before {
      position: absolute;
      top: 21px;
      right: 8px;
      width: 24px;
      height: 1px;
      background: #000;
      -webkit-transform: rotate(45deg);
              transform: rotate(45deg);
      content: ''; }
  @media only screen and (max-width: 575px) {
    .header .navbar {
      border-bottom: 1px solid #ddd;
      width: 100%; } }
  .header .nav {
    display: flex;
    align-items: center;
    justify-content: flex-end; }
    @media only screen and (max-width: 575px) {
      .header .nav {
        justify-content: center;
        flex-direction: column;
        padding-bottom: 12px; } }
    .header .nav_item {
      margin-left: 19px; }
      @media only screen and (max-width: 575px) {
        .header .nav_item {
          margin: 0;
          padding: 10px;
          width: 100%;
          text-align: center; } }
    .header .nav_item.active .nav_link {
      color: #000; }
    .header .nav_link {
      font-size: 0.8125rem;
      font-family: 'futura-pt', sans-serif;
      text-transform: uppercase;
      color: #999;
      letter-spacing: 1px; }
      .header .nav_link:hover {
        color: #000; }
  .header .bottom {
    display: flex;
    justify-content: flex-end; }

.footer .container {
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  margin-top: 100px;
  padding-bottom: 80px;
  flex-direction: column; }
  @media only screen and (max-width: 575px) {
    .footer .container {
      margin-top: 50px;
      padding-bottom: 30px; } }

.footer_title {
  margin-bottom: 80px; }

.footer .icon-circle {
  background: #5b5b5b; }

.about .banner {
  margin-bottom: 40px; }

.aboutIntroduce_wrap {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .aboutIntroduce_wrap {
      flex-direction: column; } }

.aboutIntroduce .blok {
  padding: 0 16px;
  width: 50%; }
  @media only screen and (max-width: 575px) {
    .aboutIntroduce .blok {
      width: 100%; } }
  @media only screen and (max-width: 575px) {
    .aboutIntroduce .blok:first-child {
      margin-bottom: 90px; } }

.aboutIntroduce .text p {
  margin-bottom: 12px; }

.aboutIntroduce .text ul {
  padding-left: 40px;
  margin-bottom: 12px; }

.aboutIntroduce .text li {
  margin-bottom: 6px;
  position: relative; }

.aboutIntroduce .text li p {
  margin-bottom: 6px; }

.aboutIntroduce .text li::after {
  position: absolute;
  top: 10px;
  left: -12px;
  -webkit-transform: translate(0, -50%);
          transform: translate(0, -50%);
  content: '';
  width: 2px;
  height: 2px;
  background: #000;
  border-radius: 50%; }

.aboutAward_content {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .aboutAward_content {
      flex-direction: column; } }

.aboutAward .iconsList {
  padding: 0 16px;
  width: 16.6667%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .iconsList {
      display: flex;
      flex-direction: column;
      width: 100%; } }
  .aboutAward .iconsList img {
    margin-bottom: 34px; }

.aboutAward .description {
  display: flex;
  width: 83.33333%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .description {
      width: 100%;
      flex-direction: column; } }
  .aboutAward .description p {
    margin-bottom: 12px; }

.aboutAward .cn {
  padding: 0 16px;
  width: 50%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .cn {
      width: 100%; } }

.aboutAward .en {
  padding: 0 16px;
  width: 50%; }
  @media only screen and (max-width: 575px) {
    .aboutAward .en {
      width: 100%; } }

.aboutInstagram_content {
  display: flex;
  flex-wrap: wrap;
  margin-right: -10px;
  margin-left: -10px; }

.aboutInstagram .link {
  padding: 0 10px;
  width: 25%; }
  @media only screen and (max-width: 575px) {
    .aboutInstagram .link {
      width: 50%;
      margin-bottom: 20px; } }

.contact {
  display: flex;
  align-items: center;
  justify-content: center; }
  .contact_wrap {
    display: flex;
    width: 100%; }
    @media only screen and (max-width: 575px) {
      .contact_wrap {
        flex-direction: column; } }

.contactInformation {
  margin-right: 32px;
  width: calc(50% - 16px); }
  @media only screen and (max-width: 575px) {
    .contactInformation {
      margin-right: 0;
      margin-bottom: 60px;
      width: 100%; } }
  .contactInformation_wrap {
    padding-top: 70px; }
  .contactInformation .text {
    margin-bottom: 50px; }
    .contactInformation .text p {
      margin-bottom: 12px; }
    .contactInformation .text strong {
      display: block;
      font-size: 0.75rem;
      margin-bottom: 20px; }
  .contactInformation .line {
    width: 100%;
    height: 1px;
    background: #bbb;
    margin-bottom: 50px; }
  .contactInformation .map iframe {
    width: 100%;
    height: 400px; }

.contactForm {
  width: calc(50% - 16px); }
  @media only screen and (max-width: 575px) {
    .contactForm {
      width: 100%; } }

.home_wrap {
  position: relative; }

.home .bannerSlick {
  position: relative; }
  .home .bannerSlick img {
    width: 100%;
    height: 100vh;
    -o-object-fit: cover;
       object-fit: cover; }
  .home .bannerSlick::after {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    content: '';
    background: rgba(0, 0, 0, 0.2); }

.home .slick-arrow {
  display: none !important; }

.home .bannerBody {
  position: absolute;
  top: 50%;
  left: 60px;
  color: #fff;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%); }
  @media only screen and (max-width: 575px) {
    .home .bannerBody {
      left: 20px; } }
  .home .bannerBody .title {
    font-size: 3.875rem; }
  .home .bannerBody .subtitle {
    margin-bottom: 30px;
    font-family: 'futura-pt', sans-serif;
    font-weight: 300;
    color: #dcdcdc;
    letter-spacing: 1.6px; }
  .home .bannerBody .btn {
    color: #fff;
    letter-spacing: 3px; }

.home .list {
  position: absolute;
  bottom: 60px;
  left: 60px; }
  @media only screen and (max-width: 575px) {
    .home .list {
      bottom: 20px;
      left: 20px; } }
  .home .list_item {
    margin: 0 2px 0 0; }

.home .icon-circle {
  font-size: 1rem;
  background: transparent; }

.pressPlatform_wrap {
  display: flex;
  margin-right: -16px;
  margin-left: -16px; }
  @media only screen and (max-width: 575px) {
    .pressPlatform_wrap {
      flex-wrap: wrap; } }

.pressPlatform .link {
  padding: 0 16px;
  width: 25%; }
  @media only screen and (max-width: 575px) {
    .pressPlatform .link {
      width: 50%;
      margin-bottom: 30px; } }

.pressShow-slick .item {
  margin-bottom: 90px; }

.pressShow-slick .title {
  margin-bottom: 34px; }

.pressShow-link {
  display: flex;
  flex-wrap: wrap;
  justify-content: center; }
  .pressShow-link .item {
    padding: 0 16px;
    width: 25%;
    margin-bottom: 90px; }
    @media only screen and (max-width: 575px) {
      .pressShow-link .item {
        padding: 0;
        width: 100%;
        margin-bottom: 50px; } }
    .pressShow-link .item_img {
      margin-bottom: 18px;
      position: relative; }
      .pressShow-link .item_img:hover .btn-link {
        display: block; }
    .pressShow-link .item .btn-link {
      position: absolute;
      top: 8px;
      left: 8px;
      display: none;
      padding: 5px;
      font-size: 0.75rem;
      font-weight: 500;
      color: #fff;
      background: #bd081c; }
      .pressShow-link .item .btn-link:hover {
        background: #920516; }
    .pressShow-link .item .fab.fa-pinterest {
      margin-right: 5px; }
    .pressShow-link .item_title {
      display: block;
      margin-bottom: 12px;
      font-size: 0.75rem;
      font-weight: 900;
      color: #575757; }
    .pressShow-link .item_text {
      font-size: 0.75rem;
      color: #575757; }

.service .block {
  display: flex;
  margin-right: -16px;
  margin-left: -16px;
  margin-bottom: 68px; }
  @media only screen and (max-width: 575px) {
    .service .block {
      flex-direction: column; } }
  .service .block p {
    margin-bottom: 12px; }
  .service .block > div:nth-child(1) {
    padding: 0 16px;
    width: 41.6667%; }
    @media only screen and (max-width: 575px) {
      .service .block > div:nth-child(1) {
        width: 100%;
        margin-bottom: 30px; } }
  .service .block > div:nth-child(2) {
    padding: 0 16px;
    width: 25%; }
    @media only screen and (max-width: 575px) {
      .service .block > div:nth-child(2) {
        width: 100%; } }
  .service .block > div:nth-child(3) {
    padding: 0 16px;
    width: 33.3333%; }
    @media only screen and (max-width: 575px) {
      .service .block > div:nth-child(3) {
        width: 100%; } }

.service .message {
  text-align: center; }
  .service .message a {
    position: relative;
    display: inline-block;
    margin-left: 5px;
    font-weight: 600;
    color: #111; }
    .service .message a:hover {
      color: #444; }
      .service .message a:hover::after {
        background: #444; }
    .service .message a::after {
      position: absolute;
      bottom: 2px;
      content: '';
      left: 0;
      width: 100%;
      height: 1px;
      background: #cdcdcd; }

.serviceProcess .step {
  font-size: 0.875rem;
  font-weight: 300;
  text-align: center;
  color: #575757; }
  .serviceProcess .step h3 {
    margin-bottom: 12px; }

.servicePrice_content {
  margin-bottom: 50px;
  border-bottom: 1px solid #bbb; }

.servicePrice .normal {
  margin-bottom: 40px;
  font-size: 0.9375rem;
  font-weight: 400;
  text-align: center;
  color: #575757; }

.servicePrice .item {
  padding: 0 16px;
  width: 41.6667%;
  font-size: 0.875rem;
  font-weight: 300;
  text-align: center;
  color: #575757; }
  .servicePrice .item h3 {
    margin-bottom: 12px; }

.workShow_wrap {
  display: flex;
  flex-wrap: wrap;
  margin-right: -20px;
  margin-left: -20px; }

.workShow .card {
  margin: 0 20px;
  width: calc(33.3333% - 40px);
  margin-bottom: 70px; }
  @media only screen and (max-width: 575px) {
    .workShow .card {
      width: calc(50% - 40px);
      margin-bottom: 70px; } }
  @media only screen and (max-width: 375px) {
    .workShow .card {
      width: calc(100% - 40px); } }

.details_wrap {
  display: flex; }
  @media only screen and (max-width: 575px) {
    .details_wrap {
      flex-direction: column;
      padding: 0; } }

.details .workShow_wrap {
  margin: 0 auto;
  max-width: 1200px; }
  @media only screen and (max-width: 1199px) {
    .details .workShow_wrap {
      max-width: 932px; } }
  @media only screen and (max-width: 575px) {
    .details .workShow_wrap {
      margin-right: -8px;
      margin-left: -8px;
      padding: 0 16px; } }

.details .card {
  margin: 0 16px;
  width: calc(33.3333% - 32px); }
  @media only screen and (max-width: 575px) {
    .details .card {
      margin: 0 8px 70px;
      width: calc(50% - 16px); } }

.detailsGallery {
  padding: 0 16px;
  width: 75%; }
  @media only screen and (max-width: 575px) {
    .detailsGallery {
      width: 100%; } }
  .detailsGallery img {
    margin-bottom: 24px; }

.detailsContent {
  padding: 0 16px;
  width: 25%; }
  @media only screen and (max-width: 575px) {
    .detailsContent {
      width: 100%; } }
  .detailsContent .title {
    margin-bottom: 40px;
    font-size: 1.1875rem;
    font-family: 'futura-pt', sans-serif;
    color: #222;
    letter-spacing: 1.1px;
    line-height: 1.4; }
  .detailsContent .text p {
    margin-bottom: 30px; }
  .detailsContent .cn {
    margin-bottom: 80px; }
  .detailsContent .city,
  .detailsContent .year,
  .detailsContent .size,
  .detailsContent .photographer {
    display: flex;
    align-items: center;
    font-size: 0.75rem; }
    @media only screen and (max-width: 575px) {
      .detailsContent .city,
      .detailsContent .year,
      .detailsContent .size,
      .detailsContent .photographer {
        margin-bottom: 10px; } }
    .detailsContent .city p,
    .detailsContent .year p,
    .detailsContent .size p,
    .detailsContent .photographer p {
      font-weight: 700; }
  .detailsContent .label {
    margin-right: 8px;
    font-weight: 900;
    color: #575757;
    -webkit-transform: translateY(-2px);
            transform: translateY(-2px); }

.detailsPagination {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 0 auto;
  padding: 0 16px;
  margin-bottom: 50px;
  max-width: 1200px; }
  @media only screen and (max-width: 1199px) {
    .detailsPagination {
      max-width: 900px; } }
  @media only screen and (max-width: 575px) {
    .detailsPagination {
      margin-top: 80px;
      padding: 0 20px; } }
  .detailsPagination .back {
    font-size: 0.75rem; }
    .detailsPagination .back:hover {
      color: dimgray; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9zdHlsZXNoZWV0cy9zdHlsZS5jc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvYmFzZS9fcmVzZXQuc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy9iYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvdXRpbHMvX21peGluLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvdXRpbHMvX2Z1bmN0aW9ucy5zY3NzIiwiYXNzZXRzL3N0eWxlc2hlZXRzL2NvbXBvbmVudHMvX3RpdGxlLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvY29tcG9uZW50cy9fY2FyZC5zY3NzIiwiYXNzZXRzL3N0eWxlc2hlZXRzL2NvbXBvbmVudHMvX2J1dHRvbnMuc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy91dGlscy9fdmFyaWFibGVzLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvY29tcG9uZW50cy9fZm9ybXMuc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy9jb21wb25lbnRzL19iYW5uZXIuc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy9jb21wb25lbnRzL19saXN0LnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvY29tcG9uZW50cy9fc2xpY2suc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy9jb21wb25lbnRzL19wYWdpbmF0aW9uLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvY29tcG9uZW50cy9faGFtYnVyZ2VyLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvbGF5b3V0L19ncmlkLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvbGF5b3V0L19oZWFkZXIuc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy9sYXlvdXQvX2Zvb3Rlci5zY3NzIiwiYXNzZXRzL3N0eWxlc2hlZXRzL3BhZ2VzL19hYm91dC5zY3NzIiwiYXNzZXRzL3N0eWxlc2hlZXRzL3BhZ2VzL19jb250YWN0LnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvcGFnZXMvX2luZGV4LnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvcGFnZXMvX3ByZXNzLnNjc3MiLCJhc3NldHMvc3R5bGVzaGVldHMvcGFnZXMvX3NlcnZpY2Uuc2NzcyIsImFzc2V0cy9zdHlsZXNoZWV0cy9wYWdlcy9fd29yay5zY3NzIiwiYXNzZXRzL3N0eWxlc2hlZXRzL3BhZ2VzL19kZXRhaWxzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FDQWhCLDJFQUFBO0FBRUE7K0VEQytFO0FDRS9FOzs7RURFRTtBQ0dEO0VBQ0MsaUJBQWlCO0VBQUUsTUFBQTtFQUNuQiw4QkFBOEI7RUFBRSxNQUFBLEVBQU87O0FBR3pDOytFREErRTtBQ0cvRTs7RURBRTtBQ0lGO0VBQ0UsU0FBUyxFQUFBOztBQUdYOztFREZFO0FDTUY7RUFDRSxjQUFjLEVBQUE7O0FBR2hCOzs7RURIRTtBQ1FGO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWMsRUFBQTs7QUFHaEI7K0VEUCtFO0FDVS9FOzs7RURORTtBQ1dGO0VBQ0UsdUJBQXVCO0VBQUUsTUFBQTtFQUN6QixpQkFBaUI7RUFBRSxNQUFBO0VBQ25CLFNBQVM7RUFBRSxNQUFBLEVBQU87O0FBR3BCOzs7RURMRTtBQ1VGO0VBQ0UsY0FBYztFQUFFLE1BQUE7RUFDaEIsc0JBQXNCO0VBQUUsTUFBQSxFQUFPOztBQUdqQzsrRURQK0U7QUNVL0U7O0VEUEU7QUNXRjtFQUNFLGNBQWM7RUFDZCxxQkFBcUI7RUFDckIsV0FBVztFQUNYLDZCQUE2QjtFQUM3Qiw2Q0FBNkMsRUFBQTs7QUFHL0M7OztFRFJFO0FDYUY7RUFDRSwwQkFBMEI7RUFBRSxNQUFBO0VBQzVCLHlDQUFpQztVQUFqQyxpQ0FBaUM7RUFBRSxNQUFBLEVBQU87O0FBRzVDOztFRFRFO0FDYUY7O0VBRUUsbUJBQW1CLEVBQUE7O0FBR3JCOzs7RURWRTtBQ2VGOzs7RUFHRSxjQUFjO0VBQUUsTUFBQTtFQUNoQixzQkFBc0I7RUFBRSxNQUFBLEVBQU87O0FBR2pDOztFRFhFO0FDZUY7RUFDRSxjQUFjLEVBQUE7O0FBR2hCOzs7RURaRTtBQ2lCRjs7RUFFRSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGNBQWM7RUFDZCx3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSxlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsV0FBVyxFQUFBOztBQUdiOytFRGxCK0U7QUNxQi9FOytFRG5CK0U7QUNzQi9FOzs7RURsQkU7QUN1QkY7Ozs7O0VBS0UsU0FBUztFQUFFLE1BQUE7RUFDWCxlQUFlO0VBQUUsTUFBQTtFQUNqQixvQkFBb0I7RUFBRSxNQUFBO0VBQ3RCLGlCQUFpQjtFQUFFLE1BQUEsRUFBTzs7QUFHNUI7OztFRGhCRTtBQ3FCRjs7RUFDUSxNQUFBO0VBQ04saUJBQWlCLEVBQUE7O0FBR25COzs7RURqQkU7QUNzQkY7O0VBQ1MsTUFBQTtFQUNQLG9CQUFvQixFQUFBOztBQUd0Qjs7RURuQkU7QUN1QkY7Ozs7RUFJRSwwQkFBMEIsRUFBQTs7QUFHNUI7O0VEckJFO0FDeUJGOzs7O0VBSUUsVUFBVTtFQUNWLGtCQUFrQixFQUFBOztBQUdwQjs7RUR2QkU7QUMyQkY7Ozs7RUFJRSw4QkFBOEIsRUFBQTs7QUFHaEM7O0VEekJFO0FDNkJGO0VBQ0UsOEJBQThCLEVBQUE7O0FBR2hDOzs7OztFRHhCRTtBQytCRjtFQUNFLGNBQWM7RUFBRSxNQUFBO0VBQ2hCLFVBQVU7RUFBRSxNQUFBO0VBQ1osZUFBZTtFQUFFLE1BQUE7RUFDakIsc0JBQXNCO0VBQUUsTUFBQTtFQUN4QixtQkFBbUI7RUFBRSxNQUFBO0VBQ3JCLGNBQWM7RUFBRSxNQUFBLEVBQU87O0FBR3pCOztFRHZCRTtBQzJCRjtFQUNFLHdCQUF3QixFQUFBOztBQUcxQjs7RUR6QkU7QUM2QkY7RUFDRSxjQUFjLEVBQUE7O0FBR2hCOzs7RUQxQkU7QUFDRjs7RUNnQ0Usc0JBQXNCO0VBQUUsTUFBQTtFQUN4QixVQUFVO0VBQUUsTUFBQSxFQUFPOztBQUdyQjs7RUQzQkU7QUFDRjs7RUNnQ0UsWUFBWSxFQUFBOztBQUdkOzs7RUQ1QkU7QUFDRjtFQ2lDRSw2QkFBNkI7RUFBRSxNQUFBO0VBQy9CLG9CQUFvQjtFQUFFLE1BQUEsRUFBTzs7QUFHL0I7O0VEN0JFO0FBQ0Y7RUNpQ0Usd0JBQXdCLEVBQUE7O0FBRzFCOzs7RUQ5QkU7QUNtQ0Y7RUFDRSwwQkFBMEI7RUFBRSxNQUFBO0VBQzVCLGFBQWE7RUFBRSxNQUFBLEVBQU87O0FBR3hCOytFRGhDK0U7QUNtQy9FOztFRGhDRTtBQ29DRjtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7O0VEbENFO0FDc0NGO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCOytFRHJDK0U7QUN3Qy9FOztFRHJDRTtBQ3lDRjtFQUNFLGFBQWEsRUFBQTs7QUFHZjs7RUR2Q0U7QUFDRjtFQzJDRSxhQUFhLEVBQUE7O0FBR2Y7Z0ZEMUNnRjtBQzZDaEY7Ozs7OztFQU1FLFNBQVM7RUFDVCxlQUFlO0VBQ2YsbUJBQW1CLEVBQUE7O0FBSXJCO0VBQ0Usa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0UsU0FBUyxFQUFBOztBQUdYO0VBQ0UsU0FBUztFQUNULHFCQUFxQjtFQUNyQixVQUFVLEVBQUE7O0FBR1osa0JBQUE7QUFFQTs7O0VBR0Usc0JBQXNCLEVBQUE7O0FBSXhCOzs7Ozs7O0VBUUksYUFBYSxFQUFBOztBQUlqQixpQkFBQTtBQUNBOzs7O0VBSUUsYUFBYSxFQUFBOztBQUdmO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxlQUFlO0VBQ2YsWUFBWTtFQUNaLFNBQVM7RUFDVCxrQkFBa0IsRUFBQTs7QUFHcEIsV0FBQTtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVksRUFBQTs7QUM3WmQ7RUFDRSx3QkFBd0I7RUFDeEIscUNBQXFDLEVBQUE7O0FBS3ZDO0VBQ0UsMkJBQTJCO0VBQzNCLHlDQUF5QyxFQUFBOztBQVEzQztFQUNFLGVBQWU7RUFDZiw2SEFBNkgsRUFBQTs7QUFJL0g7Ozs7OztFQU1FLG9DQUFvQyxFQUFBOztBQUd0QztFQUNFLGVDbEN1QjtFRG1DdkIsdUNBQXVDO0VBQ3ZDLGdCQUFnQjtFQUNoQixjQUFjO0VBQ2QsbUJBQW1CLEVBQUE7O0FFbkNyQjtFQUNFLGFBQWEsRUFBQTs7QUNIYjtFQUNFLG9CQUFvQjtFQUNwQixXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLG9CRkxxQjtFRU9yQix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCw2QkFBNkI7RUFDN0IsbUJBQW1CLEVBQUE7O0FDWHZCO0VBQ0UsZ0JBQWdCLEVBQUE7RUFEbEI7SUFLTSxZQUFZLEVBQUE7RUFJaEI7SUFDRSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixtQkFBbUIsRUFBQTtJQUpwQjtNQU9HLG9CQUFpQjtTQUFqQixpQkFBaUI7TUFDakIsWUFBWTtNQUNaLG9CQUFvQixFQUFBO0VBS3hCO0lBQ0UsbUJIeEJxQjtJR3lCckIsb0NBQW9DO0lBQ3BDLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxtQkFBbUIsRUFBQTs7QUM5QnZCO0VKZ0JFLGFBQWE7RUFDYixtQkFGK0I7RUFHL0IsdUJBSG9CO0VJWnBCLFdBQVc7RUFDWCxZQUFZO0VBQ1osb0JKTHVCO0VJTXZCLFdDRk07RURHTixnQkFBZ0I7RUFDaEIsa0JBQWtCLEVBQUE7O0FFVHBCO0VOaUJFLGFBQWE7RUFDYix1Qk1qQm9DO0VOa0JwQywyQk1sQndCO0VBRXhCLHNCQUFzQjtFQUN0QixtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSxrQkFBa0I7RUFDbEIsa0JOUnVCO0VNU3ZCLHVDQUF1QztFQUN2QyxjQUFjLEVBQUE7O0FBSWhCOzs7RUFHRSxhQUFhO0VBQ2IsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixzQkFBc0IsRUFBQTtFQU54Qjs7O0lBU0ksdUJBQXVCLEVBQUE7O0FBSTNCO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsZUFBZTtFQUNmLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixtQk54Q3VCO0VNeUN2QixXRHJDTTtFQ3NDTixtQkFBbUI7RUFDbkIsZUFBZSxFQUFBO0VBUGpCO0lBVUksbUJBQW1CLEVBQUE7O0FBS3ZCO0VBRUksZ0JBQWdCLEVBQUE7O0FDbkRsQjtFQUNFLGVQSHFCLEVBQUE7O0FPTXZCO0VBQ0UsZVBQcUIsRUFBQTs7QU9VdkI7RUFDRSxlUFhxQixFQUFBOztBT2N2QjtFQUNFLGVQZnFCLEVBQUE7O0FRQXpCO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLGNBQWMsRUFBQTs7QUFHaEI7RUFDRSxhQUFhLEVBQUE7RUFFYjtJQUNFLGlCQUFpQixFQUFBOztBQ1puQjtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IscUJBQXFCO0VBQ3JCLFdBQVc7RUFDWCxZQUFZO0VBQ1osOEJBQThCO0VBQzlCLGVBQWU7RUFDZixVQUFVO0VBQ1Ysb0JBQW9CLEVBQUE7RUFUckI7SUFZRyw4QkFBOEIsRUFBQTtFQVpqQztJQWlCRyxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFdBQVc7SUFDWCxXQUFXO0lBQ1gsV0FBVztJQUNYLGdCQUFnQixFQUFBO0VBdEJuQjtJQTBCRyxTQUFTO0lBQ1QsaUNBQXlCO1lBQXpCLHlCQUF5QixFQUFBO0VBM0I1QjtJQStCRyxZQUFZO0lBQ1osZ0NBQXdCO1lBQXhCLHdCQUF3QixFQUFBOztBQWpDOUI7RUFzQ0ksbUNBQTJCO1VBQTNCLDJCQUEyQjtFQUMzQixPQUFPLEVBQUE7O0FBdkNYO0VBMkNJLGtEQUEwQztVQUExQywwQ0FBMEM7RUFDMUMsUUFBUSxFQUFBOztBQzVDWjtFQUNFLGFBQWEsRUFBQTtFQURmO0lBSUksa0JWSHFCO0lVSXJCLGNBQWMsRUFBQTtJQUxsQjtNQVFNLGNBQWMsRUFBQTtFQVJwQjtJQWFJLGtCQUFrQjtJQUNsQixrQkFBa0IsRUFBQTtJQWR0QjtNQWlCTSxrQkFBa0I7TUFDbEIsTUFBTTtNQUNOLFdBQVc7TUFDWCxZQUFZLEVBQUE7O0FDckJsQjtFWGtCRSxhQUFhO0VBQ2IsbUJBRitCO0VBRy9CLHVCQUhvQjtFV2RwQixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLGtCQUFrQixFQUFBO0VYK0RsQjtJV3ZFRjtNQVlJLGFBQWEsRUFBQSxFQVloQjtFQXhCRDtJQWdCSSxXQUFXO0lBQ1gsV0FBVztJQUNYLG1CQUFtQixFQUFBO0lBbEJ2QjtNQXFCTSxrQkFBa0IsRUFBQTs7QUNmeEI7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7O0FBSXJCO0VBQ0UsY0FBYztFQUNkLGlCQUFpQixFQUFBO0VadUNqQjtJWXpDRjtNQUlJLGVBQWU7TUFDZixnQkFBZ0IsRUFBQSxFQUtuQjtFWmlEQztJWTNERjtNQVFJLGVBQWUsRUFBQSxFQUVsQjs7QUFFRDtFQUNFLG1CQUFtQixFQUFBO0VaOENuQjtJWS9DRjtNQUlJLG1CQUFtQixFQUFBLEVBRXRCOztBQzdCRDtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUIsRUFBQTtFYm9FbkI7SWF0RUY7TUFLSSxjQUFjLEVBQUEsRUFvSWpCO0VBeklEO0lBU0ksa0JBQWtCLEVBQUE7RUFUdEI7SWJpQkUsYUFBYTtJQUNiLG1CYUxxQztJYk1yQyw4QmFONkI7SUFFM0IsbUJBQW1CLEVBQUE7SWJ1RHJCO01hdEVGO1FBa0JNLDhCQUE4QixFQUFBLEVBYWpDO0lBL0JIO01Bc0JNLGFBQWE7TUFDYixpQkFBaUI7TUFDakIsbUJBQW1CO01BQ25CLGVBQWUsRUFBQTtNYjZDbkI7UWF0RUY7VUE0QlEsY0FBYyxFQUFBLEVBRWpCO0Vid0NIO0lhdEVGO01BbUNNLG1CQUFtQixFQUFBLEVBUXRCO0VBM0NIO0lBdUNNLFlBQVk7SUFDWixhQUFhO0lBQ2IsaUNBQWlDLEVBQUE7RWI2QnJDO0lhdEVGO01BK0NNLGFBQWEsRUFBQSxFQUVoQjtFQWpESDtJQW9ESSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULFdBQVc7SUFDWCxhQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0IsRUFBQTtJYll4QjtNYXRFRjtRQTZETSxjQUFjLEVBQUEsRUF3QmpCO0lBckZIO01BaUVNLGtCQUFrQjtNQUNsQixZQUFZO01BQ1osVUFBVTtNQUNWLFdBQVc7TUFDWCxXQUFXO01BQ1gsZ0JBQWdCO01BQ2hCLGlDQUF5QjtjQUF6Qix5QkFBeUI7TUFDekIsV0FBVyxFQUFBO0lBeEVqQjtNQTRFTSxrQkFBa0I7TUFDbEIsU0FBUztNQUNULFVBQVU7TUFDVixXQUFXO01BQ1gsV0FBVztNQUNYLGdCQUFnQjtNQUNoQixnQ0FBd0I7Y0FBeEIsd0JBQXdCO01BQ3hCLFdBQVcsRUFBQTtFYmJmO0lhdEVGO01BeUZNLDZCQUE2QjtNQUM3QixXQUFXLEVBQUEsRUFFZDtFQTVGSDtJYmlCRSxhQUFhO0lBQ2IsbUJBRitCO0lBRy9CLHlCYTRFd0IsRUFBQTtJYnpCeEI7TWF0RUY7UUFrR00sdUJBQXVCO1FBQ3ZCLHNCQUFzQjtRQUN0QixvQkFBb0IsRUFBQSxFQStCdkI7SUFuSUg7TUF3R00saUJBQWlCLEVBQUE7TWJsQ3JCO1FhdEVGO1VBMkdRLFNBQVM7VUFDVCxhQUFhO1VBQ2IsV0FBVztVQUNYLGtCQUFrQixFQUFBLEVBRXJCO0lBaEhMO01Bb0hRLFdBQVcsRUFBQTtJQXBIbkI7TUF5SE0sb0JieEhtQjtNYXlIbkIsb0NBQW9DO01BQ3BDLHlCQUF5QjtNQUN6QixXQUFXO01BQ1gsbUJBQW1CLEVBQUE7TUE3SHpCO1FBZ0lRLFdBQVcsRUFBQTtFQWhJbkI7SUFzSUksYUFBYTtJQUNiLHlCQUF5QixFQUFBOztBQ3JJN0I7RWRlRSxhQUFhO0VBQ2IscUJjZG9DO0VkZXBDLDJCY2YwQjtFQUV4QixpQkFBaUI7RUFDakIsb0JBQW9CO0VBQ3BCLHNCQUFzQixFQUFBO0VkOER4QjtJY3BFRjtNQVNNLGdCQUFnQjtNQUNoQixvQkFBb0IsRUFBQSxFQUV2Qjs7QUFFRDtFQUNFLG1CQUFtQixFQUFBOztBQWZ2QjtFQW1CSSxtQkFBbUIsRUFBQTs7QUNyQnZCO0VBRUksbUJBQW1CLEVBQUE7O0FBTXJCO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0IsRUFBQTtFZjJEcEI7SWU5REE7TUFNSSxzQkFBc0IsRUFBQSxFQUV6Qjs7QUFUSDtFQVlJLGVBQWU7RUFDZixVQUFVLEVBQUE7RWZrRFo7SWUvREY7TUFnQk0sV0FBVyxFQUFBLEVBU2Q7RWZzQ0Q7SWUvREY7TUFxQlEsbUJBQW1CLEVBQUEsRUFFdEI7O0FBdkJMO0VBNkJNLG1CQUFtQixFQUFBOztBQTdCekI7RUFpQ00sa0JBQWtCO0VBQ2xCLG1CQUFtQixFQUFBOztBQWxDekI7RUFzQ00sa0JBQWtCO0VBQ2xCLGtCQUFrQixFQUFBOztBQXZDeEI7RUEyQ00sa0JBQWtCLEVBQUE7O0FBM0N4QjtFQStDTSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFdBQVc7RUFDWCxxQ0FBNkI7VUFBN0IsNkJBQTZCO0VBQzdCLFdBQVc7RUFDWCxVQUFVO0VBQ1YsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTs7QUFNdEI7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGtCQUFrQixFQUFBO0VmRHBCO0llRkE7TUFNSSxzQkFBc0IsRUFBQSxFQUV6Qjs7QUFUSDtFQVlJLGVBQWU7RUFDZixlQUFlLEVBQUE7RWZWakI7SWVIRjtNQWdCTSxhQUFhO01BQ2Isc0JBQXNCO01BQ3RCLFdBQVcsRUFBQSxFQU1kO0VBeEJIO0lBc0JNLG1CQUFtQixFQUFBOztBQXRCekI7RUEyQkksYUFBYTtFQUNiLGdCQUFnQixFQUFBO0VmekJsQjtJZUhGO01BK0JNLFdBQVc7TUFDWCxzQkFBc0IsRUFBQSxFQU16QjtFQXRDSDtJQW9DTSxtQkFBbUIsRUFBQTs7QUFwQ3pCO0VBeUNJLGVBQWU7RUFDZixVQUFVLEVBQUE7RWZ2Q1o7SWVIRjtNQTRDTSxXQUFXLEVBQUEsRUFFZDs7QUE5Q0g7RUFpREksZUFBZTtFQUNmLFVBQVUsRUFBQTtFZi9DWjtJZUhGO01Bb0RNLFdBQVcsRUFBQSxFQUVkOztBQUlEO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsa0JBQWtCLEVBQUE7O0FBTHRCO0VBU0ksZUFBZTtFQUNmLFVBQVUsRUFBQTtFZmhFWjtJZXNERjtNQWFNLFVBQVU7TUFDVixtQkFBbUIsRUFBQSxFQUV0Qjs7QUM1SUg7RWhCaUJFLGFBQWE7RUFDYixtQkFGK0I7RUFHL0IsdUJBSG9CLEVBQUE7RWdCYnBCO0lBQ0UsYUFBYTtJQUNiLFdBQVcsRUFBQTtJaEJpRWI7TWdCbkVBO1FBS0ksc0JBQXNCLEVBQUEsRUFFekI7O0FBR0g7RUFDRSxrQkFBa0I7RUFDbEIsdUJBQXVCLEVBQUE7RWhCdUR2QjtJZ0J6REY7TUFLSSxlQUFlO01BQ2YsbUJBQW1CO01BQ25CLFdBQVcsRUFBQSxFQW1DZDtFQS9CQztJQUNFLGlCQUFpQixFQUFBO0VBWnJCO0lBZ0JJLG1CQUFtQixFQUFBO0lBaEJ2QjtNQW1CTSxtQkFBbUIsRUFBQTtJQW5CekI7TUF1Qk0sY0FBYztNQUNkLGtCaEJwQ21CO01nQnFDbkIsbUJBQW1CLEVBQUE7RUF6QnpCO0lBOEJJLFdBQVc7SUFDWCxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLG1CQUFtQixFQUFBO0VBakN2QjtJQXNDTSxXQUFXO0lBQ1gsYUFBYSxFQUFBOztBQUtuQjtFQUNFLHVCQUF1QixFQUFBO0VoQll2QjtJZ0JiRjtNQUlJLFdBQVcsRUFBQSxFQUVkOztBQzlEQztFQUNFLGtCQUFrQixFQUFBOztBQUZ0QjtFQU1JLGtCQUFrQixFQUFBO0VBTnRCO0lBU00sV0FBVztJQUNYLGFBQWE7SUFDYixvQkFBaUI7T0FBakIsaUJBQWlCLEVBQUE7RUFYdkI7SUFlTSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLFNBQVM7SUFDVCxRQUFRO0lBQ1IsT0FBTztJQUNQLFdBQVc7SUFDWCw4QkFBOEIsRUFBQTs7QUFyQnBDO0VBMEJJLHdCQUF3QixFQUFBOztBQTFCNUI7RUE4Qkksa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixVQUFVO0VBQ1YsV1o1Qkk7RVk2QkosbUNBQTJCO1VBQTNCLDJCQUEyQixFQUFBO0VqQm9DN0I7SWlCdEVGO01BcUNNLFVBQVUsRUFBQSxFQW1CYjtFQXhESDtJQXlDTSxtQmpCeENtQixFQUFBO0VpQkR6QjtJQTZDTSxtQkFBbUI7SUFDbkIsb0NBQW9DO0lBQ3BDLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QscUJBQXFCLEVBQUE7RUFqRDNCO0lBcURNLFdaaERFO0lZaURGLG1CQUFtQixFQUFBOztBQXREekI7RUEyREksa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixVQUFVLEVBQUE7RWpCU1o7SWlCdEVGO01BZ0VNLFlBQVk7TUFDWixVQUFVLEVBQUEsRUFNYjtFQXZFSDtJQXFFTSxpQkFBaUIsRUFBQTs7QUFyRXZCO0VBMEVJLGVqQnpFcUI7RWlCMEVyQix1QkFBdUIsRUFBQTs7QUN4RXpCO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0IsRUFBQTtFbEJnRXBCO0lrQm5FQTtNQU1JLGVBQWUsRUFBQSxFQUVsQjs7QUFUSDtFQVlJLGVBQWU7RUFDZixVQUFVLEVBQUE7RWxCdURaO0lrQnBFRjtNQWdCTSxVQUFVO01BQ1YsbUJBQW1CLEVBQUEsRUFFdEI7O0FBSUE7RUFFRyxtQkFBbUIsRUFBQTs7QUFGdEI7RUFNRyxtQkFBbUIsRUFBQTs7QUFJdkI7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLHVCQUF1QixFQUFBO0VBSHhCO0lBTUcsZUFBZTtJQUNmLFVBQVU7SUFDVixtQkFBbUIsRUFBQTtJbEIyQnZCO01rQm5DQztRQVdLLFVBQVU7UUFDVixXQUFXO1FBQ1gsbUJBQW1CLEVBQUEsRUE4Q3RCO0lBM0RGO01BaUJLLG1CQUFtQjtNQUNuQixrQkFBa0IsRUFBQTtNQWxCdkI7UUFzQlMsY0FBYyxFQUFBO0lBdEJ2QjtNQTRCSyxrQkFBa0I7TUFDbEIsUUFBUTtNQUNSLFNBQVM7TUFDVCxhQUFhO01BQ2IsWUFBWTtNQUNaLGtCbEJuRWlCO01rQm9FakIsZ0JBQWdCO01BQ2hCLFdiakVBO01ha0VBLG1CQUFtQixFQUFBO01BcEN4QjtRQXVDTyxtQkFBbUIsRUFBQTtJQXZDMUI7TUE0Q0ssaUJBQWlCLEVBQUE7SUE1Q3RCO01BZ0RLLGNBQWM7TUFDZCxtQkFBbUI7TUFDbkIsa0JsQnBGaUI7TWtCcUZqQixnQkFBZ0I7TUFDaEIsY0FBYyxFQUFBO0lBcERuQjtNQXdESyxrQmxCMUZpQjtNa0IyRmpCLGNBQWMsRUFBQTs7QUM3RnRCO0VBRUksYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsbUJBQW1CLEVBQUE7RW5Ca0VyQjtJbUJ2RUY7TUFRTSxzQkFBc0IsRUFBQSxFQStCekI7RUF2Q0g7SUFZTSxtQkFBbUIsRUFBQTtFQVp6QjtJQWdCTSxlQUFlO0lBQ2YsZUFBZSxFQUFBO0luQnNEbkI7TW1CdkVGO1FBbUJRLFdBQVc7UUFDWCxtQkFBbUIsRUFBQSxFQUV0QjtFQXRCTDtJQXlCTSxlQUFlO0lBQ2YsVUFBVSxFQUFBO0luQjZDZDtNbUJ2RUY7UUE0QlEsV0FBVyxFQUFBLEVBRWQ7RUE5Qkw7SUFpQ00sZUFBZTtJQUNmLGVBQWUsRUFBQTtJbkJxQ25CO01tQnZFRjtRQW9DUSxXQUFXLEVBQUEsRUFFZDs7QUF0Q0w7RUEwQ0ksa0JBQWtCLEVBQUE7RUExQ3RCO0lBNkNNLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXLEVBQUE7SUFqRGpCO01Bb0RRLFdBQVcsRUFBQTtNQXBEbkI7UUF1RFUsZ0JBQWdCLEVBQUE7SUF2RDFCO01BNERRLGtCQUFrQjtNQUNsQixXQUFXO01BQ1gsV0FBVztNQUNYLE9BQU87TUFDUCxXQUFXO01BQ1gsV0FBVztNQUNYLG1CQUFtQixFQUFBOztBQU8zQjtFQUVJLG1CbkJ6RXFCO0VtQjBFckIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7RUFMbEI7SUFPTSxtQkFBbUIsRUFBQTs7QUFNdkI7RUFDRSxtQkFBbUI7RUFDbkIsNkJBQTZCLEVBQUE7O0FBSGpDO0VBT0ksbUJBQW1CO0VBQ25CLG9CbkIzRnFCO0VtQjRGckIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixjQUFjLEVBQUE7O0FBWGxCO0VBZUksZUFBZTtFQUNmLGVBQWU7RUFDZixtQm5CcEdxQjtFbUJxR3JCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsY0FBYyxFQUFBO0VBcEJsQjtJQXVCTSxtQkFBbUIsRUFBQTs7QUN0R3ZCO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsa0JBQWtCLEVBQUE7O0FBTHRCO0VBVUksY0FBYztFQUNkLDRCQUE0QjtFQUM1QixtQkFBbUIsRUFBQTtFcEJzRHJCO0lvQmxFRjtNQWVNLHVCQUF1QjtNQUN2QixtQkFBbUIsRUFBQSxFQU10QjtFcEJvQkQ7SW9CMUNGO01Bb0JNLHdCQUF3QixFQUFBLEVBRTNCOztBQ3pCRDtFQUNFLGFBQWEsRUFBQTtFckJvRWY7SXFCckVBO01BTUksc0JBQXNCO01BQ3RCLFVBQVUsRUFBQSxFQUViOztBQVZIO0VBYUksY0FBYztFQUNkLGlCQUFpQixFQUFBO0VyQnNDbkI7SXFCcERGO01BZ0JNLGdCQUFnQixFQUFBLEVBT25CO0VyQitDRDtJcUJ0RUY7TUFtQk0sa0JBQWtCO01BQ2xCLGlCQUFpQjtNQUNqQixlQUFlLEVBQUEsRUFFbEI7O0FBdkJIO0VBMEJJLGNBQWM7RUFDZCw0QkFBNEIsRUFBQTtFckIyQzlCO0lxQnRFRjtNQTZCTSxrQkFBa0I7TUFDbEIsdUJBQXVCLEVBQUEsRUFFMUI7O0FBR0g7RUFDRSxlQUFlO0VBQ2YsVUFBVSxFQUFBO0VyQmlDVjtJcUJuQ0Y7TUFLSSxXQUFXLEVBQUEsRUFNZDtFQVhEO0lBU0ksbUJBQW1CLEVBQUE7O0FBSXZCO0VBQ0UsZUFBZTtFQUNmLFVBQVUsRUFBQTtFckJvQlY7SXFCdEJGO01BS0ksV0FBVyxFQUFBLEVBNkNkO0VBbEREO0lBU0ksbUJBQW1CO0lBQ25CLG9CckJ6RHFCO0lxQjBEckIsb0NBQW9DO0lBQ3BDLFdBQVc7SUFDWCxxQkFBcUI7SUFDckIsZ0JBQWdCLEVBQUE7RUFkcEI7SUFtQk0sbUJBQW1CLEVBQUE7RUFuQnpCO0lBd0JJLG1CQUFtQixFQUFBO0VBeEJ2Qjs7OztJQStCSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLGtCckJoRnFCLEVBQUE7SUFxRXZCO01xQnRCRjs7OztRQW9DTSxtQkFBbUIsRUFBQSxFQU10QjtJQTFDSDs7OztNQXdDTSxnQkFBZ0IsRUFBQTtFQXhDdEI7SUE2Q0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsbUNBQTJCO1lBQTNCLDJCQUEyQixFQUFBOztBQUkvQjtFckJuRkUsYUFBYTtFQUNiLG1CQUYrQjtFQUcvQiw4QnFCa0YyQjtFQUUzQixjQUFjO0VBQ2QsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQixpQkFBaUIsRUFBQTtFckJ0RGpCO0lxQmdERjtNQVFJLGdCQUFnQixFQUFBLEVBY25CO0VyQnBEQztJcUI4QkY7TUFXSSxnQkFBZ0I7TUFDaEIsZUFBZSxFQUFBLEVBVWxCO0VBdEJEO0lBZ0JJLGtCckJuSHFCLEVBQUE7SXFCbUd6QjtNQW1CTSxjQUF5QixFQUFBIiwiZmlsZSI6ImFzc2V0cy9zdHlsZXNoZWV0cy9zdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXHJcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxyXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cbmgxIHtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbiAgZm9udC1zaXplOiAyZW07IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXHJcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovIH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXG5wcmUge1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICAvKiAxICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAqL1xuYSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMDAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApOyB9XG5cbi8qKlxyXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmFiYnIgW3RpdGxlXSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqL1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xuICAvKiAxICovIH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xuc3ViLFxuc3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIG1hcmdpbjogMDtcbiAgLyogMiAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi8gfVxuXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxyXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xuYnV0dG9uLFxuW3R5cGU9J2J1dHRvbiddLFxuW3R5cGU9J3Jlc2V0J10sXG5bdHlwZT0nc3VibWl0J10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0nYnV0dG9uJ106Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0ncmVzZXQnXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPSdzdWJtaXQnXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPSdidXR0b24nXTotbW96LWZvY3VzcmluZyxcblt0eXBlPSdyZXNldCddOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9J3N1Ym1pdCddOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXG5sZWdlbmQge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXHJcbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXHJcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cclxuICovXG5bdHlwZT0nY2hlY2tib3gnXSxcblt0eXBlPSdyYWRpbyddIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cclxuICovXG5bdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT0nbnVtYmVyJ106Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXG5bdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xuW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cclxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cclxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxyXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiDoh6rlrprnvqnoqK3lrppcclxuICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5hZGRyZXNzIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbnAge1xuICBtYXJnaW46IDA7IH1cblxudWwge1xuICBtYXJnaW46IDA7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKiBib3gtc2l6aW5nIOioreWumiAqL1xuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5kaXY6Zm9jdXMsXG5zcGFuOmZvY3VzLFxuYXJ0aWNsZTpmb2N1cyxcbnNlY3Rpb246Zm9jdXMsXG5hOmZvY3VzLFxudWw6Zm9jdXMsXG5saTpmb2N1cyB7XG4gIG91dGxpbmU6IG5vbmU7IH1cblxuLyog5Y676ZmkaW5wdXTnmoTol43oibLmoYbmoYYgKi9cbmlucHV0LFxuYnV0dG9uLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBvdXRsaW5lOiBub25lOyB9XG5cbmltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIOWOu+mZpOeVsOW4uOepuuagvCAqL1xucGljdHVyZSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGZvbnQtc2l6ZTogMDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdmdXR1cmEtcHQnO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvRnV0dXJhUFRMaWdodC5vdGZcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAncHJveGltYS1ub3ZhJztcbiAgc3JjOiB1cmwoXCIuLi9mb250L1Byb3hpbWEgTm92YSBUaGluLm90ZlwiKTsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCAnTWljcm9zb2Z0IEpoZW5nSGVpJywgUm9ib3RvLCAnSGVsdmV0aWNhIE5ldWUnLCBBcmlhbCwgc2Fucy1zZXJpZjsgfVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYge1xuICBmb250LWZhbWlseTogJ2Z1dHVyYS1wdCcsIHNhbnMtc2VyaWY7IH1cblxucCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6ICdwcm94aW1hLW5vdmEnLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNTAwO1xuICBjb2xvcjogIzU3NTc1NztcbiAgbGluZS1oZWlnaHQ6IDEuNXJlbTsgfVxuXG4udS1mbGV4IHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4udGl0bGUtc2VjdGlvbiB7XG4gIHBhZGRpbmctYm90dG9tOiA1MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogNDhweDtcbiAgZm9udC1zaXplOiAxLjE4NzVyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICMyMjI7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYmJiO1xuICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XG5cbi5jYXJkIHtcbiAgbWF4LXdpZHRoOiAzNzBweDsgfVxuICAuY2FyZDpob3ZlciAuY2FyZF9pbWcgaW1nIHtcbiAgICBvcGFjaXR5OiAwLjU7IH1cbiAgLmNhcmRfaW1nIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiAzNzBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4OyB9XG4gICAgLmNhcmRfaW1nIGltZyB7XG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjVzOyB9XG4gIC5jYXJkX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDAuODc1cmVtO1xuICAgIGZvbnQtZmFtaWx5OiAnZnV0dXJhLXB0Jywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjNDA0MDQwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cblxuLmljb24tY2lyY2xlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAyOHB4O1xuICBoZWlnaHQ6IDI4cHg7XG4gIGZvbnQtc2l6ZTogMC45Mzc1cmVtO1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZDogIzIyMjtcbiAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG5cbi5mb3JtLXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1hcmdpbi1ib3R0b206IDI4cHg7IH1cblxubGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgZm9udC1mYW1pbHk6ICdwcm94aW1hLW5vdmEnLCBzYW5zLXNlcmlmO1xuICBjb2xvcjogIzU3NTc1NzsgfVxuXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgcGFkZGluZzogMTJweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmYWZhZmE7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IH1cbiAgaW5wdXQ6Zm9jdXMsXG4gIHNlbGVjdDpmb2N1cyxcbiAgdGV4dGFyZWE6Zm9jdXMge1xuICAgIG91dGxpbmU6IDFweCBzb2xpZCAjMDAwOyB9XG5cbmlucHV0IHtcbiAgY29sb3I6ICMwMDA7IH1cblxudGV4dGFyZWEge1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4uc3VibWl0IHtcbiAgcGFkZGluZzogMTJweCAzNXB4O1xuICB3aWR0aDogaW5pdGlhbDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMyNzI3Mjc7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuc3VibWl0OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjNTI1MjUyOyB9XG5cbmZvcm0gLmZvcm0tcm93Omxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5jLWJhbm5lcl90aXRsZSB7XG4gIGZvbnQtc2l6ZTogMXJlbTsgfVxuXG4uYy1iYW5uZXJfc3VidGl0bGUge1xuICBmb250LXNpemU6IDFyZW07IH1cblxuLmMtYmFubmVyX3RleHQge1xuICBmb250LXNpemU6IDFyZW07IH1cblxuLmMtYmFubmVyX2ljb24ge1xuICBmb250LXNpemU6IDFyZW07IH1cblxuLmNvbXBvbmVudHMge1xuICBwYWRkaW5nOiAxMDBweDsgfVxuXG4uc3BhY2Uge1xuICBtYXJnaW46IDUwcHggMDsgfVxuXG4ubGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgLmxpc3RfaXRlbSB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cblxuLnNsaWNrX2Fycm93IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogNDRweDtcbiAgaGVpZ2h0OiA2MXB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogMTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHM7IH1cbiAgLnNsaWNrX2Fycm93OmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7IH1cbiAgLnNsaWNrX2Fycm93OjphZnRlciwgLnNsaWNrX2Fycm93OjpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAxNHB4O1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmY7IH1cbiAgLnNsaWNrX2Fycm93OjphZnRlciB7XG4gICAgdG9wOiAyNHB4O1xuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cbiAgLnNsaWNrX2Fycm93OjpiZWZvcmUge1xuICAgIGJvdHRvbTogMjRweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7IH1cblxuLnNsaWNrIC5wcmV2LWFycm93IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICBsZWZ0OiAwOyB9XG5cbi5zbGljayAubmV4dC1hcnJvdyB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSByb3RhdGUoMTgwZGVnKTtcbiAgcmlnaHQ6IDA7IH1cblxuLnBhZ2luYXRpb24ge1xuICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5wYWdpbmF0aW9uIGEge1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICBjb2xvcjogIzU3NTc1NzsgfVxuICAgIC5wYWdpbmF0aW9uIGE6aG92ZXIge1xuICAgICAgY29sb3I6ICMzNjM2MzY7IH1cbiAgLnBhZ2luYXRpb24gYTpmaXJzdC1jaGlsZCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDsgfVxuICAgIC5wYWdpbmF0aW9uIGE6Zmlyc3QtY2hpbGQ6OmFmdGVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAtOHB4O1xuICAgICAgY29udGVudDogJy8nOyB9XG5cbi5oYW1idXJnZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZGlzcGxheTogbm9uZTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzU3NTc1NztcbiAgYm9yZGVyLXJhZGl1czogNHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuaGFtYnVyZ2VyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7IH0gfVxuICAuaGFtYnVyZ2VyIC5saW5lIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDJweDtcbiAgICBiYWNrZ3JvdW5kOiAjNTc1NzU3OyB9XG4gICAgLmhhbWJ1cmdlciAubGluZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDNweDsgfVxuXG5ib2R5IHtcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xuICBiYWNrZ3JvdW5kOiAjZmNmY2ZjOyB9XG5cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpIHtcbiAgICAuY29udGFpbmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgMzJweDtcbiAgICAgIG1heC13aWR0aDogOTkwcHg7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nOiAwIDIwcHg7IH0gfVxuXG4uc2VjdGlvbi1zcGFjZSB7XG4gIG1hcmdpbi1ib3R0b206IDkwcHg7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5zZWN0aW9uLXNwYWNlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDYwcHg7IH0gfVxuXG4uaGVhZGVyIHtcbiAgcGFkZGluZy10b3A6IDEwMHB4O1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuaGVhZGVyIHtcbiAgICAgIHBhZGRpbmctdG9wOiAwOyB9IH1cbiAgLmhlYWRlciAuY29udGFpbmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmhlYWRlciAudG9wIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgICAuaGVhZGVyIC50b3Age1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7IH0gfVxuICAgIC5oZWFkZXIgLnRvcCAuYnRuIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAgICAgLmhlYWRlciAudG9wIC5idG4ge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5oZWFkZXIgLmxvZ28ge1xuICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfSB9XG4gIC5oZWFkZXIgLmxvZ28gYSB7XG4gICAgd2lkdGg6IDEwMHB4O1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuaGVhZGVyIC5uYXZiYXIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5oZWFkZXIgLmNsb3NlLmNsb3NlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAxMHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgICAuaGVhZGVyIC5jbG9zZS5jbG9zZSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgICAuaGVhZGVyIC5jbG9zZS5jbG9zZTo6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAxOHB4O1xuICAgICAgcmlnaHQ6IDhweDtcbiAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDAwO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcbiAgICAgIGNvbnRlbnQ6ICcnOyB9XG4gICAgLmhlYWRlciAuY2xvc2UuY2xvc2U6OmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDIxcHg7XG4gICAgICByaWdodDogOHB4O1xuICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICBoZWlnaHQ6IDFweDtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDA7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gICAgICBjb250ZW50OiAnJzsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmhlYWRlciAubmF2YmFyIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAuaGVhZGVyIC5uYXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgICAgLmhlYWRlciAubmF2IHtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4OyB9IH1cbiAgICAuaGVhZGVyIC5uYXZfaXRlbSB7XG4gICAgICBtYXJnaW4tbGVmdDogMTlweDsgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgICAgICAuaGVhZGVyIC5uYXZfaXRlbSB7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9IH1cbiAgICAuaGVhZGVyIC5uYXZfaXRlbS5hY3RpdmUgLm5hdl9saW5rIHtcbiAgICAgIGNvbG9yOiAjMDAwOyB9XG4gICAgLmhlYWRlciAubmF2X2xpbmsge1xuICAgICAgZm9udC1zaXplOiAwLjgxMjVyZW07XG4gICAgICBmb250LWZhbWlseTogJ2Z1dHVyYS1wdCcsIHNhbnMtc2VyaWY7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgY29sb3I6ICM5OTk7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XG4gICAgICAuaGVhZGVyIC5uYXZfbGluazpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjMDAwOyB9XG4gIC5oZWFkZXIgLmJvdHRvbSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG5cbi5mb290ZXIgLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgcGFkZGluZy1ib3R0b206IDgwcHg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5mb290ZXIgLmNvbnRhaW5lciB7XG4gICAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDMwcHg7IH0gfVxuXG4uZm9vdGVyX3RpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogODBweDsgfVxuXG4uZm9vdGVyIC5pY29uLWNpcmNsZSB7XG4gIGJhY2tncm91bmQ6ICM1YjViNWI7IH1cblxuLmFib3V0IC5iYW5uZXIge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5hYm91dEludHJvZHVjZV93cmFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTZweDtcbiAgbWFyZ2luLWxlZnQ6IC0xNnB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuYWJvdXRJbnRyb2R1Y2Vfd3JhcCB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9IH1cblxuLmFib3V0SW50cm9kdWNlIC5ibG9rIHtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB3aWR0aDogNTAlOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuYWJvdXRJbnRyb2R1Y2UgLmJsb2sge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmFib3V0SW50cm9kdWNlIC5ibG9rOmZpcnN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDkwcHg7IH0gfVxuXG4uYWJvdXRJbnRyb2R1Y2UgLnRleHQgcCB7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7IH1cblxuLmFib3V0SW50cm9kdWNlIC50ZXh0IHVsIHtcbiAgcGFkZGluZy1sZWZ0OiA0MHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMnB4OyB9XG5cbi5hYm91dEludHJvZHVjZSAudGV4dCBsaSB7XG4gIG1hcmdpbi1ib3R0b206IDZweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi5hYm91dEludHJvZHVjZSAudGV4dCBsaSBwIHtcbiAgbWFyZ2luLWJvdHRvbTogNnB4OyB9XG5cbi5hYm91dEludHJvZHVjZSAudGV4dCBsaTo6YWZ0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgbGVmdDogLTEycHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDJweDtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4uYWJvdXRBd2FyZF9jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTZweDtcbiAgbWFyZ2luLWxlZnQ6IC0xNnB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuYWJvdXRBd2FyZF9jb250ZW50IHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH0gfVxuXG4uYWJvdXRBd2FyZCAuaWNvbnNMaXN0IHtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB3aWR0aDogMTYuNjY2NyU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5hYm91dEF3YXJkIC5pY29uc0xpc3Qge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG4gIC5hYm91dEF3YXJkIC5pY29uc0xpc3QgaW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzNHB4OyB9XG5cbi5hYm91dEF3YXJkIC5kZXNjcmlwdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiA4My4zMzMzMyU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5hYm91dEF3YXJkIC5kZXNjcmlwdGlvbiB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH0gfVxuICAuYWJvdXRBd2FyZCAuZGVzY3JpcHRpb24gcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxuXG4uYWJvdXRBd2FyZCAuY24ge1xuICBwYWRkaW5nOiAwIDE2cHg7XG4gIHdpZHRoOiA1MCU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5hYm91dEF3YXJkIC5jbiB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5hYm91dEF3YXJkIC5lbiB7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgd2lkdGg6IDUwJTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmFib3V0QXdhcmQgLmVuIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmFib3V0SW5zdGFncmFtX2NvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1yaWdodDogLTEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDsgfVxuXG4uYWJvdXRJbnN0YWdyYW0gLmxpbmsge1xuICBwYWRkaW5nOiAwIDEwcHg7XG4gIHdpZHRoOiAyNSU7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5hYm91dEluc3RhZ3JhbSAubGluayB7XG4gICAgICB3aWR0aDogNTAlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsgfSB9XG5cbi5jb250YWN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmNvbnRhY3Rfd3JhcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAgIC5jb250YWN0X3dyYXAge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9IH1cblxuLmNvbnRhY3RJbmZvcm1hdGlvbiB7XG4gIG1hcmdpbi1yaWdodDogMzJweDtcbiAgd2lkdGg6IGNhbGMoNTAlIC0gMTZweCk7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5jb250YWN0SW5mb3JtYXRpb24ge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNjBweDtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgLmNvbnRhY3RJbmZvcm1hdGlvbl93cmFwIHtcbiAgICBwYWRkaW5nLXRvcDogNzBweDsgfVxuICAuY29udGFjdEluZm9ybWF0aW9uIC50ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG4gICAgLmNvbnRhY3RJbmZvcm1hdGlvbiAudGV4dCBwIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7IH1cbiAgICAuY29udGFjdEluZm9ybWF0aW9uIC50ZXh0IHN0cm9uZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGZvbnQtc2l6ZTogMC43NXJlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cbiAgLmNvbnRhY3RJbmZvcm1hdGlvbiAubGluZSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZDogI2JiYjtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG4gIC5jb250YWN0SW5mb3JtYXRpb24gLm1hcCBpZnJhbWUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDAwcHg7IH1cblxuLmNvbnRhY3RGb3JtIHtcbiAgd2lkdGg6IGNhbGMoNTAlIC0gMTZweCk7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5jb250YWN0Rm9ybSB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5ob21lX3dyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmhvbWUgLmJhbm5lclNsaWNrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5ob21lIC5iYW5uZXJTbGljayBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7IH1cbiAgLmhvbWUgLmJhbm5lclNsaWNrOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgbGVmdDogMDtcbiAgICBjb250ZW50OiAnJztcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7IH1cblxuLmhvbWUgLnNsaWNrLWFycm93IHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG5cbi5ob21lIC5iYW5uZXJCb2R5IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNjBweDtcbiAgY29sb3I6ICNmZmY7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmhvbWUgLmJhbm5lckJvZHkge1xuICAgICAgbGVmdDogMjBweDsgfSB9XG4gIC5ob21lIC5iYW5uZXJCb2R5IC50aXRsZSB7XG4gICAgZm9udC1zaXplOiAzLjg3NXJlbTsgfVxuICAuaG9tZSAuYmFubmVyQm9keSAuc3VidGl0bGUge1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdmdXR1cmEtcHQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgY29sb3I6ICNkY2RjZGM7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDEuNnB4OyB9XG4gIC5ob21lIC5iYW5uZXJCb2R5IC5idG4ge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGxldHRlci1zcGFjaW5nOiAzcHg7IH1cblxuLmhvbWUgLmxpc3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogNjBweDtcbiAgbGVmdDogNjBweDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmhvbWUgLmxpc3Qge1xuICAgICAgYm90dG9tOiAyMHB4O1xuICAgICAgbGVmdDogMjBweDsgfSB9XG4gIC5ob21lIC5saXN0X2l0ZW0ge1xuICAgIG1hcmdpbjogMCAycHggMCAwOyB9XG5cbi5ob21lIC5pY29uLWNpcmNsZSB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7IH1cblxuLnByZXNzUGxhdGZvcm1fd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1yaWdodDogLTE2cHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTZweDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLnByZXNzUGxhdGZvcm1fd3JhcCB7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7IH0gfVxuXG4ucHJlc3NQbGF0Zm9ybSAubGluayB7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgd2lkdGg6IDI1JTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLnByZXNzUGxhdGZvcm0gLmxpbmsge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH0gfVxuXG4ucHJlc3NTaG93LXNsaWNrIC5pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogOTBweDsgfVxuXG4ucHJlc3NTaG93LXNsaWNrIC50aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDM0cHg7IH1cblxuLnByZXNzU2hvdy1saW5rIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAucHJlc3NTaG93LWxpbmsgLml0ZW0ge1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICB3aWR0aDogMjUlO1xuICAgIG1hcmdpbi1ib3R0b206IDkwcHg7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgICAucHJlc3NTaG93LWxpbmsgLml0ZW0ge1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDsgfSB9XG4gICAgLnByZXNzU2hvdy1saW5rIC5pdGVtX2ltZyB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAucHJlc3NTaG93LWxpbmsgLml0ZW1faW1nOmhvdmVyIC5idG4tbGluayB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLnByZXNzU2hvdy1saW5rIC5pdGVtIC5idG4tbGluayB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDhweDtcbiAgICAgIGxlZnQ6IDhweDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBiYWNrZ3JvdW5kOiAjYmQwODFjOyB9XG4gICAgICAucHJlc3NTaG93LWxpbmsgLml0ZW0gLmJ0bi1saW5rOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogIzkyMDUxNjsgfVxuICAgIC5wcmVzc1Nob3ctbGluayAuaXRlbSAuZmFiLmZhLXBpbnRlcmVzdCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVweDsgfVxuICAgIC5wcmVzc1Nob3ctbGluayAuaXRlbV90aXRsZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgICBmb250LXdlaWdodDogOTAwO1xuICAgICAgY29sb3I6ICM1NzU3NTc7IH1cbiAgICAucHJlc3NTaG93LWxpbmsgLml0ZW1fdGV4dCB7XG4gICAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgICBjb2xvcjogIzU3NTc1NzsgfVxuXG4uc2VydmljZSAuYmxvY2sge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tcmlnaHQ6IC0xNnB4O1xuICBtYXJnaW4tbGVmdDogLTE2cHg7XG4gIG1hcmdpbi1ib3R0b206IDY4cHg7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5zZXJ2aWNlIC5ibG9jayB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9IH1cbiAgLnNlcnZpY2UgLmJsb2NrIHAge1xuICAgIG1hcmdpbi1ib3R0b206IDEycHg7IH1cbiAgLnNlcnZpY2UgLmJsb2NrID4gZGl2Om50aC1jaGlsZCgxKSB7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICAgIHdpZHRoOiA0MS42NjY3JTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAgIC5zZXJ2aWNlIC5ibG9jayA+IGRpdjpudGgtY2hpbGQoMSkge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfSB9XG4gIC5zZXJ2aWNlIC5ibG9jayA+IGRpdjpudGgtY2hpbGQoMikge1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICB3aWR0aDogMjUlOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgICAgLnNlcnZpY2UgLmJsb2NrID4gZGl2Om50aC1jaGlsZCgyKSB7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgLnNlcnZpY2UgLmJsb2NrID4gZGl2Om50aC1jaGlsZCgzKSB7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICAgIHdpZHRoOiAzMy4zMzMzJTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAgIC5zZXJ2aWNlIC5ibG9jayA+IGRpdjpudGgtY2hpbGQoMykge1xuICAgICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbi5zZXJ2aWNlIC5tZXNzYWdlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5zZXJ2aWNlIC5tZXNzYWdlIGEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGNvbG9yOiAjMTExOyB9XG4gICAgLnNlcnZpY2UgLm1lc3NhZ2UgYTpob3ZlciB7XG4gICAgICBjb2xvcjogIzQ0NDsgfVxuICAgICAgLnNlcnZpY2UgLm1lc3NhZ2UgYTpob3Zlcjo6YWZ0ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjNDQ0OyB9XG4gICAgLnNlcnZpY2UgLm1lc3NhZ2UgYTo6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAycHg7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMXB4O1xuICAgICAgYmFja2dyb3VuZDogI2NkY2RjZDsgfVxuXG4uc2VydmljZVByb2Nlc3MgLnN0ZXAge1xuICBmb250LXNpemU6IDAuODc1cmVtO1xuICBmb250LXdlaWdodDogMzAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjNTc1NzU3OyB9XG4gIC5zZXJ2aWNlUHJvY2VzcyAuc3RlcCBoMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxuXG4uc2VydmljZVByaWNlX2NvbnRlbnQge1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2JiYjsgfVxuXG4uc2VydmljZVByaWNlIC5ub3JtYWwge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICBmb250LXNpemU6IDAuOTM3NXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogIzU3NTc1NzsgfVxuXG4uc2VydmljZVByaWNlIC5pdGVtIHtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB3aWR0aDogNDEuNjY2NyU7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICM1NzU3NTc7IH1cbiAgLnNlcnZpY2VQcmljZSAuaXRlbSBoMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxuXG4ud29ya1Nob3dfd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLXJpZ2h0OiAtMjBweDtcbiAgbWFyZ2luLWxlZnQ6IC0yMHB4OyB9XG5cbi53b3JrU2hvdyAuY2FyZCB7XG4gIG1hcmdpbjogMCAyMHB4O1xuICB3aWR0aDogY2FsYygzMy4zMzMzJSAtIDQwcHgpO1xuICBtYXJnaW4tYm90dG9tOiA3MHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAud29ya1Nob3cgLmNhcmQge1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gNDBweCk7XG4gICAgICBtYXJnaW4tYm90dG9tOiA3MHB4OyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNzVweCkge1xuICAgIC53b3JrU2hvdyAuY2FyZCB7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7IH0gfVxuXG4uZGV0YWlsc193cmFwIHtcbiAgZGlzcGxheTogZmxleDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmRldGFpbHNfd3JhcCB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgcGFkZGluZzogMDsgfSB9XG5cbi5kZXRhaWxzIC53b3JrU2hvd193cmFwIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogMTIwMHB4OyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTE5OXB4KSB7XG4gICAgLmRldGFpbHMgLndvcmtTaG93X3dyYXAge1xuICAgICAgbWF4LXdpZHRoOiA5MzJweDsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuZGV0YWlscyAud29ya1Nob3dfd3JhcCB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IC04cHg7XG4gICAgICBtYXJnaW4tbGVmdDogLThweDtcbiAgICAgIHBhZGRpbmc6IDAgMTZweDsgfSB9XG5cbi5kZXRhaWxzIC5jYXJkIHtcbiAgbWFyZ2luOiAwIDE2cHg7XG4gIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMzJweCk7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1NzVweCkge1xuICAgIC5kZXRhaWxzIC5jYXJkIHtcbiAgICAgIG1hcmdpbjogMCA4cHggNzBweDtcbiAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDE2cHgpOyB9IH1cblxuLmRldGFpbHNHYWxsZXJ5IHtcbiAgcGFkZGluZzogMCAxNnB4O1xuICB3aWR0aDogNzUlOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuZGV0YWlsc0dhbGxlcnkge1xuICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAuZGV0YWlsc0dhbGxlcnkgaW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4OyB9XG5cbi5kZXRhaWxzQ29udGVudCB7XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgd2lkdGg6IDI1JTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU3NXB4KSB7XG4gICAgLmRldGFpbHNDb250ZW50IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgLmRldGFpbHNDb250ZW50IC50aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICBmb250LXNpemU6IDEuMTg3NXJlbTtcbiAgICBmb250LWZhbWlseTogJ2Z1dHVyYS1wdCcsIHNhbnMtc2VyaWY7XG4gICAgY29sb3I6ICMyMjI7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDEuMXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQ7IH1cbiAgLmRldGFpbHNDb250ZW50IC50ZXh0IHAge1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgLmRldGFpbHNDb250ZW50IC5jbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogODBweDsgfVxuICAuZGV0YWlsc0NvbnRlbnQgLmNpdHksXG4gIC5kZXRhaWxzQ29udGVudCAueWVhcixcbiAgLmRldGFpbHNDb250ZW50IC5zaXplLFxuICAuZGV0YWlsc0NvbnRlbnQgLnBob3RvZ3JhcGhlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMC43NXJlbTsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAgIC5kZXRhaWxzQ29udGVudCAuY2l0eSxcbiAgICAgIC5kZXRhaWxzQ29udGVudCAueWVhcixcbiAgICAgIC5kZXRhaWxzQ29udGVudCAuc2l6ZSxcbiAgICAgIC5kZXRhaWxzQ29udGVudCAucGhvdG9ncmFwaGVyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsgfSB9XG4gICAgLmRldGFpbHNDb250ZW50IC5jaXR5IHAsXG4gICAgLmRldGFpbHNDb250ZW50IC55ZWFyIHAsXG4gICAgLmRldGFpbHNDb250ZW50IC5zaXplIHAsXG4gICAgLmRldGFpbHNDb250ZW50IC5waG90b2dyYXBoZXIgcCB7XG4gICAgICBmb250LXdlaWdodDogNzAwOyB9XG4gIC5kZXRhaWxzQ29udGVudCAubGFiZWwge1xuICAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgY29sb3I6ICM1NzU3NTc7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpOyB9XG5cbi5kZXRhaWxzUGFnaW5hdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMTZweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpIHtcbiAgICAuZGV0YWlsc1BhZ2luYXRpb24ge1xuICAgICAgbWF4LXdpZHRoOiA5MDBweDsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcbiAgICAuZGV0YWlsc1BhZ2luYXRpb24ge1xuICAgICAgbWFyZ2luLXRvcDogODBweDtcbiAgICAgIHBhZGRpbmc6IDAgMjBweDsgfSB9XG4gIC5kZXRhaWxzUGFnaW5hdGlvbiAuYmFjayB7XG4gICAgZm9udC1zaXplOiAwLjc1cmVtOyB9XG4gICAgLmRldGFpbHNQYWdpbmF0aW9uIC5iYWNrOmhvdmVyIHtcbiAgICAgIGNvbG9yOiBkaW1ncmF5OyB9XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xyXG5cclxuIGh0bWwge1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXHJcbn1cclxuXHJcbi8qIFNlY3Rpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmJvZHkge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxyXG4gKi9cclxuXHJcbm1haW4ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmgxIHtcclxuICBtYXJnaW46IDAuNjdlbSAwO1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG59XHJcblxyXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXHJcbiAqL1xyXG5cclxuaHIge1xyXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cclxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5wcmUge1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsgLyogMSAqL1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICovXHJcblxyXG5hIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsIDAsIDAsIDApO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cclxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5hYmJyIFt0aXRsZV0ge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5jb2RlLFxyXG5rYmQsXHJcbnNhbXAge1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsgLyogMSAqL1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc21hbGwge1xyXG4gIGZvbnQtc2l6ZTogODAlO1xyXG59XHJcblxyXG4vKipcclxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAqIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zdWIsXHJcbnN1cCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3ViIHtcclxuICBib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcbnN1cCB7XHJcbiAgdG9wOiAtMC41ZW07XHJcbn1cclxuXHJcbi8qIEVtYmVkZGVkIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgbWFyZ2luOiAwOyAvKiAyICovXHJcbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXHJcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cclxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCB7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3QgeyAvKiAxICovXHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuW3R5cGU9J2J1dHRvbiddLFxyXG5bdHlwZT0ncmVzZXQnXSxcclxuW3R5cGU9J3N1Ym1pdCddIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT0nYnV0dG9uJ106Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPSdyZXNldCddOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT0nc3VibWl0J106Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cclxuXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9J2J1dHRvbiddOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT0ncmVzZXQnXTotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9J3N1Ym1pdCddOi1tb3otZm9jdXNyaW5nIHtcclxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuZmllbGRzZXQge1xyXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXHJcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAqL1xyXG5cclxucHJvZ3Jlc3Mge1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gKi9cclxuXHJcbnRleHRhcmVhIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuW3R5cGU9J2NoZWNrYm94J10sXHJcblt0eXBlPSdyYWRpbyddIHtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cclxuXHJcblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuW3R5cGU9J251bWJlciddOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuW3R5cGU9J3NlYXJjaCddIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xyXG5cclxuW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmRldGFpbHMge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG4vKiBNaXNjXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gKi9cclxuXHJcbnRlbXBsYXRlIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXHJcbiAqL1xyXG5cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qIOiHquWumue+qeioreWumlxyXG4gID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxuaDYge1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LXNpemU6IDEwMCU7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuXHJcbmFkZHJlc3Mge1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxucCB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG51bCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKiBib3gtc2l6aW5nIOioreWumiAqL1xyXG5cclxuKixcclxuKjo6YmVmb3JlLFxyXG4qOjphZnRlciB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuXHJcbmRpdixcclxuc3BhbixcclxuYXJ0aWNsZSxcclxuc2VjdGlvbixcclxuYSxcclxudWwsXHJcbmxpIHtcclxuICAmOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4vKiDljrvpmaRpbnB1dOeahOiXjeiJsuahhuahhiAqL1xyXG5pbnB1dCxcclxuYnV0dG9uLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLyog5Y676Zmk55Ww5bi456m65qC8ICovXHJcblxyXG5waWN0dXJlIHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGZvbnQtc2l6ZTogMDtcclxufVxyXG4iLCJcclxuLy/ovInlhaXnmoTlrZflnosgICAgXHJcbiAgICBcclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdmdXR1cmEtcHQnO1xyXG4gIHNyYzogdXJsKCcuLi9mb250L0Z1dHVyYVBUTGlnaHQub3RmJyk7XHJcbiAgLy8gZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAvLyBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiAncHJveGltYS1ub3ZhJztcclxuICBzcmM6IHVybCgnLi4vZm9udC9Qcm94aW1hIE5vdmEgVGhpbi5vdGYnKTtcclxuICAvLyBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gIC8vIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuXHJcbi8vIOWFqOWfn+Wtl+mrlOioreWumlxyXG5cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsICdNaWNyb3NvZnQgSmhlbmdIZWknLCBSb2JvdG8sICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG5cclxufVxyXG5cclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNiB7XHJcbiAgZm9udC1mYW1pbHk6ICdmdXR1cmEtcHQnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5wIHtcclxuICBmb250LXNpemU6IHB4KDE2KTtcclxuICBmb250LWZhbWlseTogJ3Byb3hpbWEtbm92YScsIHNhbnMtc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICBjb2xvcjogIzU3NTc1NztcclxuICBsaW5lLWhlaWdodDogMS41cmVtO1xyXG59XHJcblxyXG5cclxuLy8g5a2X6auU5a+s5bqm6Kit5a6aXHJcblxyXG4vLyDlvq7ou5/mraPpu5Hpq5Rmb250LXdlaWdodFxyXG4vLyAyMDAtdGhpblxyXG4vLyA0MDAtcmVndWxhclxyXG4vLyA3MDAtYm9sZFxyXG4iLCIvL+aoo+W8j1xyXG5AZnVuY3Rpb24gcHgoJHB4KSB7XHJcbiAgQHJldHVybiAkcHggLyAxNiAqIDFyZW07XHJcbn1cclxuXHJcbkBtaXhpbiBzaXplKCR3LCRoOmF1dG8pIHtcclxuICB3aWR0aDogJHc7XHJcbiAgaGVpZ2h0OiAkaDtcclxufVxyXG5cclxuQG1peGluIHJlcGxhY2UtdGV4dCgpIHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtaW5kZW50OiAxMDAlO1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbn1cclxuXHJcbi8v5pa55ZCR5oCnXHJcbkBtaXhpbiBmbGV4KCRqYzpjZW50ZXIsJGFpOmNlbnRlcikge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6ICRhaTtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6ICRqYztcclxufVxyXG5cclxuQG1peGluIHBvYWMge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbn1cclxuXHJcbkBtaXhpbiBwb3MoJHQ6aW5pdGlhbCwkbDppbml0aWFsKSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogJHQ7XHJcbiAgbGVmdDogJGw7XHJcbn1cclxuXHJcbi8vIOeJqeS7tuaAp1xyXG5AbWl4aW4gbGluZSgkd2lkdGg6MXB4LCAkaGVpZ2h0OjFweCwgJGJhY2tncm91bmRDb2xvcjojMDAwKSB7XHJcbiAgY29udGVudDogJyc7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6ICR3aWR0aDtcclxuICBoZWlnaHQ6ICRoZWlnaHQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhY2tncm91bmRDb2xvcjtcclxufVxyXG5cclxuLy8gcndkIOaWt+m7nlxyXG5AbWl4aW4gcndkKCRtYXgpIHtcclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRtYXggKyBweCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gZGVzayB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTk5cHgpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIHBhZCB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTFweCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gZmxhdCB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gcGhvbmUge1xyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTc1cHgpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG4iLCJcclxuXHJcblxyXG4vLyAg5Yqf6IO95oCnXHJcblxyXG4udS1mbGV4IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4vLyDmqKPlvI9cclxuIiwiXHJcblxyXG4udGl0bGUge1xyXG4gICYtc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDhweDtcclxuICAgIGZvbnQtc2l6ZTogcHgoMTkpO1xyXG4gICAgLy8gZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzIyMjtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYmJiO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcclxuICB9XHJcbn1cclxuIiwiXHJcblxyXG4uY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiAzNzBweDtcclxuICBcclxuICAmOmhvdmVyIHtcclxuICAgIC5jYXJkX2ltZyBpbWcge1xyXG4gICAgICBvcGFjaXR5OiAwLjU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX2ltZyB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWF4LWhlaWdodDogMzcwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4O1xyXG4gICAgXHJcbiAgICBpbWcge1xyXG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC41cztcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAmX3RpdGxlIHtcclxuICAgIGZvbnQtc2l6ZTogcHgoMTQpO1xyXG4gICAgZm9udC1mYW1pbHk6ICdmdXR1cmEtcHQnLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzQwNDA0MDtcclxuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcbiAgfVxyXG59XHJcbiIsIlxyXG5cclxuLmljb24tY2lyY2xlIHtcclxuICBAaW5jbHVkZSBmbGV4O1xyXG5cclxuICB3aWR0aDogMjhweDtcclxuICBoZWlnaHQ6IDI4cHg7XHJcbiAgZm9udC1zaXplOiBweCgxNSk7XHJcbiAgY29sb3I6ICR3O1xyXG4gIGJhY2tncm91bmQ6ICMyMjI7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbiIsIlxyXG4vLyDlrZjmlL7lkITnqK7orormlbgg6aGP6ImyIOWtl+Wei+Wkp+WwjyDniYjlnovlhaflrrnlr6zluqYg6ZaT6LedICBcclxuXHJcblxyXG4vLyA9PT09PT09PT096aGP6Imy5Y2A5aGKPT09PT09PT09PVxyXG5cclxuJHc6ICNmZmY7XHJcbiRiOiAjMDAwO1xyXG5cclxuLy8g55uh6YeP5Lul6Kqe5oSP5ZG95ZCNXHJcbiRwcmltYXJ5OiAjNzgyOGI0O1xyXG4kcHJpbWFyeS1kYXJrOiAjNzgyOGI0O1xyXG5cclxuJHNlY29uZGFyeTogIzc4MjhiNDtcclxuJHNlY29uZGFyeS1kYXJrOiAjNzgyOGI0O1xyXG5cclxuLy8gJHN1Y2Nlc3MgOlxyXG4vLyAkaW5mbyA6XHJcbi8vICR3YXJuaW5nIDpcclxuLy8gJGRhbmdlciA6XHJcbi8vICRsaWdodCA6XHJcbi8vICRkYXJrIDpcclxuXHJcblxyXG4vLyA9PT09PT09PT095a2X5Z6L5aSn5bCPPT09PT09PT09PVxyXG5cclxuJHhsOiAzcmVtOyAgICAgLy8gNDhcclxuJGw6IDJyZW07ICAgICAvLyAzMlxyXG4kbTogMS41cmVtOyAgIC8vIDI0XHJcbiRzOiAxLjI1cmVtOyAgLy8gMjBcclxuJHhzOiAwLjg3NXJlbTsgLy8gMTRcclxuJGY6IDAuNzVyZW07ICAvLyAxMlxyXG5cclxuXHJcbi8vID09PT09PT09PT3lrZflnovlr6zluqY9PT09PT09PT09XHJcblxyXG4kdGhpbjogMjAwO1xyXG4kYm9sZDogNzAwO1xyXG4kYmxhY2s6IDgwMDtcclxuXHJcbi8vID09PT09PT09PT16LWluZGV4IOioreWumj09PT09PT09PT1cclxuXHJcbiR0b3A6IDgwMDA7XHJcbiRhYm92ZTogNTAwO1xyXG4kZGVmYXVsdDogMTtcclxuJGJlbG93OiAtMTtcclxuJGJvdHRvbTogLTkwMDA7XHJcbiIsIlxyXG4uZm9ybS1yb3cge1xyXG4gIEBpbmNsdWRlIGZsZXgoZmxleC1zdGFydCwgZmxleC1zdGFydCk7XHJcblxyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgbWFyZ2luLWJvdHRvbTogMjhweDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gIG1hcmdpbi1ib3R0b206IDZweDtcclxuICBmb250LXNpemU6IHB4KDEyKTtcclxuICBmb250LWZhbWlseTogJ3Byb3hpbWEtbm92YScsIHNhbnMtc2VyaWY7XHJcbiAgY29sb3I6ICM1NzU3NTc7XHJcbn1cclxuXHJcblxyXG5pbnB1dCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogMXB4IHNvbGlkICMwMDA7XHJcbiAgfVxyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICBtaW4td2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uc3VibWl0IHtcclxuICBwYWRkaW5nOiAxMnB4IDM1cHg7XHJcbiAgd2lkdGg6IGluaXRpYWw7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXNpemU6IHB4KDE0KTtcclxuICBjb2xvcjogJHc7XHJcbiAgYmFja2dyb3VuZDogIzI3MjcyNztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgXHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNTI1MjUyO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbmZvcm0ge1xyXG4gIC5mb3JtLXJvdzpsYXN0LWNoaWxkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgfVxyXG59XHJcbiIsIlxyXG5cclxuXHJcbi5jLWJhbm5lciB7XHJcbiAgJl90aXRsZSB7XHJcbiAgICBmb250LXNpemU6IHB4KDE2KTtcclxuICB9XHJcblxyXG4gICZfc3VidGl0bGUge1xyXG4gICAgZm9udC1zaXplOiBweCgxNik7XHJcbiAgfVxyXG5cclxuICAmX3RleHQge1xyXG4gICAgZm9udC1zaXplOiBweCgxNik7XHJcbiAgfVxyXG5cclxuICAmX2ljb24ge1xyXG4gICAgZm9udC1zaXplOiBweCgxNik7XHJcbiAgfVxyXG59XHJcbiIsIlxyXG5cclxuLmNvbXBvbmVudHMge1xyXG4gIHBhZGRpbmc6IDEwMHB4O1xyXG59XHJcblxyXG4uc3BhY2Uge1xyXG4gIG1hcmdpbjogNTBweCAwO1xyXG59XHJcblxyXG4ubGlzdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuXHJcbiAgJl9pdGVtIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIH1cclxuXHJcbn1cclxuXHJcblxyXG4iLCJcclxuLnNsaWNrIHtcclxuICAmX2Fycm93IHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDQ0cHg7XHJcbiAgICBoZWlnaHQ6IDYxcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuNHM7XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YWZ0ZXIsXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIGxlZnQ6IDE0cHg7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICB3aWR0aDogMTZweDtcclxuICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgdG9wOiAyNHB4O1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOjpiZWZvcmUge1xyXG4gICAgICBib3R0b206IDI0cHg7XHJcbiAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5wcmV2LWFycm93IHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgIGxlZnQ6IDA7XHJcbiAgfVxyXG5cclxuICAubmV4dC1hcnJvdyB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKDE4MGRlZyk7XHJcbiAgICByaWdodDogMDtcclxuICB9XHJcbn1cclxuIiwiXHJcbi5wYWdpbmF0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIFxyXG4gIGEge1xyXG4gICAgZm9udC1zaXplOiBweCgxMik7XHJcbiAgICBjb2xvcjogIzU3NTc1NztcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgY29sb3I6ICMzNjM2MzY7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhOmZpcnN0LWNoaWxkIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuXHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICByaWdodDogLThweDtcclxuICAgICAgY29udGVudDogJy8nO1xyXG5cclxuICAgIH1cclxuICAgIFxyXG4gIH1cclxufSIsIi5oYW1idXJnZXIge1xyXG4gIEBpbmNsdWRlIGZsZXgoKTtcclxuXHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjNTc1NzU3O1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuXHJcblxyXG4gIEBpbmNsdWRlIHBob25lIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICAubGluZSB7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgYmFja2dyb3VuZDogIzU3NTc1NztcclxuICAgIFxyXG4gICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogM3B4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvL+atpOiZleeahHNhc3Mg5Y+v5YWx55So5Yiw5YW25LuW5bCI5qGI77yM5Y+v55u05o6l5L+u5pS55YC8IFxyXG4vLyDmraTomZXnlKggLSDpgKPntZDku6PooajmqKPlvI8gIO+8jCDkuI3nlKggXyDlm6Dngrrku6PooajmqKHntYTpmo7lsaRcclxuLy/nm7jlkIzlr6zluqbpg6jliIZcclxuXHJcblxyXG5cclxuYm9keSB7XHJcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG4gIGJhY2tncm91bmQ6ICNmY2ZjZmM7XHJcbn1cclxuXHJcblxyXG4uY29udGFpbmVyIHtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICBAaW5jbHVkZSBkZXNrIHtcclxuICAgIHBhZGRpbmc6IDAgMzJweDtcclxuICAgIG1heC13aWR0aDogOTkwcHg7XHJcbiAgfVxyXG4gIEBpbmNsdWRlIHBob25lIHtcclxuICAgIHBhZGRpbmc6IDAgMjBweDtcclxuICB9XHJcbn1cclxuXHJcbi5zZWN0aW9uLXNwYWNlIHtcclxuICBtYXJnaW4tYm90dG9tOiA5MHB4O1xyXG5cclxuICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG4gIH1cclxufVxyXG4iLCJcclxuLmhlYWRlciB7XHJcbiAgcGFkZGluZy10b3A6IDEwMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgXHJcbiAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgcGFkZGluZy10b3A6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLnRvcCB7XHJcbiAgICBAaW5jbHVkZSBmbGV4KHNwYWNlLWJldHdlZW4sIGNlbnRlcik7XHJcbiAgICBcclxuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XHJcbiAgICBcclxuICAgIEBpbmNsdWRlIHBob25lIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xyXG4gICAgfVxyXG5cclxuICAgIC5idG4ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICBwYWRkaW5nLXRvcDogMjBweDtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubG9nbyB7XHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGEge1xyXG4gICAgICB3aWR0aDogMTAwcHg7XHJcbiAgICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5uYXZiYXIge1xyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmNsb3NlLmNsb3NlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMTBweDtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDtcclxuXHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICBib3R0b206IDE4cHg7XHJcbiAgICAgIHJpZ2h0OiA4cHg7XHJcbiAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgYmFja2dyb3VuZDogIzAwMDtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTtcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YmVmb3JlIHtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICB0b3A6IDIxcHg7XHJcbiAgICAgIHJpZ2h0OiA4cHg7XHJcbiAgICAgIHdpZHRoOiAyNHB4O1xyXG4gICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgYmFja2dyb3VuZDogIzAwMDtcclxuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgICBjb250ZW50OiAnJztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5uYXZiYXIge1xyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubmF2IHtcclxuICAgIEBpbmNsdWRlIGZsZXgoZmxleC1lbmQpO1xyXG5cclxuICAgIEBpbmNsdWRlIHBob25lIHtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIHBhZGRpbmctYm90dG9tOiAxMnB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfaXRlbSB7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAxOXB4O1xyXG5cclxuICAgICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfaXRlbS5hY3RpdmUge1xyXG4gICAgICAubmF2X2xpbmsge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9saW5rIHtcclxuICAgICAgZm9udC1zaXplOiBweCgxMyk7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAnZnV0dXJhLXB0Jywgc2Fucy1zZXJpZjtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgY29sb3I6ICM5OTk7XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XHJcblxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmJvdHRvbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICB9XHJcbn1cclxuIiwiXHJcblxyXG5cclxuLmZvb3RlciB7XHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBAaW5jbHVkZSBmbGV4KGZsZXgtc3RhcnQsIGZsZXgtZW5kKTtcclxuXHJcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA4MHB4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfdGl0bGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogODBweDtcclxuICB9XHJcblxyXG4gIC5pY29uLWNpcmNsZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNWI1YjViO1xyXG4gIH1cclxufVxyXG4iLCJcclxuLmFib3V0IHtcclxuICAuYmFubmVyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLmFib3V0SW50cm9kdWNlIHtcclxuICAmX3dyYXAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1yaWdodDogLTE2cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogLTE2cHg7XHJcblxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAuYmxvayB7XHJcbiAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgIEBpbmNsdWRlIHBob25lIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgIEBpbmNsdWRlIHBob25lIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA5MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICB9XHJcbiAgXHJcbiAgLnRleHQge1xyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICB9XHJcblxyXG4gICAgdWwge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XHJcbiAgICB9XHJcblxyXG4gICAgbGkge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuXHJcbiAgICBsaSBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNnB4O1xyXG4gICAgfVxyXG5cclxuICAgIGxpOjphZnRlciB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAxMHB4O1xyXG4gICAgICBsZWZ0OiAtMTJweDtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XHJcbiAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICB3aWR0aDogMnB4O1xyXG4gICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgYmFja2dyb3VuZDogIzAwMDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmFib3V0QXdhcmQge1xyXG4gICZfY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAtMTZweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMTZweDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAuaWNvbnNMaXN0IHtcclxuICAgIHBhZGRpbmc6IDAgMTZweDtcclxuICAgIHdpZHRoOiAxNi42NjY3JTtcclxuXHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgIGltZyB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDM0cHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuZGVzY3JpcHRpb24ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiA4My4zMzMzMyU7XHJcblxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jbiB7XHJcbiAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5lbiB7XHJcbiAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5hYm91dEluc3RhZ3JhbSB7XHJcbiAgJl9jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xyXG4gIH1cclxuXHJcbiAgLmxpbmsge1xyXG4gICAgcGFkZGluZzogMCAxMHB4O1xyXG4gICAgd2lkdGg6IDI1JTtcclxuXHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG4iLCJcclxuLmNvbnRhY3Qge1xyXG4gIEBpbmNsdWRlIGZsZXgoKTtcclxuXHJcbiAgJl93cmFwIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY29udGFjdEluZm9ybWF0aW9uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDMycHg7XHJcbiAgd2lkdGg6IGNhbGMoNTAlIC0gMTZweCk7XHJcblxyXG4gIEBpbmNsdWRlIHBob25lIHtcclxuICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDYwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgfVxyXG5cclxuICAmX3dyYXAge1xyXG4gICAgcGFkZGluZy10b3A6IDcwcHg7XHJcbiAgfVxyXG5cclxuICAudGV4dCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG5cclxuICAgIHAge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG4gICAgfVxyXG5cclxuICAgIHN0cm9uZyB7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBmb250LXNpemU6IHB4KDEyKTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5saW5lIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYmJiO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICB9XHJcblxyXG4gIC5tYXAge1xyXG4gICAgaWZyYW1lIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY29udGFjdEZvcm0ge1xyXG4gIHdpZHRoOiBjYWxjKDUwJSAtIDE2cHgpO1xyXG5cclxuICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn1cclxuIiwiXHJcbi5ob21lIHtcclxuICAmX3dyYXAge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuXHJcbiAgLmJhbm5lclNsaWNrIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICBpbWcge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6YWZ0ZXIge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgYm90dG9tOiAwO1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgbGVmdDogMDtcclxuICAgICAgY29udGVudDogJyc7XHJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5zbGljay1hcnJvdyB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuICAuYmFubmVyQm9keSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDYwcHg7XHJcbiAgICBjb2xvcjogJHc7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcblxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBsZWZ0OiAyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC50aXRsZSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogcHgoNjIpO1xyXG4gICAgfVxyXG5cclxuICAgIC5zdWJ0aXRsZSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiAnZnV0dXJhLXB0Jywgc2Fucy1zZXJpZjtcclxuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgICAgY29sb3I6ICNkY2RjZGM7XHJcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxLjZweDtcclxuICAgIH1cclxuXHJcbiAgICAuYnRuIHtcclxuICAgICAgY29sb3I6ICR3O1xyXG4gICAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxpc3Qge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiA2MHB4O1xyXG4gICAgbGVmdDogNjBweDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBib3R0b206IDIwcHg7XHJcbiAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9pdGVtIHtcclxuICAgICAgbWFyZ2luOiAwIDJweCAwIDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuaWNvbi1jaXJjbGUge1xyXG4gICAgZm9udC1zaXplOiBweCgxNik7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICB9XHJcbn1cclxuXHJcbiIsIlxyXG5cclxuXHJcbi5wcmVzc1BsYXRmb3JtIHtcclxuICAmX3dyYXAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1yaWdodDogLTE2cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogLTE2cHg7XHJcblxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGluayB7XHJcbiAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICB3aWR0aDogMjUlO1xyXG5cclxuICAgIEBpbmNsdWRlIHBob25lIHtcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5wcmVzc1Nob3cge1xyXG4gICYtc2xpY2sge1xyXG4gICAgLml0ZW0ge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiA5MHB4O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLnRpdGxlIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMzRweDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICYtbGluayB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgLml0ZW0ge1xyXG4gICAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICAgIHdpZHRoOiAyNSU7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDkwcHg7XHJcblxyXG4gICAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmX2ltZyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMThweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgLmJ0bi1saW5rIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAuYnRuLWxpbmsge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDhweDtcclxuICAgICAgICBsZWZ0OiA4cHg7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiBweCgxMik7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICBjb2xvcjogJHc7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2JkMDgxYztcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAjOTIwNTE2O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLmZhYi5mYS1waW50ZXJlc3Qge1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmX3RpdGxlIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogcHgoMTIpO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICAgICAgY29sb3I6ICM1NzU3NTc7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICZfdGV4dCB7XHJcbiAgICAgICAgZm9udC1zaXplOiBweCgxMik7XHJcbiAgICAgICAgY29sb3I6ICM1NzU3NTc7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbiIsIi5zZXJ2aWNlIHtcclxuICAuYmxvY2sge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1yaWdodDogLTE2cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogLTE2cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA2OHB4O1xyXG5cclxuICAgIEBpbmNsdWRlIHBob25lIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuXHJcbiAgICBwIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgPmRpdjpudGgtY2hpbGQoMSkge1xyXG4gICAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICAgIHdpZHRoOiA0MS42NjY3JTtcclxuICAgICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICA+ZGl2Om50aC1jaGlsZCgyKSB7XHJcbiAgICAgIHBhZGRpbmc6IDAgMTZweDtcclxuICAgICAgd2lkdGg6IDI1JTtcclxuICAgICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgPmRpdjpudGgtY2hpbGQoMykge1xyXG4gICAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICAgIHdpZHRoOiAzMy4zMzMzJTtcclxuICAgICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubWVzc2FnZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBcclxuICAgIGEge1xyXG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgY29sb3I6ICMxMTE7XHJcblxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBjb2xvcjogIzQ0NDtcclxuXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZDogIzQ0NDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgYm90dG9tOiAycHg7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjY2RjZGNkO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLnNlcnZpY2VQcm9jZXNzIHtcclxuICAuc3RlcCB7XHJcbiAgICBmb250LXNpemU6IHB4KDE0KTtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBjb2xvcjogIzU3NTc1NztcclxuICAgIGgzIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5zZXJ2aWNlUHJpY2Uge1xyXG4gICZfY29udGVudCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNiYmI7XHJcbiAgfVxyXG4gIFxyXG4gIC5ub3JtYWwge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgIGZvbnQtc2l6ZTogcHgoMTUpO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiAjNTc1NzU3O1xyXG4gIH1cclxuXHJcbiAgLml0ZW0ge1xyXG4gICAgcGFkZGluZzogMCAxNnB4O1xyXG4gICAgd2lkdGg6IDQxLjY2NjclO1xyXG4gICAgZm9udC1zaXplOiBweCgxNCk7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICM1NzU3NTc7XHJcblxyXG4gICAgaDMge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMnB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJcclxuLndvcmsge1xyXG5cclxufVxyXG5cclxuLndvcmtTaG93IHtcclxuICAmX3dyYXAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgIG1hcmdpbi1yaWdodDogLTIwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogLTIwcHg7XHJcbiAgICAvLyBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xyXG4gIH1cclxuXHJcbiAgLmNhcmQge1xyXG4gICAgbWFyZ2luOiAwIDIwcHg7XHJcbiAgICB3aWR0aDogY2FsYygzMy4zMzMzJSAtIDQwcHgpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNzBweDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICB3aWR0aDogY2FsYyg1MCUgLSA0MHB4KTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogNzBweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcndkKDM3NSkge1xyXG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4iLCJcclxuLmRldGFpbHMge1xyXG4gICZfd3JhcCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLy8gbWFyZ2luLXJpZ2h0OiAtMTZweDtcclxuICAgIC8vIG1hcmdpbi1sZWZ0OiAtMTZweDtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLndvcmtTaG93X3dyYXAge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICAgIEBpbmNsdWRlIGRlc2sge1xyXG4gICAgICBtYXgtd2lkdGg6IDkzMnB4O1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IC04cHg7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAtOHB4O1xyXG4gICAgICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY2FyZCB7XHJcbiAgICBtYXJnaW46IDAgMTZweDtcclxuICAgIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMzJweCk7XHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgIG1hcmdpbjogMCA4cHggNzBweDtcclxuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMTZweCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uZGV0YWlsc0dhbGxlcnkge1xyXG4gIHBhZGRpbmc6IDAgMTZweDtcclxuICB3aWR0aDogNzUlO1xyXG5cclxuICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIGltZyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmRldGFpbHNDb250ZW50IHtcclxuICBwYWRkaW5nOiAwIDE2cHg7XHJcbiAgd2lkdGg6IDI1JTtcclxuXHJcbiAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAudGl0bGUge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgIGZvbnQtc2l6ZTogcHgoMTkpO1xyXG4gICAgZm9udC1mYW1pbHk6ICdmdXR1cmEtcHQnLCBzYW5zLXNlcmlmO1xyXG4gICAgY29sb3I6ICMyMjI7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogMS4xcHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gIH1cclxuXHJcbiAgLnRleHQge1xyXG4gICAgcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuY24ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogODBweDtcclxuICB9XHJcblxyXG4gIC5jaXR5LFxyXG4gIC55ZWFyLFxyXG4gIC5zaXplLFxyXG4gIC5waG90b2dyYXBoZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IHB4KDEyKTtcclxuICAgIFxyXG4gICAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIHAge1xyXG4gICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmxhYmVsIHtcclxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgIGNvbG9yOiAjNTc1NzU3O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpO1xyXG4gIH1cclxufVxyXG5cclxuLmRldGFpbHNQYWdpbmF0aW9uIHtcclxuICBAaW5jbHVkZSBmbGV4KHNwYWNlLWJldHdlZW4pO1xyXG4gIFxyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmc6IDAgMTZweDtcclxuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gIG1heC13aWR0aDogMTIwMHB4O1xyXG4gIEBpbmNsdWRlIGRlc2sge1xyXG4gICAgbWF4LXdpZHRoOiA5MDBweDtcclxuICB9XHJcbiAgQGluY2x1ZGUgcGhvbmUge1xyXG4gICAgbWFyZ2luLXRvcDogODBweDtcclxuICAgIHBhZGRpbmc6IDAgMjBweDtcclxuICB9XHJcblxyXG4gIC5iYWNrIHtcclxuICAgIGZvbnQtc2l6ZTogcHgoMTIpO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBjb2xvcjogcmdiKDEwNSwgMTA1LCAxMDUpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0= */
