@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  margin: 0.67em 0;
  font-size: 2em; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  overflow: visible;
  /* 2 */
  height: 0;
  /* 1 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  display: block;
  text-decoration: none;
  color: #000;
  background-color: transparent;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr [title] {
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  /* 2 */
  font-size: 100%;
  /* 1 */
  font-family: inherit;
  /* 1 */
  line-height: 1.15;
  /* 1 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table;
  /* 1 */
  padding: 0;
  /* 3 */
  max-width: 100%;
  /* 1 */
  box-sizing: border-box;
  /* 1 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* 自定義設定
  ============================================================================ */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: 100%;
  font-weight: normal; }

address {
  font-style: normal; }

p {
  margin: 0; }

ul {
  margin: 0;
  list-style-type: none;
  padding: 0; }

/* box-sizing 設定 */
*,
*::before,
*::after {
  box-sizing: border-box; }

div:focus,
span:focus,
article:focus,
section:focus,
a:focus,
ul:focus,
li:focus {
  outline: none; }

/* 去除input的藍色框框 */
input,
button,
select,
textarea {
  outline: none; }

img {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
  border: 0;
  border-style: none; }

/* 去除異常空格 */
picture {
  overflow: hidden;
  font-size: 0; }

@font-face {
  font-family: 'GenSekiGothic-B';
  src: url("../font/GenSekiGothic-B.ttc");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'GenSekiGothic-H';
  src: url("../font/GenSekiGothic-H.ttc");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'CopperplateGothicStd';
  src: url("../font/CopperplateGothicStd-33BC.otf");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'AdobeMingStd-Light';
  src: url("../font/AdobeMingStd-Light.otf");
  font-weight: normal;
  font-style: normal; }

html {
  font-size: 16px;
  font-family: 'GenSekiGothic-B', -apple-system, 'Segoe UI', 'Microsoft JhengHei', Roboto, 'Helvetica Neue', Arial, sans-serif; }

.color-primary {
  color: #1d7fa7; }

.color-secondary {
  color: #ea6000; }

.color-success {
  color: #1b806d; }

.u-flex {
  display: flex; }

.d-none {
  display: none !important; }

.page-banner_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  margin: 48px auto 0;
  height: 400px;
  background-size: cover !important; }
  @media only screen and (max-width: 991px) {
    .page-banner_wrap {
      width: 100%;
      height: 350px;
      border-radius: 0; } }
  @media only screen and (max-width: 767px) {
    .page-banner_wrap {
      margin: 95px auto 0; } }
  .page-banner_wrap::after {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    content: '';
    background: rgba(0, 0, 0, 0.4); }

.page-banner_icon {
  position: relative;
  width: 24%;
  z-index: 1; }
  @media only screen and (max-width: 1199px) {
    .page-banner_icon {
      width: 50%; } }
  @media only screen and (max-width: 575px) {
    .page-banner_icon {
      width: 80%; } }

.page-nav_wrap {
  padding: 30px 0;
  background: #ea6000;
  margin-bottom: 50px; }

.page-nav .list {
  display: flex;
  align-items: center;
  justify-content: center; }
  .page-nav .list_item {
    position: relative;
    padding: 10px 30px; }
    @media only screen and (max-width: 767px) {
      .page-nav .list_item {
        padding: 10px 8px; } }
    .page-nav .list_item:not(:last-child)::after {
      position: absolute;
      top: 50%;
      right: 0;
      content: '';
      width: 1px;
      height: 26px;
      background: #fff;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%); }
    .page-nav .list_item a {
      font-size: 1.125rem;
      color: #fff; }

.pagination {
  display: flex; }
  .pagination .page-item.active .page-link {
    color: #fff;
    background: #ea6000; }
  .pagination .page-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    color: #ea6000;
    border-right: 1px solid #ea6000;
    border-top: 1px solid #ea6000;
    border-bottom: 1px solid #ea6000;
    transition: all 0.5s; }
    .pagination .page-link:first-child {
      border-left: 1px solid #ea6000; }
    .pagination .page-link:hover {
      color: #fff;
      background: #ea6000; }
  .pagination .prev {
    border-radius: 4px 0 0 4px; }
  .pagination .next {
    border-radius: 0 4px 4px 0; }

.about-container {
  display: flex;
  margin: 0 auto;
  width: 100%;
  max-width: 1170px; }
  @media only screen and (max-width: 991px) {
    .about-container {
      max-width: 970px; } }
  @media only screen and (max-width: 991px) {
    .about-container {
      max-width: 750px; } }

.header {
  position: relative;
  z-index: 500; }
  .header_wrap {
    position: relative;
    z-index: 500; }
    @media only screen and (max-width: 767px) {
      .header_wrap {
        position: fixed;
        top: 34px;
        left: 0;
        width: 100%;
        border-top: 1px solid #fff; } }
  .header_topBar {
    margin-bottom: 50px; }
    .header_topBar-top {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: #ea6000;
      border-bottom: 10px solid #fff; }
      @media only screen and (max-width: 767px) {
        .header_topBar-top {
          background: #1d7fa7;
          border-bottom: 0; } }
    .header_topBar-bottom {
      position: relative;
      height: 12px;
      background: #1d7fa7; }
      @media only screen and (max-width: 767px) {
        .header_topBar-bottom {
          background: transparent; } }
    .header_topBar .web-link {
      margin: 9px 0 9px 20px;
      padding: 4px 9px 2px 14px;
      letter-spacing: 6px;
      font-size: 0.75rem;
      font-weight: 700;
      color: #1d7fa7;
      background: #fff;
      border: 2px solid #1d7fa7;
      border-radius: 20px;
      transition: all 0.5s; }
      @media only screen and (max-width: 767px) {
        .header_topBar .web-link {
          margin: 0;
          padding: 5px 16px;
          background: #1d7fa7; } }
      .header_topBar .web-link:hover {
        color: #fff;
        background: #1d7fa7;
        border: 2px solid #fff; }
        @media only screen and (max-width: 767px) {
          .header_topBar .web-link:hover {
            border: 2px solid #1d7fa7; } }
      @media only screen and (max-width: 767px) {
        .header_topBar .web-link span {
          display: none; } }
      .header_topBar .web-link img {
        display: none; }
        @media only screen and (max-width: 767px) {
          .header_topBar .web-link img {
            display: block;
            width: 80px; } }
    .header_topBar .social-ink {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 70px; }
      @media only screen and (max-width: 767px) {
        .header_topBar .social-ink {
          display: none; } }
      .header_topBar .social-ink_btn {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 18px;
        width: 30px;
        height: 30px; }
        .header_topBar .social-ink_btn:last-child {
          margin-right: 0; }
    .header_topBar .join-link {
      position: absolute;
      top: -15px;
      right: 70px;
      width: 126px;
      z-index: -1;
      transition: all 0.5s; }
      @media only screen and (max-width: 1199px) {
        .header_topBar .join-link {
          top: -8px;
          width: 90px; } }
      @media only screen and (max-width: 767px) {
        .header_topBar .join-link {
          position: fixed;
          top: initial;
          bottom: 17vh;
          right: -12px; } }
      .header_topBar .join-link:hover {
        -webkit-transform: translateY(15px);
                transform: translateY(15px); }
      @media only screen and (max-width: 767px) {
        .header_topBar .join-link .flag {
          display: none; } }
    .header_topBar .mob-join-link {
      position: relative;
      display: none;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      width: 60px;
      height: 60px;
      font-size: 0.875rem;
      color: #fff;
      background: #1d7fa7;
      border-radius: 50%; }
      @media only screen and (max-width: 767px) {
        .header_topBar .mob-join-link {
          display: flex; } }
      .header_topBar .mob-join-link .fas {
        margin-bottom: 5px; }
      .header_topBar .mob-join-link::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%);
        width: 56px;
        height: 56px;
        background: transparent;
        border: 1px solid #fff;
        border-radius: 50%; }
  .header_logo {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 70px;
    position: relative; }
    @media only screen and (max-width: 1199px) {
      .header_logo {
        margin-bottom: 50px; } }
    @media only screen and (max-width: 767px) {
      .header_logo {
        display: none; } }
    .header_logo_link {
      overflow: hidden;
      text-indent: 100%;
      white-space: nowrap;
      width: 278px;
      height: 159px;
      background-size: cover !important; }
  @media only screen and (max-width: 767px) {
    .header_nav {
      position: fixed;
      bottom: 0;
      left: 0;
      padding: 6px 0;
      width: 100%;
      background: #f2f2f2; } }
  .header_nav .nav {
    display: flex;
    align-items: center;
    justify-content: center; }
    @media only screen and (max-width: 767px) {
      .header_nav .nav_item {
        width: 20%; } }
    .header_nav .nav_item:not(:last-child) {
      margin-right: 24px; }
      @media only screen and (max-width: 767px) {
        .header_nav .nav_item:not(:last-child) {
          margin-right: 0; } }
    .header_nav .nav_item a {
      padding: 12px 20px 12px 30px;
      letter-spacing: 10px;
      font-size: 1.5rem;
      font-weight: 700;
      border: 5px solid;
      border-radius: 30px; }
      @media only screen and (max-width: 1400px) {
        .header_nav .nav_item a {
          padding: 10px 10px 10px 15px;
          font-size: 1.25rem;
          letter-spacing: 5px; } }
      @media only screen and (max-width: 991px) {
        .header_nav .nav_item a {
          font-size: 1rem; } }
      @media only screen and (max-width: 767px) {
        .header_nav .nav_item a {
          display: flex;
          flex-direction: column;
          align-items: center;
          padding: 5px;
          font-size: 12px;
          border: 0;
          letter-spacing: 0; } }
      .header_nav .nav_item a .fas {
        display: none; }
        @media only screen and (max-width: 767px) {
          .header_nav .nav_item a .fas {
            display: block;
            margin-bottom: 10px;
            font-size: 1.25rem; } }
  .header_nav .color-border-primary {
    color: #1d7fa7;
    border-color: #1d7fa7;
    transition: all 0.5s; }
    @media only screen and (max-width: 767px) {
      .header_nav .color-border-primary {
        color: #979797; } }
    .header_nav .color-border-primary:hover {
      color: #fff;
      background: #1d7fa7;
      border-color: #1d7fa7; }
      @media only screen and (max-width: 767px) {
        .header_nav .color-border-primary:hover {
          color: #1d7fa7;
          background: #f2f2f2;
          border-color: #f2f2f2; } }
  .header_nav .color-border-primary.active {
    color: #fff;
    background: #1d7fa7;
    border-color: #1d7fa7; }
  .header_nav .currpage .color-border-primary {
    color: #1d7fa7; }
  .header_nav .color-border-secondary {
    color: #ea6000;
    border-color: #ea6000;
    transition: all 0.5s; }
    @media only screen and (max-width: 767px) {
      .header_nav .color-border-secondary {
        color: #979797; } }
    .header_nav .color-border-secondary:hover {
      color: #fff;
      background: #ea6000;
      border-color: #ea6000; }
      @media only screen and (max-width: 767px) {
        .header_nav .color-border-secondary:hover {
          color: #ea6000;
          background: #f2f2f2;
          border-color: #f2f2f2; } }
  .header_nav .color-border-secondary.active {
    color: #fff;
    background: #ea6000;
    border-color: #ea6000; }
  .header_nav .currpage .color-border-secondary {
    color: #ea6000; }
  .header_nav .color-border-success {
    color: #1b806d;
    border-color: #1b806d;
    transition: all 0.5s; }
    @media only screen and (max-width: 767px) {
      .header_nav .color-border-success {
        color: #979797; } }
    .header_nav .color-border-success:hover {
      color: #fff;
      background: #1b806d;
      border-color: #1b806d; }
      @media only screen and (max-width: 767px) {
        .header_nav .color-border-success:hover {
          color: #1b806d;
          background: #f2f2f2;
          border-color: #f2f2f2; } }
  .header_nav .color-border-success.active {
    color: #fff;
    background: #1b806d;
    border-color: #1b806d; }
  .header_nav .currpage .color-border-success {
    color: #1b806d; }

.footer_nav {
  background: #1d7fa7; }

.footer_nav_wrap {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  margin: 0 auto 10px;
  padding: 56px 16px 70px;
  width: 100%;
  max-width: 1720px; }
  @media only screen and (max-width: 1400px) {
    .footer_nav_wrap {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 56px 30px 70px; } }
  @media only screen and (max-width: 767px) {
    .footer_nav_wrap {
      display: none; } }
  .footer_nav_wrap .page-details {
    display: flex;
    align-items: center;
    justify-content: center; }
    .footer_nav_wrap .page-details_item:not(:last-child) {
      margin-bottom: 26px; }
    .footer_nav_wrap .page-details_content {
      display: flex;
      justify-content: flex-start;
      flex-direction: column;
      margin-right: 70px;
      height: 224px; }
      @media only screen and (max-width: 1400px) {
        .footer_nav_wrap .page-details_content {
          margin-right: 30px; } }
      @media only screen and (max-width: 991px) {
        .footer_nav_wrap .page-details_content {
          margin-right: 24px; } }
    .footer_nav_wrap .page-details h3 {
      margin-bottom: 26px;
      padding: 5px 20px;
      font-size: 2.1875rem;
      font-weight: 700;
      color: #fff;
      border: 1px solid #fff;
      border-radius: 40px; }
      @media only screen and (max-width: 1400px) {
        .footer_nav_wrap .page-details h3 {
          font-size: 2rem; } }
      @media only screen and (max-width: 991px) {
        .footer_nav_wrap .page-details h3 {
          font-size: 1.5rem; } }
    .footer_nav_wrap .page-details a {
      padding: 5px 20px;
      font-size: 2rem;
      font-weight: normal;
      color: #fff; }
      @media only screen and (max-width: 1400px) {
        .footer_nav_wrap .page-details a {
          font-size: 1.5rem; } }
      @media only screen and (max-width: 991px) {
        .footer_nav_wrap .page-details a {
          font-size: 1.125rem; } }
  .footer_nav_wrap .page-list_item {
    font-size: 2.5rem;
    font-weight: 700; }
    @media only screen and (max-width: 1400px) {
      .footer_nav_wrap .page-list_item {
        font-size: 2rem; } }
    @media only screen and (max-width: 991px) {
      .footer_nav_wrap .page-list_item {
        font-size: 1.5rem; } }
    .footer_nav_wrap .page-list_item:not(:last-child) {
      margin-bottom: 22px; }
  .footer_nav_wrap .page-list a {
    color: #fff; }
  .footer_nav_wrap .footer-join-link {
    width: 200px; }

.footer-logo {
  width: 20%; }
  @media only screen and (max-width: 1199px) {
    .footer-logo {
      display: none; } }

.footer-social {
  padding: 16px 0;
  background: #ea6000; }
  @media only screen and (max-width: 767px) {
    .footer-social {
      position: fixed;
      top: 0;
      left: 0;
      padding: 8px 0;
      width: 100%;
      z-index: 500; } }
  @media only screen and (max-width: 767px) {
    .footer-social .phone-visible {
      display: none; } }
  .footer-social .social-link {
    display: flex;
    align-items: center;
    justify-content: center; }
    .footer-social .social-link_item:not(:last-child) {
      position: relative; }
      .footer-social .social-link_item:not(:last-child) a::after {
        position: absolute;
        top: 0;
        right: 0;
        content: '';
        width: 2px;
        height: 100%;
        background: #fff; }
  .footer-social a {
    padding: 0 34px;
    font-size: 2rem;
    color: #fff; }
    @media only screen and (max-width: 1400px) {
      .footer-social a {
        padding: 0 20px;
        font-size: 1.25rem; } }
    @media only screen and (max-width: 991px) {
      .footer-social a {
        font-size: 1rem; } }
    @media only screen and (max-width: 767px) {
      .footer-social a {
        padding: 0 10px; } }

.home {
  padding-top: 80px; }
  @media only screen and (max-width: 1199px) {
    .home {
      padding-top: 50px; } }
  @media only screen and (max-width: 767px) {
    .home {
      padding-top: 124px; } }
  .home .title-icon {
    width: 50px;
    height: 50px; }
    @media only screen and (max-width: 1199px) {
      .home .title-icon {
        width: 40px;
        height: 40px; } }
  .home .title {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3.25rem; }
    @media only screen and (max-width: 1199px) {
      .home .title {
        font-size: 2.875rem; } }
    @media only screen and (max-width: 767px) {
      .home .title {
        font-size: 1.875rem; } }
    .home .title h2 {
      margin: 0 24px;
      letter-spacing: 5px; }
  .home_banner_wrap {
    position: relative;
    margin: 0 auto 290px;
    max-width: 1560px; }
    @media only screen and (max-width: 1400px) {
      .home_banner_wrap {
        width: 90%;
        max-width: 100%;
        margin-bottom: 240px; } }
    @media only screen and (max-width: 1199px) {
      .home_banner_wrap {
        margin-bottom: 190px; } }
    @media only screen and (max-width: 991px) {
      .home_banner_wrap {
        margin-bottom: 160px; } }
    @media only screen and (max-width: 767px) {
      .home_banner_wrap {
        width: 98%;
        margin-bottom: 98px; } }
    .home_banner_wrap .content {
      background-size: cover !important; }
    .home_banner_wrap .fire-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      bottom: -10%;
      left: 2%; }
      @media only screen and (max-width: 1199px) {
        .home_banner_wrap .fire-icon {
          bottom: -13%; } }
      @media only screen and (max-width: 767px) {
        .home_banner_wrap .fire-icon {
          bottom: -14%;
          left: -4%; } }
      @media only screen and (max-width: 575px) {
        .home_banner_wrap .fire-icon {
          left: 0; } }
      @media only screen and (max-width: 478px) {
        .home_banner_wrap .fire-icon {
          bottom: -19%; } }
      .home_banner_wrap .fire-icon img {
        margin-right: 22px;
        width: 140px; }
        @media only screen and (max-width: 1400px) {
          .home_banner_wrap .fire-icon img {
            width: 12%; } }
        @media only screen and (max-width: 767px) {
          .home_banner_wrap .fire-icon img {
            margin-right: 10px; } }
      .home_banner_wrap .fire-icon span {
        font-size: 2.375rem;
        font-weight: 800;
        color: #ea6000;
        letter-spacing: 15px; }
        @media only screen and (max-width: 1400px) {
          .home_banner_wrap .fire-icon span {
            font-size: 1.875rem; } }
        @media only screen and (max-width: 1199px) {
          .home_banner_wrap .fire-icon span {
            letter-spacing: 8px; } }
        @media only screen and (max-width: 991px) {
          .home_banner_wrap .fire-icon span {
            font-size: 1.5rem; } }
        @media only screen and (max-width: 767px) {
          .home_banner_wrap .fire-icon span {
            font-size: 1rem;
            letter-spacing: 4px; } }
    .home_banner_wrap .hot-icon {
      position: absolute;
      bottom: -15%;
      right: 4%; }
      @media only screen and (max-width: 1400px) {
        .home_banner_wrap .hot-icon {
          width: 15%; } }
      @media only screen and (max-width: 767px) {
        .home_banner_wrap .hot-icon {
          display: none; } }
  .home-about_wrap {
    margin: 0 auto 230px;
    max-width: 1228px; }
    @media only screen and (max-width: 1400px) {
      .home-about_wrap {
        width: 90%;
        max-width: 100%;
        margin-bottom: 140px; } }
    @media only screen and (max-width: 991px) {
      .home-about_wrap {
        margin-bottom: 90px; } }
    @media only screen and (max-width: 767px) {
      .home-about_wrap {
        margin-bottom: 40px; } }
    .home-about_wrap .images {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding-right: 100px;
      width: 50%; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .images {
          padding-right: 8%; } }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .images {
          padding-right: 5%; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .images {
          padding-right: 0;
          width: 100%; } }
      .home-about_wrap .images::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 7px;
        height: 100%;
        background: #c1ae8a;
        border-radius: 10px; }
        @media only screen and (max-width: 767px) {
          .home-about_wrap .images::after {
            display: none; } }
      .home-about_wrap .images > img {
        position: absolute; }
    .home-about_wrap .text {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      padding: 30px 0 50px 50px;
      width: 50%; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .text {
          padding: 30px 0 30px 50px; } }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .text {
          padding: 30px 0 10px 50px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .text {
          align-items: flex-start;
          padding: 30px 0 0;
          width: 100%; } }
    .home-about_wrap .subtitle {
      margin-bottom: 40px;
      margin-right: auto;
      font-size: 2.375rem;
      font-weight: 800;
      letter-spacing: 19px;
      color: #ea6000; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .subtitle {
          margin-bottom: 20px; } }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .subtitle {
          font-size: 2rem;
          letter-spacing: 10px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .subtitle {
          font-size: 1.5rem;
          letter-spacing: 5px;
          margin-bottom: 10px; } }
    .home-about_wrap .paragraph {
      margin-bottom: 20px; }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .paragraph {
          margin-bottom: 5px; } }
    .home-about_wrap .paragraph p {
      font-size: 1.5rem;
      font-size: 1.25rem;
      font-weight: 700;
      color: #716752;
      line-height: 1.5; }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .paragraph p {
          font-size: 1rem; } }
      .home-about_wrap .paragraph p:not(:last-child) {
        margin-bottom: 30px; }
        @media only screen and (max-width: 1400px) {
          .home-about_wrap .paragraph p:not(:last-child) {
            margin-bottom: 15px; } }
    .home-about_wrap .more {
      display: flex;
      font-size: 1.75rem;
      background: #ea6000;
      letter-spacing: 18px;
      border-radius: 30px; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .more {
          letter-spacing: 5px;
          font-size: 1.25rem; } }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .more {
          letter-spacing: 2px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .more {
          margin-left: auto; } }
      .home-about_wrap .more a {
        display: flex;
        padding: 14px 39px;
        color: #fff; }
        @media only screen and (max-width: 1400px) {
          .home-about_wrap .more a {
            align-items: center;
            padding: 16px 25px; } }
        @media only screen and (max-width: 991px) {
          .home-about_wrap .more a {
            padding: 15px;
            font-size: 1rem; } }
        @media only screen and (max-width: 767px) {
          .home-about_wrap .more a {
            padding: 8px 12px;
            font-size: 0.75rem; } }
      .home-about_wrap .more:hover .arrow {
        -webkit-transform: translateX(10px);
                transform: translateX(10px); }
    .home-about_wrap .arrow {
      display: flex;
      transition: all 0.5s; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .arrow {
          display: none; } }
      .home-about_wrap .arrow img {
        margin-right: 2px;
        width: 12px; }
        @media only screen and (max-width: 1400px) {
          .home-about_wrap .arrow img {
            width: 8px; } }
    .home-about_wrap .title {
      color: #c1ae8a;
      margin-bottom: 67px; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .title {
          margin-bottom: 50px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .title {
          margin-bottom: 30px; } }
    .home-about_wrap .egg {
      top: -12%;
      left: 11%;
      width: 172px;
      z-index: 500; }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .egg {
          width: 120px; } }
      @media only screen and (max-width: 800px) {
        .home-about_wrap .egg {
          top: 4%; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .egg {
          display: none; } }
    .home-about_wrap .clip {
      top: -3%;
      left: 56%;
      width: 150px;
      z-index: 500; }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .clip {
          width: 115px; } }
      @media only screen and (max-width: 800px) {
        .home-about_wrap .clip {
          top: 10%; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .clip {
          display: none; } }
    .home-about_wrap .toast {
      position: absolute;
      top: 27px;
      right: -27px;
      width: 24%;
      max-width: 70px;
      z-index: 1; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .toast {
          right: -18px;
          width: 50px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .toast {
          display: none; } }
    .home-about_wrap .box {
      margin-top: 60px;
      background-repeat: no-repeat !important;
      background-size: 98% !important; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .box {
          margin-top: 0; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .box {
          margin: 0 auto;
          width: 80%; } }
    .home-about_wrap .about-frame {
      -webkit-transform: translate(-1px, -1px);
              transform: translate(-1px, -1px); }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .about-frame {
          -webkit-transform: translate(-2px, -2px);
                  transform: translate(-2px, -2px); } }
  .home-about_content {
    display: flex; }
    @media only screen and (max-width: 767px) {
      .home-about_content {
        flex-direction: column; } }
  .home-menu_wrap {
    position: relative;
    overflow: hidden;
    padding: 40px 0 80px;
    margin-bottom: 160px;
    background: #ea6000; }
    @media only screen and (max-width: 1400px) {
      .home-menu_wrap {
        margin-bottom: 140px; } }
    @media only screen and (max-width: 1199px) {
      .home-menu_wrap {
        margin-bottom: 100px; } }
    @media only screen and (max-width: 991px) {
      .home-menu_wrap {
        margin-bottom: 75px;
        padding: 40px 0 20px; } }
    @media only screen and (max-width: 767px) {
      .home-menu_wrap {
        padding: 24px 0 0;
        margin-bottom: 45px; } }
    .home-menu_wrap .title {
      position: relative;
      color: #fff;
      margin-bottom: 20px; }
      .home-menu_wrap .title h2 {
        position: absolute;
        display: flex;
        margin: 0;
        font-size: 2.5rem; }
        @media only screen and (max-width: 767px) {
          .home-menu_wrap .title h2 {
            font-size: 1.875rem; } }
      .home-menu_wrap .title-lattice {
        width: 304px; }
        @media only screen and (max-width: 767px) {
          .home-menu_wrap .title-lattice {
            width: 204px; } }
      .home-menu_wrap .title .letter {
        width: 60px;
        height: 60px;
        text-align: center;
        line-height: 60px; }
        @media only screen and (max-width: 767px) {
          .home-menu_wrap .title .letter {
            width: 40px;
            height: 40px;
            line-height: 40px; } }
    .home-menu_wrap .icon1 {
      position: absolute;
      top: -103px;
      left: -6%;
      width: 340px; }
      @media only screen and (max-width: 1400px) {
        .home-menu_wrap .icon1 {
          top: -10%;
          left: -9%;
          width: 20%; } }
    .home-menu_wrap .icon2 {
      position: absolute;
      bottom: -157px;
      right: -12%;
      width: 390px; }
      @media only screen and (max-width: 1400px) {
        .home-menu_wrap .icon2 {
          bottom: -12%;
          right: -10%;
          width: 20%; } }
  .home-menu_slick {
    position: relative;
    display: flex;
    width: 110%;
    -webkit-transform: translateX(-5%);
            transform: translateX(-5%);
    z-index: 1; }
    @media only screen and (max-width: 767px) {
      .home-menu_slick {
        width: 130%;
        -webkit-transform: translateX(-12%);
                transform: translateX(-12%); } }
    .home-menu_slick .slick-list {
      padding: 30px 0; }
      @media only screen and (max-width: 991px) {
        .home-menu_slick .slick-list {
          padding: 40px 0 30px; } }
      @media only screen and (max-width: 767px) {
        .home-menu_slick .slick-list {
          padding: 10px 0 30px; } }
    .home-menu_slick_item {
      position: relative;
      padding: 25px; }
      .home-menu_slick_item::after {
        position: absolute;
        bottom: 7px;
        right: 11px;
        width: 90%;
        height: 89%;
        background: #fff;
        border-radius: 50%;
        z-index: -1;
        content: ''; }
        @media only screen and (max-width: 767px) {
          .home-menu_slick_item::after {
            bottom: 15px;
            right: 19px;
            width: 74%;
            height: 74%; } }
      .home-menu_slick_item img {
        position: relative;
        z-index: 10;
        transition: all 0.5s; }
      .home-menu_slick_item:hover img {
        -webkit-transform: translate(60px, -60px);
                transform: translate(60px, -60px); }
        @media only screen and (max-width: 767px) {
          .home-menu_slick_item:hover img {
            -webkit-transform: translate(30px, -30px);
                    transform: translate(30px, -30px); } }
      .home-menu_slick_item:hover .text {
        opacity: 1; }
      .home-menu_slick_item a {
        position: relative; }
      .home-menu_slick_item .text {
        position: absolute;
        bottom: 11%;
        left: 11%;
        font-size: 1.875rem;
        font-weight: 600;
        -webkit-transform: rotate(34deg);
                transform: rotate(34deg);
        opacity: 0;
        transition: all 0.5s; }
        @media only screen and (max-width: 1400px) {
          .home-menu_slick_item .text {
            font-size: 1.5rem; } }
        @media only screen and (max-width: 991px) {
          .home-menu_slick_item .text {
            bottom: 10%;
            left: 0; } }
        @media only screen and (max-width: 767px) {
          .home-menu_slick_item .text {
            bottom: 13%;
            left: 1%;
            font-size: 1rem; } }
    .home-menu_slick_item.circle::after {
      bottom: 12px;
      right: 16px;
      width: 80%;
      height: 80%;
      border-radius: 10%;
      -webkit-transform: rotate(5deg);
              transform: rotate(5deg); }
      @media only screen and (max-width: 767px) {
        .home-menu_slick_item.circle::after {
          bottom: 15px;
          right: 19px;
          width: 70%;
          height: 70%; } }
    .home-menu_slick_item.circle .text {
      bottom: 8%;
      left: 12%; }
  .home-news_wrap {
    padding-bottom: 170px; }
    @media only screen and (max-width: 1400px) {
      .home-news_wrap {
        padding-bottom: 120px; } }
    @media only screen and (max-width: 991px) {
      .home-news_wrap {
        padding-bottom: 80px; } }
    .home-news_wrap .title {
      color: #ea6000;
      margin-bottom: 70px; }
      @media only screen and (max-width: 1400px) {
        .home-news_wrap .title {
          margin-bottom: 40px; } }
      @media only screen and (max-width: 1400px) {
        .home-news_wrap .title {
          margin-bottom: 20px; } }
    .home-news_wrap .title-icon1 {
      width: 40px;
      height: 40px; }
    .home-news_wrap .icon-group {
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto;
      max-width: 1520px; }
      .home-news_wrap .icon-group img {
        padding: 0 18px;
        width: calc(100% / 12); }
  .home-news_content {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 160px;
    padding: 0 16px;
    width: 100%;
    max-width: 1520px; }
    @media only screen and (max-width: 1400px) {
      .home-news_content {
        width: 90%;
        max-width: 100%;
        margin-bottom: 150px; } }
    @media only screen and (max-width: 991px) {
      .home-news_content {
        padding: 16px;
        width: 100%;
        margin-bottom: 110px; } }
    @media only screen and (max-width: 767px) {
      .home-news_content {
        display: flex;
        flex-direction: column;
        margin-bottom: 70px; } }
    .home-news_content_item {
      position: relative;
      width: 28%; }
      @media only screen and (max-width: 767px) {
        .home-news_content_item {
          width: 75%; } }
      .home-news_content_item:not(:last-child) {
        margin-right: 8%; }
        @media only screen and (max-width: 767px) {
          .home-news_content_item:not(:last-child) {
            margin-right: 0%;
            margin-bottom: 90px; } }
    .home-news_content .content {
      position: relative;
      background-position: center !important;
      background-repeat: no-repeat !important;
      background-size: cover !important;
      transition: all 0.5s; }
      .home-news_content .content-title {
        position: absolute;
        width: 100%;
        font-size: 3rem;
        font-weight: 800;
        letter-spacing: 5px;
        text-align: center; }
        @media only screen and (max-width: 1400px) {
          .home-news_content .content-title {
            font-size: 2.1875rem; } }
        @media only screen and (max-width: 991px) {
          .home-news_content .content-title {
            font-size: 1.75rem; } }
        @media only screen and (max-width: 767px) {
          .home-news_content .content-title {
            white-space: nowrap; } }
    .home-news_content .ct1 {
      bottom: -70px; }
      @media only screen and (max-width: 991px) {
        .home-news_content .ct1 {
          bottom: -50px; } }
      @media only screen and (max-width: 767px) {
        .home-news_content .ct1 {
          bottom: -47px; } }
    .home-news_content .ct2 {
      bottom: -92px; }
      @media only screen and (max-width: 991px) {
        .home-news_content .ct2 {
          bottom: -72px; } }
      @media only screen and (max-width: 767px) {
        .home-news_content .ct2 {
          bottom: -47px; } }
    .home-news_content .ct3 {
      bottom: -115px; }
      @media only screen and (max-width: 991px) {
        .home-news_content .ct3 {
          bottom: -95px; } }
      @media only screen and (max-width: 767px) {
        .home-news_content .ct3 {
          bottom: -47px; } }

.about .logo-icon {
  width: 40px; }

.about .title-ch {
  margin: 20px 0 0;
  font-size: 2.5rem;
  font-weight: 700;
  color: #333; }
  @media only screen and (max-width: 575px) {
    .about .title-ch {
      font-size: 2rem; } }

.about .title-en {
  position: relative;
  margin-top: 25px;
  margin-bottom: 30px;
  color: #333;
  letter-spacing: 0.18px; }
  .about .title-en::before {
    display: inline-block;
    margin-right: 15px;
    width: 40px;
    content: '';
    height: 1px;
    margin-bottom: 6px;
    background-color: #dddddd; }
  .about .title-en::after {
    display: inline-block;
    margin-left: 15px;
    width: 40px;
    content: '';
    height: 1px;
    margin-bottom: 6px;
    background-color: #dddddd; }

.about .text {
  max-width: 378px; }
  @media only screen and (max-width: 575px) {
    .about .text {
      padding: 0 15px; } }

.about .text p {
  margin: 0;
  font-size: 15px;
  font-family: 'Noto Sans TC';
  text-align: center;
  color: #808080;
  margin-bottom: 20px;
  line-height: 25px;
  letter-spacing: 0.75px; }

.about-video_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 0 110px; }
  @media only screen and (max-width: 991px) {
    .about-video_wrap {
      padding: 0 0 100px; } }

.about-video iframe {
  width: 80%;
  max-width: 1170px;
  height: 658px; }
  @media only screen and (max-width: 1199px) {
    .about-video iframe {
      height: 500px; } }
  @media only screen and (max-width: 991px) {
    .about-video iframe {
      height: 400px; } }
  @media only screen and (max-width: 767px) {
    .about-video iframe {
      width: 100%; } }

.about-story_wrap {
  padding-bottom: 120px; }
  @media only screen and (max-width: 991px) {
    .about-story_wrap {
      flex-direction: column;
      align-items: center; } }

.about-story_content {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 0 15px;
  width: 50%; }
  @media only screen and (max-width: 991px) {
    .about-story_content {
      width: 100%;
      margin-bottom: 30px; } }

.about-story_img {
  padding: 0 15px;
  width: 50%; }
  @media only screen and (max-width: 991px) {
    .about-story_img {
      width: 80%; } }

.about-brand_wrap {
  padding: 15px 0; }
  @media only screen and (max-width: 991px) {
    .about-brand_wrap {
      flex-direction: column-reverse;
      align-items: center;
      padding: 25px 0; } }

.about-brand_content {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 0 15px;
  width: 50%; }
  @media only screen and (max-width: 991px) {
    .about-brand_content {
      width: 100%; } }

.about-brand_img {
  padding: 0 15px;
  width: 50%; }
  .about-brand_img img {
    margin: 0 auto;
    width: 80%; }

.about-description_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 108px 0  86px;
  flex-direction: column; }

.about-description_img {
  margin-top: 80px; }

.about-description_content {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column; }

.about-advantage {
  background-size: cover !important; }
  .about-advantage_wrap {
    justify-content: center;
    padding: 100px 0; }
  .about-advantage .list {
    display: flex;
    align-items: center;
    justify-content: center; }
    .about-advantage .list_item {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      margin: 0 12px;
      padding: 40px;
      width: 20%;
      border: 4px solid #fff;
      border-color: #F8B500;
      border-radius: 20px; }
      .about-advantage .list_item_img {
        color: #808080; }
        .about-advantage .list_item_img img {
          height: 114px; }
      .about-advantage .list_item_title {
        margin-top: 20px;
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: #f8b500; }

.about-feature_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  padding: 60px 0; }

.about-feature_content {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin-bottom: 30px; }

.about-feature .list {
  display: flex;
  flex-wrap: wrap; }
  .about-feature .list_item {
    position: relative;
    overflow: hidden;
    margin: 0 12px 30px;
    width: calc((100% - 72px)/3);
    border-radius: 10px; }
    .about-feature .list_item:hover .content {
      -webkit-transform: translateY(0);
              transform: translateY(0); }
    .about-feature .list_item:hover .content .title {
      -webkit-transform: translateY(0);
              transform: translateY(0); }
    .about-feature .list_item_img {
      border-radius: 14px; }
    .about-feature .list_item .content {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%;
      color: #fff;
      background: rgba(0, 0, 0, 0.8);
      -webkit-transform: translateY(75%);
              transform: translateY(75%);
      transition: all 0.5s; }
      .about-feature .list_item .content .title {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 54px;
        font-size: 1.5rem;
        margin-bottom: 20px;
        -webkit-transform: translateY(-143%);
                transform: translateY(-143%);
        transition: all 0.5s; }
      .about-feature .list_item .content .text {
        max-width: 450px;
        text-align: center;
        line-height: 2; }

.about .top-btn {
  margin: 30px auto 0;
  padding: 10px 25px;
  font-weight: 700;
  border: 2px solid #F8B500;
  border-radius: 10px; }

.about-timeline_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  padding-bottom: 100px; }
  @media only screen and (max-width: 1199px) {
    .about-timeline_wrap {
      padding-right: 16px;
      padding-left: 16px; } }

.about-timeline .year-list {
  position: absolute;
  top: 20px;
  left: 7%; }
  @media only screen and (max-width: 1199px) {
    .about-timeline .year-list {
      display: none; } }
  .about-timeline .year-list_item.active::after {
    background: #333; }
  .about-timeline .year-list::after {
    position: absolute;
    top: 0;
    left: -21px;
    width: 2px;
    height: 100%;
    content: '';
    background: #ea6000;
    z-index: -1; }
  .about-timeline .year-list_item {
    position: relative;
    color: #ea6000;
    color: #333;
    cursor: pointer;
    transition: all 0.5s; }
    .about-timeline .year-list_item:not(:last-child) {
      margin-bottom: 50px; }
    .about-timeline .year-list_item::after {
      position: absolute;
      top: 0;
      left: -30px;
      content: '';
      width: 20px;
      height: 20px;
      background: #ea6000;
      border-radius: 50%;
      -webkit-transform: translateY(-2px);
              transform: translateY(-2px); }
      @media only screen and (max-width: 991px) {
        .about-timeline .year-list_item::after {
          display: none; } }

.about-timeline .list {
  position: relative;
  max-width: 900px;
  height: 1500px; }
  @media only screen and (max-width: 991px) {
    .about-timeline .list {
      height: auto; } }
  .about-timeline .list::before {
    position: absolute;
    top: 0;
    left: 50%;
    content: '';
    width: 2px;
    height: 100%;
    background: #ea6000;
    -webkit-transform: translateX(-1px);
            transform: translateX(-1px); }
    @media only screen and (max-width: 991px) {
      .about-timeline .list::before {
        display: none; } }
  .about-timeline .list::after {
    position: absolute;
    bottom: 0;
    left: 50%;
    content: '';
    width: 25px;
    height: 25px;
    background: #ea6000;
    border-radius: 50%;
    -webkit-transform: translateX(-50%);
            transform: translateX(-50%); }
    @media only screen and (max-width: 991px) {
      .about-timeline .list::after {
        display: none; } }
  .about-timeline .list_item {
    position: relative;
    top: 0;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding-top: 10px; }
    @media only screen and (max-width: 991px) {
      .about-timeline .list_item {
        margin-bottom: 30px; } }
    .about-timeline .list_item::after {
      position: absolute;
      top: 0;
      left: 50%;
      content: '';
      width: 30px;
      height: 30px;
      background: #ea6000;
      border-radius: 50%;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%); }
      @media only screen and (max-width: 991px) {
        .about-timeline .list_item::after {
          display: none; } }
    @media only screen and (max-width: 991px) {
      .about-timeline .list_item .content.content.content {
        margin: 0;
        width: 100%; } }
    @media only screen and (max-width: 991px) {
      .about-timeline .list_item .space.space.space {
        display: none; } }
    .about-timeline .list_item:nth-child(even) {
      flex-direction: row-reverse; }
      .about-timeline .list_item:nth-child(even) .content {
        margin: 0 0 0 50px;
        width: 50%; }
      .about-timeline .list_item:nth-child(even) .space {
        margin-left: 50px;
        width: 50%; }
    .about-timeline .list_item:not(:first-child)::after {
      width: 25px;
      height: 25px;
      border: 5px solid #fff; }
  .about-timeline .list .s2 {
    -webkit-transform: translateY(-150px);
            transform: translateY(-150px); }
    @media only screen and (max-width: 991px) {
      .about-timeline .list .s2 {
        -webkit-transform: translateY(0);
                transform: translateY(0); } }
  .about-timeline .list .s3 {
    -webkit-transform: translateY(-300px);
            transform: translateY(-300px); }
    @media only screen and (max-width: 991px) {
      .about-timeline .list .s3 {
        -webkit-transform: translateY(0);
                transform: translateY(0); } }
  .about-timeline .list .s4 {
    -webkit-transform: translateY(-450px);
            transform: translateY(-450px); }
    @media only screen and (max-width: 991px) {
      .about-timeline .list .s4 {
        -webkit-transform: translateY(0);
                transform: translateY(0); } }
  .about-timeline .list .s5 {
    -webkit-transform: translateY(-600px);
            transform: translateY(-600px); }
    @media only screen and (max-width: 991px) {
      .about-timeline .list .s5 {
        -webkit-transform: translateY(0);
                transform: translateY(0); } }
  .about-timeline .list .img {
    color: #fff;
    background: #ea6000;
    border: 15px solid #ea6000;
    margin-bottom: 15px; }
  .about-timeline .list .text {
    line-height: 1.5; }
  .about-timeline .list .year {
    padding-top: 20px;
    font-size: 1.5rem;
    text-align: center; }
  .about-timeline .list .content {
    margin-right: 50px;
    width: 50%; }
  .about-timeline .list .space {
    margin-left: 50px;
    width: 50%; }

.about-approve .page-nav_wrap {
  margin-bottom: 0; }

.about-approve .bg-set {
  background-repeat: no-repeat !important;
  background-size: cover !important; }
  @media only screen and (max-width: 767px) {
    .about-approve .bg-set {
      position: relative;
      display: block; } }
  .about-approve .bg-set::after {
    position: absolute;
    top: 0;
    bottom: 0;
    content: '';
    right: 0;
    left: 0;
    display: none;
    background: rgba(0, 0, 0, 0.5); }
    @media only screen and (max-width: 767px) {
      .about-approve .bg-set::after {
        display: block; } }

@media only screen and (max-width: 767px) {
  .about-approve .mob-bg-pos-r {
    background-position: right !important; } }

.about-approve .s-left.s-left {
  justify-content: flex-start; }

.about-approve .about-approve-section1 {
  border-bottom: 3px solid #ffaf00; }

.about-approve .about-approve-section2 {
  border-bottom: 3px solid #c7c0cd; }

.about-approve .about-approve-section3 {
  border-bottom: 3px solid #8ab935; }

.about-approve .about-approve-section4 {
  border-bottom: 3px solid #bb7b64; }

.about-approve .about-approve-section5_wrap {
  display: flex; }
  @media only screen and (max-width: 991px) {
    .about-approve .about-approve-section5_wrap {
      flex-direction: column; } }

.about-approve .about-approve-section5 .img {
  width: 33.3333%; }
  @media only screen and (max-width: 991px) {
    .about-approve .about-approve-section5 .img {
      width: 100%; } }

.about-approve .about-approve-section5 .content {
  padding: 0;
  width: 33.3333%; }
  @media only screen and (max-width: 991px) {
    .about-approve .about-approve-section5 .content {
      padding: 100px 0;
      width: 100%; } }

.about-approve .about-approve-section5 .bg-set {
  position: relative; }
  .about-approve .about-approve-section5 .bg-set::after {
    display: block;
    background: rgba(255, 255, 255, 0.5); }
    @media only screen and (max-width: 767px) {
      .about-approve .about-approve-section5 .bg-set::after {
        background: rgba(0, 0, 0, 0.5); } }

.about-approve .about-approve-section5 .logo-icon,
.about-approve .about-approve-section5 .title-ch,
.about-approve .about-approve-section5 .title-en,
.about-approve .about-approve-section5 .text,
.about-approve .about-approve-section5 .btn {
  position: relative;
  z-index: 1; }

.about-approve .about-approve-section5 .title-en {
  margin: 15px 0; }
  @media only screen and (max-width: 767px) {
    .about-approve .about-approve-section5 .title-en {
      position: relative;
      z-index: 1; } }

.about-approve .about-approve-section5 .btn {
  margin: 0;
  padding: 12px 30px;
  color: #333;
  border: 3px solid #ea6000;
  border-radius: 10px; }
  @media only screen and (max-width: 767px) {
    .about-approve .about-approve-section5 .btn {
      background: #fff; } }

.about-approve .about-approve-section {
  display: flex;
  justify-content: flex-end;
  margin: 0 auto;
  max-width: 1200px; }

.about-approve .content {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 100px 0;
  flex-direction: column;
  width: 50%; }
  @media only screen and (max-width: 767px) {
    .about-approve .content {
      width: 100%;
      z-index: 1; } }
  @media only screen and (max-width: 767px) {
    .about-approve .content .title-ch {
      color: #fff; } }
  @media only screen and (max-width: 767px) {
    .about-approve .content .title-en {
      color: #fff; } }
  @media only screen and (max-width: 767px) {
    .about-approve .content .text p {
      color: #fff; } }

.about-approve .section {
  padding: 102px 0; }

.about-food {
  padding-bottom: 100px; }
  .about-food_wrap {
    display: flex;
    align-items: flex-start;
    justify-content: content;
    margin: 0 auto;
    padding: 0 16px;
    max-width: 1232px;
    min-height: 400px; }
    @media only screen and (max-width: 767px) {
      .about-food_wrap {
        flex-direction: column; } }
  .about-food .left {
    padding-left: 20px;
    width: 25%; }
    @media only screen and (max-width: 767px) {
      .about-food .left {
        width: 100%;
        margin-bottom: 20px; } }
    .about-food .left h4 {
      margin-bottom: 45px;
      position: relative;
      font-size: 1.25rem; }
      .about-food .left h4::after {
        position: absolute;
        bottom: -20px;
        left: 0;
        content: ' ';
        width: 50px;
        height: 5px;
        background: #333; }
  .about-food .list_item {
    margin-bottom: 15px;
    position: relative;
    padding-left: 20px; }
    .about-food .list_item::after {
      position: absolute;
      top: 3px;
      left: 0;
      content: '';
      width: 0;
      height: 0;
      border-style: solid;
      border-width: 6px 0 6px 6px;
      border-color: transparent transparent transparent #333; }
  .about-food .right {
    width: 75%; }
    @media only screen and (max-width: 767px) {
      .about-food .right {
        width: 100%; } }
    .about-food .right .content-list_title {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      padding: 20px 16px;
      width: 100%;
      font-size: 16px;
      color: #fff;
      background: #262626;
      text-transform: uppercase;
      border-radius: 10px;
      margin-bottom: 10px;
      cursor: pointer; }
    .about-food .right .content-list_content {
      display: none;
      padding: 16px; }
    .about-food .right .content-list .far.fa-file-alt {
      margin-right: 16px; }
      @media only screen and (max-width: 767px) {
        .about-food .right .content-list .far.fa-file-alt {
          margin-right: 30px; } }
    .about-food .right .content-list .category {
      margin-right: 10px; }
    .about-food .right .content-list .date {
      margin-left: auto; }
      @media only screen and (max-width: 767px) {
        .about-food .right .content-list .date {
          display: none; } }

.location-content_wrap {
  display: flex;
  margin: 0 auto;
  padding: 110px 0;
  width: 95%;
  max-width: 1600px; }
  @media only screen and (max-width: 1300px) {
    .location-content_wrap {
      width: 85%; } }
  @media only screen and (max-width: 991px) {
    .location-content_wrap {
      padding: 50px 0 110px; } }

.location .taiwan-map {
  padding-right: 20px;
  width: 26%; }
  @media only screen and (max-width: 1300px) {
    .location .taiwan-map {
      display: none; } }

.location .taiwan-image {
  max-width: 440px; }
  .location .taiwan-image .st0 {
    fill: #138A7B;
    transition: all 0.5s; }
  .location .taiwan-image .st1 {
    fill: #FFFFFF; }
  .location .taiwan-image .st2 {
    font-family: 'GenSekiGothicTW-B'; }
  .location .taiwan-image .st3 {
    font-size: 2.25rem; }
  .location .taiwan-image .st4 {
    letter-spacing: 3px; }
  .location .taiwan-image .area {
    transition: all 0.5s;
    cursor: pointer; }
  .location .taiwan-image .north-text,
  .location .taiwan-image .west-text,
  .location .taiwan-image .south-text {
    transition: all 0.5s;
    cursor: pointer;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; }
  .location .taiwan-image .hover-active .st0 {
    fill: #fa0; }
  .location .taiwan-image .north.click-active {
    -webkit-transform: translate(0, -8px);
            transform: translate(0, -8px); }
    .location .taiwan-image .north.click-active .st0 {
      fill: #fa0; }
  .location .taiwan-image .west.click-active {
    -webkit-transform: translate(-6px, -24px);
            transform: translate(-6px, -24px); }
    .location .taiwan-image .west.click-active .st0 {
      fill: #fa0; }
  .location .taiwan-image .south.click-active {
    -webkit-transform: translate(0, -28px);
            transform: translate(0, -28px); }
    .location .taiwan-image .south.click-active .st0 {
      fill: #fa0; }
  .location .taiwan-image .north-text.click-active {
    -webkit-transform: matrix(1 0 0 1 275.2254 148.3627);
            transform: matrix(1 0 0 1 275.2254 148.3627); }
  .location .taiwan-image .west-text.click-active {
    -webkit-transform: matrix(1 0 0 1 136.5047 337.3533);
            transform: matrix(1 0 0 1 136.5047 337.3533); }
  .location .taiwan-image .south-text.click-active {
    -webkit-transform: matrix(1 0 0 1 61.5081 589.3406);
            transform: matrix(1 0 0 1 61.5081 589.3406); }

.location .stores {
  padding-top: 80px;
  width: 74%; }
  @media only screen and (max-width: 1300px) {
    .location .stores {
      padding-top: 0;
      width: 100%; } }
  .location .stores_title {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-top: 5px solid #308fb4;
    border-bottom: 5px solid #308fb4;
    padding: 5px 24px;
    color: #308fb4; }
    @media only screen and (max-width: 1300px) {
      .location .stores_title {
        flex-direction: column;
        padding: 16px 0; } }
    .location .stores_title .en {
      font-size: 1.5rem;
      font-weight: 700; }
      @media only screen and (max-width: 1300px) {
        .location .stores_title .en {
          display: none; } }
    .location .stores_title .ch {
      font-size: 1.875rem;
      font-weight: 700;
      letter-spacing: 10px; }
      @media only screen and (max-width: 1300px) {
        .location .stores_title .ch {
          margin-bottom: 20px; } }
  .location .stores_select {
    display: flex;
    align-items: center;
    justify-content: center; }
    .location .stores_select_item {
      padding: 5px 15px 5px 20px;
      font-size: 0.875rem;
      color: #fff;
      background: #ea6000;
      border-radius: 30px;
      letter-spacing: 2px;
      line-height: 20px;
      cursor: pointer; }
    .location .stores_select .mr-10 {
      margin-right: 10px; }
    .location .stores_select .fas {
      margin-left: 5px;
      font-size: 1.25rem;
      -webkit-transform: translateY(-2px);
              transform: translateY(-2px); }
  .location .stores-list {
    padding: 30px; }
    @media only screen and (max-width: 1300px) {
      .location .stores-list {
        padding: 30px 0; } }
  .location .stores-list_item {
    display: flex;
    align-items: center;
    justify-content: flex-start; }
    @media only screen and (max-width: 1300px) {
      .location .stores-list_item {
        flex-direction: column;
        border: 2px solid #308fb4;
        border-radius: 4px; } }
    .location .stores-list_item:not(:last-child) {
      margin-bottom: 15px; }
      @media only screen and (max-width: 1300px) {
        .location .stores-list_item:not(:last-child) {
          margin-bottom: 40px; } }
  .location .stores-links {
    display: flex;
    margin-left: auto; }
    @media only screen and (max-width: 1300px) {
      .location .stores-links {
        justify-content: center;
        margin-left: initial;
        padding: 10px; } }
    .location .stores-links_item:not(:last-child) {
      margin-right: 8px; }
    .location .stores-links_item a {
      width: 40px;
      height: 40px; }
  .location .stores-area {
    padding: 5px;
    border-left: 2px solid #308fb4;
    border-right: 2px solid #308fb4;
    font-size: 1.25rem;
    font-weight: 700;
    color: #308fb4; }
    @media only screen and (max-width: 1300px) {
      .location .stores-area {
        padding: 10px;
        width: 100%;
        text-align: center;
        color: #fff;
        background: #308fb4; } }
  .location .stores-name {
    padding: 0 15px;
    font-size: 1.25rem;
    font-weight: 700;
    color: #308fb4; }
    @media only screen and (max-width: 1300px) {
      .location .stores-name {
        padding: 8px;
        width: 100%;
        text-align: center;
        border-bottom: 2px solid #308fb4; } }
  .location .stores-address {
    font-size: 1.25rem;
    font-weight: 700;
    color: #3e3a39; }
    @media only screen and (max-width: 1300px) {
      .location .stores-address {
        padding: 8px;
        width: 100%;
        text-align: center;
        border-bottom: 2px solid #308fb4; } }

.contact-content_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin: 0 auto;
  padding: 110px 0;
  width: 80%;
  max-width: 1700px; }
  @media only screen and (max-width: 1400px) {
    .contact-content_wrap {
      width: 90%; } }
  @media only screen and (max-width: 991px) {
    .contact-content_wrap {
      padding: 50px 0 110px; } }

.contact .section-title {
  font-size: 2.5rem;
  font-weight: 800;
  color: #ea6000;
  margin-bottom: 30px; }
  @media only screen and (max-width: 575px) {
    .contact .section-title {
      font-size: 1.875rem; } }

.contact .contact-form {
  width: 70%;
  max-width: 900px; }
  @media only screen and (max-width: 575px) {
    .contact .contact-form {
      width: 100%; } }

.contact .form-row {
  margin-bottom: 30px; }

.contact input {
  padding: 6px 12px;
  width: 100%;
  height: 50px;
  border: 2px solid #ea6000;
  border-radius: 10px; }

.contact textarea {
  padding: 12px;
  width: 100%;
  border: 2px solid #ea6000;
  border-radius: 10px; }

.contact .submit {
  display: flex;
  justify-content: center; }

.contact .submit input {
  padding: 10px 30px;
  width: auto;
  height: auto;
  cursor: pointer;
  color: #ea6000;
  background: #fff;
  transition: all 0.5s; }
  .contact .submit input:hover {
    color: #fff;
    background: #ea6000; }

.news-content_wrap {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  margin: 0 auto;
  padding: 110px 0;
  width: 80%;
  max-width: 1700px; }
  @media only screen and (max-width: 1400px) {
    .news-content_wrap {
      width: 90%; } }
  @media only screen and (max-width: 991px) {
    .news-content_wrap {
      padding: 50px 0 110px; } }

.news .section-title {
  font-size: 2.5rem;
  font-weight: 800;
  color: #ea6000;
  margin-bottom: 50px; }
  @media only screen and (max-width: 575px) {
    .news .section-title {
      font-size: 1.875rem;
      margin-bottom: 30px; } }

.news .news-list {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  padding: 0 16px;
  width: 100%;
  max-width: 1320px;
  margin-bottom: 50px; }
  .news .news-list_item {
    padding: 0 16px;
    width: 33.3333%;
    margin-bottom: 30px; }
    @media only screen and (max-width: 1199px) {
      .news .news-list_item {
        width: 50%; } }
    @media only screen and (max-width: 767px) {
      .news .news-list_item {
        width: 100%; } }
  .news .news-list .card {
    border-radius: 8px 8px 0 0;
    box-shadow: 0 0 15px 2px rgba(0, 0, 0, 0.2); }
    .news .news-list .card_image {
      overflow: hidden; }
      .news .news-list .card_image img {
        border-radius: 8px 8px 0 0; }
    .news .news-list .card_body {
      padding: 24px;
      height: 139px; }
    .news .news-list .card .date {
      margin-bottom: 15px;
      font-size: 0.875rem;
      color: #999; }
    .news .news-list .card .title {
      font-size: 1.25rem;
      font-weight: 800;
      color: #333;
      line-height: 1.5; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
