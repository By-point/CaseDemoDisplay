@charset "UTF-8";
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  margin: 0.67em 0;
  font-size: 2em; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  overflow: visible;
  /* 2 */
  height: 0;
  /* 1 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  display: block;
  text-decoration: none;
  color: #000;
  background-color: transparent;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr [title] {
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-size: 1em;
  /* 2 */
  font-family: monospace;
  /* 1 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  /* 2 */
  font-size: 100%;
  /* 1 */
  font-family: inherit;
  /* 1 */
  line-height: 1.15;
  /* 1 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  padding: 0;
  border-style: none; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table;
  /* 1 */
  padding: 0;
  /* 3 */
  max-width: 100%;
  /* 1 */
  box-sizing: border-box;
  /* 1 */
  white-space: normal;
  /* 1 */
  color: inherit;
  /* 2 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type='checkbox'],
[type='radio'] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* 自定義設定
  ============================================================================ */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-size: 100%;
  font-weight: normal; }

address {
  font-style: normal; }

p {
  margin: 0; }

ul {
  margin: 0;
  list-style-type: none;
  padding: 0; }

/* box-sizing 設定 */
*,
*::before,
*::after {
  box-sizing: border-box; }

div:focus,
span:focus,
article:focus,
section:focus,
a:focus,
ul:focus,
li:focus {
  outline: none; }

/* 去除input的藍色框框 */
input,
button,
select,
textarea {
  outline: none; }

img {
  display: block;
  width: 100%;
  max-width: 100%;
  height: auto;
  border: 0;
  border-style: none; }

/* 去除異常空格 */
picture {
  overflow: hidden;
  font-size: 0; }

@font-face {
  font-family: 'roboto_italic';
  src: url("../font/Roboto-Italic.ttf");
  font-weight: normal;
  font-style: normal; }

html {
  font-size: 16px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Microsoft JhengHei', Roboto, 'Helvetica Neue', Arial, sans-serif; }

.color-primary {
  color: #1d7fa7; }

.color-secondary {
  color: #ea6000; }

.color-success {
  color: #1b806d; }

.u-flex {
  display: flex; }

.d-none {
  display: none !important; }

.c-banner_title {
  font-size: 1rem; }

.c-banner_subtitle {
  font-size: 1rem; }

.c-banner_text {
  font-size: 1rem; }

.c-banner_icon {
  font-size: 1rem; }

.l-container {
  margin: 0 auto;
  max-width: 1200px; }
  @media only screen and (max-width: 1199px) {
    .l-container {
      max-width: 990px; } }

.header {
  position: relative;
  z-index: 500; }
  .header_wrap {
    position: relative;
    z-index: 500; }
  .header_topBar {
    margin-bottom: 50px; }
    .header_topBar-top {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: #ea6000;
      border-bottom: 10px solid #fff; }
    .header_topBar-bottom {
      position: relative;
      height: 12px;
      background: #1d7fa7; }
    .header_topBar .web-link {
      margin: 9px 0 9px 20px;
      padding: 4px 9px 4px 14px;
      letter-spacing: 6px;
      font-size: 0.75rem;
      font-weight: 700;
      color: #1d7fa7;
      background: #fff;
      border: 2px solid #1d7fa7;
      border-radius: 20px;
      transition: all 0.5s; }
      .header_topBar .web-link:hover {
        color: #fff;
        background: #1d7fa7;
        border: 2px solid #fff; }
    .header_topBar .social-ink {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 70px; }
      .header_topBar .social-ink_btn {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 18px;
        width: 30px;
        height: 30px; }
        .header_topBar .social-ink_btn:last-child {
          margin-right: 0; }
    .header_topBar .join-link {
      position: absolute;
      top: -15px;
      right: 70px;
      width: 126px;
      z-index: -1;
      transition: all 0.5s; }
      @media only screen and (max-width: 1199px) {
        .header_topBar .join-link {
          top: -8px;
          width: 90px; } }
      .header_topBar .join-link:hover {
        -webkit-transform: translateY(15px);
                transform: translateY(15px); }
  .header_logo {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 70px;
    position: relative; }
    @media only screen and (max-width: 1199px) {
      .header_logo {
        margin-bottom: 50px; } }
    .header_logo_link {
      overflow: hidden;
      text-indent: 100%;
      white-space: nowrap;
      width: 278px;
      height: 159px;
      background-size: cover !important; }
  .header_nav .nav {
    display: flex;
    align-items: center;
    justify-content: center; }
    .header_nav .nav_item:not(:last-child) {
      margin-right: 24px; }
    .header_nav .nav_item a {
      padding: 12px 20px 12px 30px;
      letter-spacing: 10px;
      font-size: 1.5rem;
      font-weight: 700;
      border: 5px solid;
      border-radius: 30px; }
      @media only screen and (max-width: 1400px) {
        .header_nav .nav_item a {
          padding: 10px 10px 10px 15px;
          font-size: 1.25rem;
          letter-spacing: 5px; } }
      @media only screen and (max-width: 991px) {
        .header_nav .nav_item a {
          font-size: 1rem; } }
  .header_nav .color-border-primary {
    color: #1d7fa7;
    border-color: #1d7fa7;
    transition: all 0.5s; }
    .header_nav .color-border-primary:hover {
      color: #fff;
      background: #1d7fa7;
      border-color: #1d7fa7; }
  .header_nav .color-border-primary.active {
    color: #fff;
    background: #1d7fa7;
    border-color: #1d7fa7; }
  .header_nav .color-border-secondary {
    color: #ea6000;
    border-color: #ea6000;
    transition: all 0.5s; }
    .header_nav .color-border-secondary:hover {
      color: #fff;
      background: #ea6000;
      border-color: #ea6000; }
  .header_nav .color-border-secondary.active {
    color: #fff;
    background: #ea6000;
    border-color: #ea6000; }
  .header_nav .color-border-success {
    color: #1b806d;
    border-color: #1b806d;
    transition: all 0.5s; }
    .header_nav .color-border-success:hover {
      color: #fff;
      background: #1b806d;
      border-color: #1b806d; }
  .header_nav .color-border-success.active {
    color: #fff;
    background: #1b806d;
    border-color: #1b806d; }

.footer_nav {
  background: #1d7fa7; }

.footer_nav_wrap {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  margin: 0 auto 10px;
  padding: 56px 16px 70px;
  width: 100%;
  max-width: 1720px; }
  @media only screen and (max-width: 1400px) {
    .footer_nav_wrap {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 56px 30px 70px; } }
  @media only screen and (max-width: 767px) {
    .footer_nav_wrap {
      display: none; } }
  .footer_nav_wrap .page-details {
    display: flex;
    align-items: center;
    justify-content: center; }
    .footer_nav_wrap .page-details_item:not(:last-child) {
      margin-bottom: 26px; }
    .footer_nav_wrap .page-details_content {
      margin-right: 90px; }
      @media only screen and (max-width: 1400px) {
        .footer_nav_wrap .page-details_content {
          margin-right: 30px; } }
    .footer_nav_wrap .page-details h3 {
      margin-bottom: 26px;
      font-size: 2.5rem;
      font-weight: 700;
      color: #fff; }
      @media only screen and (max-width: 1400px) {
        .footer_nav_wrap .page-details h3 {
          font-size: 2rem; } }
      @media only screen and (max-width: 991px) {
        .footer_nav_wrap .page-details h3 {
          font-size: 1.5rem; } }
    .footer_nav_wrap .page-details a {
      font-size: 2rem;
      font-weight: normal;
      color: #fff; }
      @media only screen and (max-width: 1400px) {
        .footer_nav_wrap .page-details a {
          font-size: 1.5rem; } }
      @media only screen and (max-width: 991px) {
        .footer_nav_wrap .page-details a {
          font-size: 1.125rem; } }
  .footer_nav_wrap .page-list_item {
    font-size: 2.5rem;
    font-weight: 700; }
    @media only screen and (max-width: 1400px) {
      .footer_nav_wrap .page-list_item {
        font-size: 2rem; } }
    @media only screen and (max-width: 991px) {
      .footer_nav_wrap .page-list_item {
        font-size: 1.5rem; } }
    .footer_nav_wrap .page-list_item:not(:last-child) {
      margin-bottom: 22px; }
  .footer_nav_wrap .page-list a {
    color: #fff; }

.footer-logo {
  width: 430px; }
  @media only screen and (max-width: 1400px) {
    .footer-logo {
      width: 20%; } }

.footer-social {
  padding: 16px 0;
  background: #ea6000; }
  @media only screen and (max-width: 767px) {
    .footer-social {
      position: fixed;
      top: 0;
      left: 0;
      z-index: 500; } }
  .footer-social .social-link {
    display: flex;
    align-items: center;
    justify-content: center; }
    .footer-social .social-link_item:not(:last-child) {
      position: relative; }
      .footer-social .social-link_item:not(:last-child) a::after {
        position: absolute;
        top: 0;
        right: 0;
        content: '';
        width: 2px;
        height: 100%;
        background: #fff; }
  .footer-social a {
    padding: 0 34px;
    font-size: 2rem;
    color: #fff; }
    @media only screen and (max-width: 1400px) {
      .footer-social a {
        padding: 0 20px;
        font-size: 1.25rem; } }
    @media only screen and (max-width: 991px) {
      .footer-social a {
        font-size: 1rem; } }

.home {
  padding-top: 80px; }
  @media only screen and (max-width: 1199px) {
    .home {
      padding-top: 50px; } }
  .home .title-icon {
    width: 50px;
    height: 50px; }
    @media only screen and (max-width: 1199px) {
      .home .title-icon {
        width: 40px;
        height: 40px; } }
  .home .title {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3.25rem; }
    @media only screen and (max-width: 1199px) {
      .home .title {
        font-size: 2.875rem; } }
    .home .title h2 {
      margin: 0 24px;
      letter-spacing: 5px; }
  .home_banner_wrap {
    position: relative;
    margin: 0 auto 290px;
    max-width: 1560px; }
    @media only screen and (max-width: 1400px) {
      .home_banner_wrap {
        width: 90%;
        max-width: 100%;
        margin-bottom: 240px; } }
    @media only screen and (max-width: 1199px) {
      .home_banner_wrap {
        margin-bottom: 190px; } }
    @media only screen and (max-width: 991px) {
      .home_banner_wrap {
        margin-bottom: 160px; } }
    .home_banner_wrap .content {
      background-size: cover !important; }
    .home_banner_wrap .fire-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      bottom: -10%;
      left: 2%; }
      @media only screen and (max-width: 1199px) {
        .home_banner_wrap .fire-icon {
          bottom: -13%; } }
      .home_banner_wrap .fire-icon img {
        margin-right: 22px;
        width: 140px; }
        @media only screen and (max-width: 1400px) {
          .home_banner_wrap .fire-icon img {
            width: 12%; } }
      .home_banner_wrap .fire-icon span {
        font-size: 2.375rem;
        font-weight: 800;
        color: #ea6000;
        letter-spacing: 15px; }
        @media only screen and (max-width: 1400px) {
          .home_banner_wrap .fire-icon span {
            font-size: 1.875rem; } }
        @media only screen and (max-width: 1199px) {
          .home_banner_wrap .fire-icon span {
            letter-spacing: 8px; } }
        @media only screen and (max-width: 991px) {
          .home_banner_wrap .fire-icon span {
            font-size: 1.5rem; } }
    .home_banner_wrap .hot-icon {
      position: absolute;
      bottom: -15%;
      right: 4%; }
      @media only screen and (max-width: 1400px) {
        .home_banner_wrap .hot-icon {
          width: 15%; } }
  .home-about_wrap {
    margin: 0 auto 230px;
    max-width: 1228px; }
    @media only screen and (max-width: 1400px) {
      .home-about_wrap {
        width: 90%;
        max-width: 100%;
        margin-bottom: 140px; } }
    @media only screen and (max-width: 991px) {
      .home-about_wrap {
        margin-bottom: 90px; } }
    @media only screen and (max-width: 767px) {
      .home-about_wrap {
        margin-bottom: 60px; } }
    .home-about_wrap .images {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding-right: 100px;
      width: 50%; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .images {
          padding-right: 8%; } }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .images {
          padding-right: 5%; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .images {
          padding-right: 0;
          width: 100%; } }
      .home-about_wrap .images::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 7px;
        height: 100%;
        background: #c1ae8a;
        border-radius: 10px; }
        @media only screen and (max-width: 767px) {
          .home-about_wrap .images::after {
            display: none; } }
      .home-about_wrap .images > img {
        position: absolute; }
    .home-about_wrap .text {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      padding: 30px 0 50px 50px;
      width: 50%; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .text {
          padding: 30px 0 30px 50px; } }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .text {
          padding: 30px 0 10px 50px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .text {
          align-items: flex-start;
          padding: 30px 0 0;
          width: 100%; } }
    .home-about_wrap .subtitle {
      margin-bottom: 40px;
      margin-right: auto;
      font-size: 2.375rem;
      font-weight: 800;
      letter-spacing: 19px;
      color: #ea6000; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .subtitle {
          margin-bottom: 20px; } }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .subtitle {
          font-size: 2rem;
          letter-spacing: 10px; } }
    .home-about_wrap .paragraph {
      margin-bottom: 20px; }
    .home-about_wrap .paragraph p {
      font-size: 1.5rem;
      font-size: 1.25rem;
      font-weight: 700;
      color: #716752;
      line-height: 1.5; }
      @media only screen and (max-width: 1199px) {
        .home-about_wrap .paragraph p {
          font-size: 1rem; } }
      .home-about_wrap .paragraph p:not(:last-child) {
        margin-bottom: 30px; }
        @media only screen and (max-width: 1400px) {
          .home-about_wrap .paragraph p:not(:last-child) {
            margin-bottom: 15px; } }
    .home-about_wrap .more {
      display: flex;
      font-size: 1.75rem;
      background: #ea6000;
      letter-spacing: 18px;
      border-radius: 30px; }
      @media only screen and (max-width: 1400px) {
        .home-about_wrap .more {
          letter-spacing: 5px;
          font-size: 1.25rem; } }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .more {
          letter-spacing: 2px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .more {
          margin-left: auto; } }
      .home-about_wrap .more a {
        display: flex;
        padding: 14px 39px;
        color: #fff; }
        @media only screen and (max-width: 1400px) {
          .home-about_wrap .more a {
            align-items: center;
            padding: 16px 25px; } }
        @media only screen and (max-width: 991px) {
          .home-about_wrap .more a {
            padding: 15px;
            font-size: 1rem; } }
      .home-about_wrap .more:hover .arrow {
        -webkit-transform: translateX(10px);
                transform: translateX(10px); }
    .home-about_wrap .arrow {
      display: flex;
      transition: all 0.5s; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .arrow {
          display: none; } }
      .home-about_wrap .arrow img {
        margin-right: 2px;
        width: 12px; }
        @media only screen and (max-width: 1400px) {
          .home-about_wrap .arrow img {
            width: 8px; } }
    .home-about_wrap .title {
      color: #c1ae8a;
      margin-bottom: 67px; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .title {
          margin-bottom: 50px; } }
    .home-about_wrap .egg {
      width: 172px; }
    .home-about_wrap .clip {
      width: 83px; }
    .home-about_wrap .stove {
      width: 110px; }
    .home-about_wrap .icon1 {
      width: 182px; }
    .home-about_wrap .icon2 {
      width: 153px; }
    .home-about_wrap .toast {
      position: absolute;
      top: 27px;
      right: -27px;
      width: 70px;
      z-index: 1; }
      @media only screen and (max-width: 991px) {
        .home-about_wrap .toast {
          right: -18px;
          width: 50px; } }
      @media only screen and (max-width: 767px) {
        .home-about_wrap .toast {
          display: none; } }
    .home-about_wrap .box {
      background-repeat: no-repeat !important;
      background-size: cover !important; }
  .home-about_content {
    display: flex; }
    @media only screen and (max-width: 767px) {
      .home-about_content {
        flex-direction: column; } }
  .home-menu_wrap {
    position: relative;
    overflow: hidden;
    padding: 40px 0 80px;
    margin-bottom: 160px;
    background: #ea6000; }
    @media only screen and (max-width: 1400px) {
      .home-menu_wrap {
        margin-bottom: 140px; } }
    @media only screen and (max-width: 1199px) {
      .home-menu_wrap {
        margin-bottom: 100px; } }
    @media only screen and (max-width: 991px) {
      .home-menu_wrap {
        margin-bottom: 75px;
        padding: 40px 0 20px; } }
    .home-menu_wrap .title {
      position: relative;
      color: #fff;
      margin-bottom: 20px; }
      .home-menu_wrap .title h2 {
        position: absolute;
        display: flex;
        margin: 0;
        font-size: 2.5rem; }
      .home-menu_wrap .title-lattice {
        width: 304px; }
      .home-menu_wrap .title .letter {
        width: 60px;
        height: 60px;
        text-align: center;
        line-height: 60px; }
    .home-menu_wrap .icon1 {
      position: absolute;
      top: -103px;
      left: -6%;
      width: 340px; }
      @media only screen and (max-width: 1400px) {
        .home-menu_wrap .icon1 {
          top: -10%;
          left: -9%;
          width: 20%; } }
    .home-menu_wrap .icon2 {
      position: absolute;
      bottom: -157px;
      right: -12%;
      width: 390px; }
      @media only screen and (max-width: 1400px) {
        .home-menu_wrap .icon2 {
          bottom: -12%;
          right: -10%;
          width: 20%; } }
  .home-menu_slick {
    position: relative;
    display: flex;
    width: 110%;
    -webkit-transform: translateX(-5%);
            transform: translateX(-5%);
    z-index: 1; }
    .home-menu_slick .slick-list {
      padding: 30px 0; }
      @media only screen and (max-width: 991px) {
        .home-menu_slick .slick-list {
          padding: 40px 0 30px; } }
    .home-menu_slick_item {
      position: relative;
      padding: 25px; }
      .home-menu_slick_item::after {
        position: absolute;
        bottom: 7px;
        right: 11px;
        width: 90%;
        height: 89%;
        background: #fff;
        border-radius: 50%;
        z-index: -1;
        content: ''; }
      .home-menu_slick_item img {
        position: relative;
        z-index: 10;
        transition: all 0.5s; }
      .home-menu_slick_item:hover img {
        -webkit-transform: translate(60px, -60px);
                transform: translate(60px, -60px); }
      .home-menu_slick_item:hover .text {
        opacity: 1; }
      .home-menu_slick_item a {
        position: relative; }
      .home-menu_slick_item .text {
        position: absolute;
        bottom: 11%;
        left: 11%;
        font-size: 1.875rem;
        font-weight: 600;
        -webkit-transform: rotate(34deg);
                transform: rotate(34deg);
        opacity: 0;
        transition: all 0.5s; }
        @media only screen and (max-width: 1400px) {
          .home-menu_slick_item .text {
            font-size: 1.5rem; } }
        @media only screen and (max-width: 991px) {
          .home-menu_slick_item .text {
            bottom: 10%;
            left: 0; } }
    .home-menu_slick_item.circle::after {
      bottom: 12px;
      right: 16px;
      width: 80%;
      height: 80%;
      border-radius: 10%;
      -webkit-transform: rotate(5deg);
              transform: rotate(5deg); }
    .home-menu_slick_item.circle .text {
      bottom: 8%;
      left: 12%; }
  .home-news_wrap {
    padding-bottom: 170px; }
    @media only screen and (max-width: 1400px) {
      .home-news_wrap {
        padding-bottom: 120px; } }
    @media only screen and (max-width: 991px) {
      .home-news_wrap {
        padding-bottom: 80px; } }
    .home-news_wrap .title {
      color: #ea6000;
      margin-bottom: 70px; }
      @media only screen and (max-width: 1400px) {
        .home-news_wrap .title {
          margin-bottom: 40px; } }
    .home-news_wrap .title-icon1 {
      width: 40px;
      height: 40px; }
    .home-news_wrap .icon-group {
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto;
      max-width: 1520px; }
      .home-news_wrap .icon-group img {
        padding: 0 18px;
        width: calc(100% / 12); }
  .home-news_content {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto 135px;
    padding: 0 16px;
    width: 100%;
    max-width: 1520px; }
    @media only screen and (max-width: 1400px) {
      .home-news_content {
        width: 90%;
        max-width: 100%;
        margin-bottom: 100px; } }
    @media only screen and (max-width: 991px) {
      .home-news_content {
        padding: 16px;
        width: 100%; } }
    @media only screen and (max-width: 767px) {
      .home-news_content {
        display: flex;
        flex-direction: column; } }
    .home-news_content_item {
      position: relative;
      width: 28%; }
      @media only screen and (max-width: 767px) {
        .home-news_content_item {
          width: 50%; } }
      .home-news_content_item:not(:last-child) {
        margin-right: 8%; }
        @media only screen and (max-width: 767px) {
          .home-news_content_item:not(:last-child) {
            margin-right: 0%;
            margin-bottom: 90px; } }
    .home-news_content .content {
      position: relative;
      background-position: center !important;
      background-repeat: no-repeat !important;
      background-size: cover !important;
      transition: all 0.5s; }
      .home-news_content .content-title {
        position: absolute;
        width: 100%;
        font-size: 3rem;
        font-weight: 800;
        letter-spacing: 5px;
        text-align: center; }
        @media only screen and (max-width: 1400px) {
          .home-news_content .content-title {
            font-size: 2.1875rem; } }
        @media only screen and (max-width: 991px) {
          .home-news_content .content-title {
            font-size: 1.75rem; } }
    .home-news_content .ct1 {
      bottom: -70px; }
      @media only screen and (max-width: 991px) {
        .home-news_content .ct1 {
          bottom: -50px; } }
      @media only screen and (max-width: 767px) {
        .home-news_content .ct1 {
          bottom: -47px; } }
    .home-news_content .ct2 {
      bottom: -92px; }
      @media only screen and (max-width: 991px) {
        .home-news_content .ct2 {
          bottom: -72px; } }
      @media only screen and (max-width: 767px) {
        .home-news_content .ct2 {
          bottom: -47px; } }
    .home-news_content .ct3 {
      bottom: -115px; }
      @media only screen and (max-width: 991px) {
        .home-news_content .ct3 {
          bottom: -95px; } }
      @media only screen and (max-width: 767px) {
        .home-news_content .ct3 {
          bottom: -47px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
